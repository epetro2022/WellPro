//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LowisChartApp.ds.BeamWellGroupConfiguration {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BeamWellDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BeamWellDataSet : global::System.Data.DataSet {
        
        private BeamWellDataTable tableBeamWell;
        
        private Beam_Well_Group_ConfigurationDataTable tableBeam_Well_Group_Configuration;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public BeamWellDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected BeamWellDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BeamWell"] != null)) {
                    base.Tables.Add(new BeamWellDataTable(ds.Tables["BeamWell"]));
                }
                if ((ds.Tables["Beam_Well_Group_Configuration"] != null)) {
                    base.Tables.Add(new Beam_Well_Group_ConfigurationDataTable(ds.Tables["Beam_Well_Group_Configuration"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BeamWellDataTable BeamWell {
            get {
                return this.tableBeamWell;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Beam_Well_Group_ConfigurationDataTable Beam_Well_Group_Configuration {
            get {
                return this.tableBeam_Well_Group_Configuration;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BeamWellDataSet cln = ((BeamWellDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BeamWell"] != null)) {
                    base.Tables.Add(new BeamWellDataTable(ds.Tables["BeamWell"]));
                }
                if ((ds.Tables["Beam_Well_Group_Configuration"] != null)) {
                    base.Tables.Add(new Beam_Well_Group_ConfigurationDataTable(ds.Tables["Beam_Well_Group_Configuration"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableBeamWell = ((BeamWellDataTable)(base.Tables["BeamWell"]));
            if ((initTable == true)) {
                if ((this.tableBeamWell != null)) {
                    this.tableBeamWell.InitVars();
                }
            }
            this.tableBeam_Well_Group_Configuration = ((Beam_Well_Group_ConfigurationDataTable)(base.Tables["Beam_Well_Group_Configuration"]));
            if ((initTable == true)) {
                if ((this.tableBeam_Well_Group_Configuration != null)) {
                    this.tableBeam_Well_Group_Configuration.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BeamWellDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BeamWellDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBeamWell = new BeamWellDataTable();
            base.Tables.Add(this.tableBeamWell);
            this.tableBeam_Well_Group_Configuration = new Beam_Well_Group_ConfigurationDataTable();
            base.Tables.Add(this.tableBeam_Well_Group_Configuration);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeBeamWell() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeBeam_Well_Group_Configuration() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BeamWellDataSet ds = new BeamWellDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void BeamWellRowChangeEventHandler(object sender, BeamWellRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void Beam_Well_Group_ConfigurationRowChangeEventHandler(object sender, Beam_Well_Group_ConfigurationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BeamWellDataTable : global::System.Data.TypedTableBase<BeamWellRow> {
            
            private global::System.Data.DataColumn columnwellname;
            
            private global::System.Data.DataColumn columnnavigator_name;
            
            private global::System.Data.DataColumn columnCAO_ID;
            
            private global::System.Data.DataColumn columnLong_Name;
            
            private global::System.Data.DataColumn columnInternal_ID;
            
            private global::System.Data.DataColumn columnGroup1;
            
            private global::System.Data.DataColumn columnGroup2;
            
            private global::System.Data.DataColumn columnGroup3;
            
            private global::System.Data.DataColumn columnGroup4;
            
            private global::System.Data.DataColumn columnFacility_Description;
            
            private global::System.Data.DataColumn columnRodpum_Controller;
            
            private global::System.Data.DataColumn columnController_Type;
            
            private global::System.Data.DataColumn columnSub_Controller_Type;
            
            private global::System.Data.DataColumn columnCommunication_Protocol;
            
            private global::System.Data.DataColumn columnCommunication_Port;
            
            private global::System.Data.DataColumn columnCommunication_Address;
            
            private global::System.Data.DataColumn columnAlt_Address;
            
            private global::System.Data.DataColumn columnComm_retry;
            
            private global::System.Data.DataColumn columnKey_On_Delay;
            
            private global::System.Data.DataColumn columnKey_Off_Delay;
            
            private global::System.Data.DataColumn columnAlarm_Delay;
            
            private global::System.Data.DataColumn columnClear_Delay;
            
            private global::System.Data.DataColumn columnMax_Event_History_Recs;
            
            private global::System.Data.DataColumn columnTop_Perforation;
            
            private global::System.Data.DataColumn columnBottom_Perforation;
            
            private global::System.Data.DataColumn columnAnchor_depth;
            
            private global::System.Data.DataColumn columnPlug_Back_TD;
            
            private global::System.Data.DataColumn columnPump_Measured;
            
            private global::System.Data.DataColumn columnPump_Vertical;
            
            private global::System.Data.DataColumn columnPump_ID;
            
            private global::System.Data.DataColumn columnCasing_Valve_Open;
            
            private global::System.Data.DataColumn columnCasing_OD;
            
            private global::System.Data.DataColumn columnCasing_Weight;
            
            private global::System.Data.DataColumn columnTubing_OD;
            
            private global::System.Data.DataColumn columnOil;
            
            private global::System.Data.DataColumn columnWater;
            
            private global::System.Data.DataColumn columnGas;
            
            private global::System.Data.DataColumn columnLast_WT_date;
            
            private global::System.Data.DataColumn columnOil_Gravity;
            
            private global::System.Data.DataColumn columnWater_SP_Grav;
            
            private global::System.Data.DataColumn columnGas_Sp_Grav;
            
            private global::System.Data.DataColumn columnTubing_Press;
            
            private global::System.Data.DataColumn columnTubing_Gradient;
            
            private global::System.Data.DataColumn columnTubing_Temp_Whead;
            
            private global::System.Data.DataColumn columnCasing_Press;
            
            private global::System.Data.DataColumn columnCasing_Oil_Cut;
            
            private global::System.Data.DataColumn columnFluid_Level_From_Surface;
            
            private global::System.Data.DataColumn columnFluid_Level_Shot_Date;
            
            private global::System.Data.DataColumn columnFluid_Level_Comment;
            
            private global::System.Data.DataColumn columnUse_Fluid_Insertia_For_Analysis;
            
            private global::System.Data.DataColumn columnUnit_Type;
            
            private global::System.Data.DataColumn columnPumping_Unit;
            
            private global::System.Data.DataColumn columnWrist_Pin;
            
            private global::System.Data.DataColumn columnActual_Stroke;
            
            private global::System.Data.DataColumn columnTorque_Methode;
            
            private global::System.Data.DataColumn columnRotation;
            
            private global::System.Data.DataColumn columnMotor_Type;
            
            private global::System.Data.DataColumn columnMotor_Size;
            
            private global::System.Data.DataColumn columnSlip_Torque;
            
            private global::System.Data.DataColumn columnMeasured_Motor_Amps_Up;
            
            private global::System.Data.DataColumn columnMeasured_Motor_Amps_Down;
            
            private global::System.Data.DataColumn columnMax_Air_Balance_Press;
            
            private global::System.Data.DataColumn columnMin_Air_Balance_Press;
            
            private global::System.Data.DataColumn columnCrank_ID;
            
            private global::System.Data.DataColumn columnCBT;
            
            private global::System.Data.DataColumn columnC1_Lead_Distance;
            
            private global::System.Data.DataColumn columnC1_Lead_Primary_Wt;
            
            private global::System.Data.DataColumn columnC1_Lead_Aux_WT;
            
            private global::System.Data.DataColumn columnC1_lag_Distance;
            
            private global::System.Data.DataColumn columnC1_Lag_Primary_Wt;
            
            private global::System.Data.DataColumn columnC1_Lag_Aux_Wt;
            
            private global::System.Data.DataColumn columnC2_Lead_Distance;
            
            private global::System.Data.DataColumn columnC2_Lead_Primary_Wt;
            
            private global::System.Data.DataColumn columnC2_Lead_Aux_WT;
            
            private global::System.Data.DataColumn columnC2_lag_Distance;
            
            private global::System.Data.DataColumn columnC2_Lag_Primary_Wt;
            
            private global::System.Data.DataColumn columnC2_Lag_Aux_Wt;
            
            private global::System.Data.DataColumn columnFluid_Above_Pump;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellDataTable() {
                this.TableName = "BeamWell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal BeamWellDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected BeamWellDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn wellnameColumn {
                get {
                    return this.columnwellname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn navigator_nameColumn {
                get {
                    return this.columnnavigator_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CAO_IDColumn {
                get {
                    return this.columnCAO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Long_NameColumn {
                get {
                    return this.columnLong_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Internal_IDColumn {
                get {
                    return this.columnInternal_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group1Column {
                get {
                    return this.columnGroup1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group2Column {
                get {
                    return this.columnGroup2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group3Column {
                get {
                    return this.columnGroup3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group4Column {
                get {
                    return this.columnGroup4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Facility_DescriptionColumn {
                get {
                    return this.columnFacility_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Rodpum_ControllerColumn {
                get {
                    return this.columnRodpum_Controller;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Controller_TypeColumn {
                get {
                    return this.columnController_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Sub_Controller_TypeColumn {
                get {
                    return this.columnSub_Controller_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Communication_ProtocolColumn {
                get {
                    return this.columnCommunication_Protocol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Communication_PortColumn {
                get {
                    return this.columnCommunication_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Communication_AddressColumn {
                get {
                    return this.columnCommunication_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Alt_AddressColumn {
                get {
                    return this.columnAlt_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Comm_retryColumn {
                get {
                    return this.columnComm_retry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Key_On_DelayColumn {
                get {
                    return this.columnKey_On_Delay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Key_Off_DelayColumn {
                get {
                    return this.columnKey_Off_Delay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Alarm_DelayColumn {
                get {
                    return this.columnAlarm_Delay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Clear_DelayColumn {
                get {
                    return this.columnClear_Delay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Max_Event_History_RecsColumn {
                get {
                    return this.columnMax_Event_History_Recs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Top_PerforationColumn {
                get {
                    return this.columnTop_Perforation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Bottom_PerforationColumn {
                get {
                    return this.columnBottom_Perforation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Anchor_depthColumn {
                get {
                    return this.columnAnchor_depth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Plug_Back_TDColumn {
                get {
                    return this.columnPlug_Back_TD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Pump_MeasuredColumn {
                get {
                    return this.columnPump_Measured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Pump_VerticalColumn {
                get {
                    return this.columnPump_Vertical;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Pump_IDColumn {
                get {
                    return this.columnPump_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_Valve_OpenColumn {
                get {
                    return this.columnCasing_Valve_Open;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_ODColumn {
                get {
                    return this.columnCasing_OD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_WeightColumn {
                get {
                    return this.columnCasing_Weight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tubing_ODColumn {
                get {
                    return this.columnTubing_OD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OilColumn {
                get {
                    return this.columnOil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WaterColumn {
                get {
                    return this.columnWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GasColumn {
                get {
                    return this.columnGas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Last_WT_dateColumn {
                get {
                    return this.columnLast_WT_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Oil_GravityColumn {
                get {
                    return this.columnOil_Gravity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Water_SP_GravColumn {
                get {
                    return this.columnWater_SP_Grav;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Gas_Sp_GravColumn {
                get {
                    return this.columnGas_Sp_Grav;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tubing_PressColumn {
                get {
                    return this.columnTubing_Press;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tubing_GradientColumn {
                get {
                    return this.columnTubing_Gradient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tubing_Temp_WheadColumn {
                get {
                    return this.columnTubing_Temp_Whead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_PressColumn {
                get {
                    return this.columnCasing_Press;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_Oil_CutColumn {
                get {
                    return this.columnCasing_Oil_Cut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fluid_Level_From_SurfaceColumn {
                get {
                    return this.columnFluid_Level_From_Surface;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fluid_Level_Shot_DateColumn {
                get {
                    return this.columnFluid_Level_Shot_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fluid_Level_CommentColumn {
                get {
                    return this.columnFluid_Level_Comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Use_Fluid_Insertia_For_AnalysisColumn {
                get {
                    return this.columnUse_Fluid_Insertia_For_Analysis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Unit_TypeColumn {
                get {
                    return this.columnUnit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Pumping_UnitColumn {
                get {
                    return this.columnPumping_Unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Wrist_PinColumn {
                get {
                    return this.columnWrist_Pin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Actual_StrokeColumn {
                get {
                    return this.columnActual_Stroke;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Torque_MethodeColumn {
                get {
                    return this.columnTorque_Methode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RotationColumn {
                get {
                    return this.columnRotation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Motor_TypeColumn {
                get {
                    return this.columnMotor_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Motor_SizeColumn {
                get {
                    return this.columnMotor_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Slip_TorqueColumn {
                get {
                    return this.columnSlip_Torque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Measured_Motor_Amps_UpColumn {
                get {
                    return this.columnMeasured_Motor_Amps_Up;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Measured_Motor_Amps_DownColumn {
                get {
                    return this.columnMeasured_Motor_Amps_Down;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Max_Air_Balance_PressColumn {
                get {
                    return this.columnMax_Air_Balance_Press;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Min_Air_Balance_PressColumn {
                get {
                    return this.columnMin_Air_Balance_Press;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Crank_IDColumn {
                get {
                    return this.columnCrank_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CBTColumn {
                get {
                    return this.columnCBT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lead_DistanceColumn {
                get {
                    return this.columnC1_Lead_Distance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lead_Primary_WtColumn {
                get {
                    return this.columnC1_Lead_Primary_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lead_Aux_WTColumn {
                get {
                    return this.columnC1_Lead_Aux_WT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_lag_DistanceColumn {
                get {
                    return this.columnC1_lag_Distance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lag_Primary_WtColumn {
                get {
                    return this.columnC1_Lag_Primary_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lag_Aux_WtColumn {
                get {
                    return this.columnC1_Lag_Aux_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lead_DistanceColumn {
                get {
                    return this.columnC2_Lead_Distance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lead_Primary_WtColumn {
                get {
                    return this.columnC2_Lead_Primary_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lead_Aux_WTColumn {
                get {
                    return this.columnC2_Lead_Aux_WT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_lag_DistanceColumn {
                get {
                    return this.columnC2_lag_Distance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lag_Primary_WtColumn {
                get {
                    return this.columnC2_Lag_Primary_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lag_Aux_WtColumn {
                get {
                    return this.columnC2_Lag_Aux_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fluid_Above_PumpColumn {
                get {
                    return this.columnFluid_Above_Pump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow this[int index] {
                get {
                    return ((BeamWellRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event BeamWellRowChangeEventHandler BeamWellRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event BeamWellRowChangeEventHandler BeamWellRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event BeamWellRowChangeEventHandler BeamWellRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event BeamWellRowChangeEventHandler BeamWellRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddBeamWellRow(BeamWellRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow AddBeamWellRow(
                        string wellname, 
                        string navigator_name, 
                        string CAO_ID, 
                        string Long_Name, 
                        string Internal_ID, 
                        string Group1, 
                        string Group2, 
                        string Group3, 
                        string Group4, 
                        string Facility_Description, 
                        string Rodpum_Controller, 
                        string Controller_Type, 
                        string Sub_Controller_Type, 
                        string Communication_Protocol, 
                        string Communication_Port, 
                        int Communication_Address, 
                        int Alt_Address, 
                        int Comm_retry, 
                        int Key_On_Delay, 
                        int Key_Off_Delay, 
                        int Alarm_Delay, 
                        int Clear_Delay, 
                        int Max_Event_History_Recs, 
                        decimal Top_Perforation, 
                        decimal Bottom_Perforation, 
                        decimal Anchor_depth, 
                        decimal Plug_Back_TD, 
                        decimal Pump_Measured, 
                        decimal Pump_Vertical, 
                        decimal Pump_ID, 
                        string Casing_Valve_Open, 
                        decimal Casing_OD, 
                        decimal Casing_Weight, 
                        decimal Tubing_OD, 
                        decimal Oil, 
                        decimal Water, 
                        decimal Gas, 
                        System.DateTime Last_WT_date, 
                        decimal Oil_Gravity, 
                        decimal Water_SP_Grav, 
                        decimal Gas_Sp_Grav, 
                        decimal Tubing_Press, 
                        decimal Tubing_Gradient, 
                        decimal Tubing_Temp_Whead, 
                        decimal Casing_Press, 
                        decimal Casing_Oil_Cut, 
                        decimal Fluid_Level_From_Surface, 
                        System.DateTime Fluid_Level_Shot_Date, 
                        string Fluid_Level_Comment, 
                        string Use_Fluid_Insertia_For_Analysis, 
                        string Unit_Type, 
                        string Pumping_Unit, 
                        int Wrist_Pin, 
                        decimal Actual_Stroke, 
                        string Torque_Methode, 
                        string Rotation, 
                        string Motor_Type, 
                        decimal Motor_Size, 
                        decimal Slip_Torque, 
                        decimal Measured_Motor_Amps_Up, 
                        decimal Measured_Motor_Amps_Down, 
                        decimal Max_Air_Balance_Press, 
                        decimal Min_Air_Balance_Press, 
                        string Crank_ID, 
                        decimal CBT, 
                        decimal C1_Lead_Distance, 
                        string C1_Lead_Primary_Wt, 
                        string C1_Lead_Aux_WT, 
                        decimal C1_lag_Distance, 
                        string C1_Lag_Primary_Wt, 
                        string C1_Lag_Aux_Wt, 
                        decimal C2_Lead_Distance, 
                        string C2_Lead_Primary_Wt, 
                        string C2_Lead_Aux_WT, 
                        decimal C2_lag_Distance, 
                        string C2_Lag_Primary_Wt, 
                        string C2_Lag_Aux_Wt, 
                        decimal Fluid_Above_Pump) {
                BeamWellRow rowBeamWellRow = ((BeamWellRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        wellname,
                        navigator_name,
                        CAO_ID,
                        Long_Name,
                        Internal_ID,
                        Group1,
                        Group2,
                        Group3,
                        Group4,
                        Facility_Description,
                        Rodpum_Controller,
                        Controller_Type,
                        Sub_Controller_Type,
                        Communication_Protocol,
                        Communication_Port,
                        Communication_Address,
                        Alt_Address,
                        Comm_retry,
                        Key_On_Delay,
                        Key_Off_Delay,
                        Alarm_Delay,
                        Clear_Delay,
                        Max_Event_History_Recs,
                        Top_Perforation,
                        Bottom_Perforation,
                        Anchor_depth,
                        Plug_Back_TD,
                        Pump_Measured,
                        Pump_Vertical,
                        Pump_ID,
                        Casing_Valve_Open,
                        Casing_OD,
                        Casing_Weight,
                        Tubing_OD,
                        Oil,
                        Water,
                        Gas,
                        Last_WT_date,
                        Oil_Gravity,
                        Water_SP_Grav,
                        Gas_Sp_Grav,
                        Tubing_Press,
                        Tubing_Gradient,
                        Tubing_Temp_Whead,
                        Casing_Press,
                        Casing_Oil_Cut,
                        Fluid_Level_From_Surface,
                        Fluid_Level_Shot_Date,
                        Fluid_Level_Comment,
                        Use_Fluid_Insertia_For_Analysis,
                        Unit_Type,
                        Pumping_Unit,
                        Wrist_Pin,
                        Actual_Stroke,
                        Torque_Methode,
                        Rotation,
                        Motor_Type,
                        Motor_Size,
                        Slip_Torque,
                        Measured_Motor_Amps_Up,
                        Measured_Motor_Amps_Down,
                        Max_Air_Balance_Press,
                        Min_Air_Balance_Press,
                        Crank_ID,
                        CBT,
                        C1_Lead_Distance,
                        C1_Lead_Primary_Wt,
                        C1_Lead_Aux_WT,
                        C1_lag_Distance,
                        C1_Lag_Primary_Wt,
                        C1_Lag_Aux_Wt,
                        C2_Lead_Distance,
                        C2_Lead_Primary_Wt,
                        C2_Lead_Aux_WT,
                        C2_lag_Distance,
                        C2_Lag_Primary_Wt,
                        C2_Lag_Aux_Wt,
                        Fluid_Above_Pump};
                rowBeamWellRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBeamWellRow);
                return rowBeamWellRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow FindBywellname(string wellname) {
                return ((BeamWellRow)(this.Rows.Find(new object[] {
                            wellname})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BeamWellDataTable cln = ((BeamWellDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BeamWellDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnwellname = base.Columns["wellname"];
                this.columnnavigator_name = base.Columns["navigator_name"];
                this.columnCAO_ID = base.Columns["CAO_ID"];
                this.columnLong_Name = base.Columns["Long_Name"];
                this.columnInternal_ID = base.Columns["Internal_ID"];
                this.columnGroup1 = base.Columns["Group1"];
                this.columnGroup2 = base.Columns["Group2"];
                this.columnGroup3 = base.Columns["Group3"];
                this.columnGroup4 = base.Columns["Group4"];
                this.columnFacility_Description = base.Columns["Facility_Description"];
                this.columnRodpum_Controller = base.Columns["Rodpum_Controller"];
                this.columnController_Type = base.Columns["Controller_Type"];
                this.columnSub_Controller_Type = base.Columns["Sub_Controller_Type"];
                this.columnCommunication_Protocol = base.Columns["Communication_Protocol"];
                this.columnCommunication_Port = base.Columns["Communication_Port"];
                this.columnCommunication_Address = base.Columns["Communication_Address"];
                this.columnAlt_Address = base.Columns["Alt_Address"];
                this.columnComm_retry = base.Columns["Comm_retry"];
                this.columnKey_On_Delay = base.Columns["Key_On_Delay"];
                this.columnKey_Off_Delay = base.Columns["Key_Off_Delay"];
                this.columnAlarm_Delay = base.Columns["Alarm_Delay"];
                this.columnClear_Delay = base.Columns["Clear_Delay"];
                this.columnMax_Event_History_Recs = base.Columns["Max_Event_History_Recs"];
                this.columnTop_Perforation = base.Columns["Top_Perforation"];
                this.columnBottom_Perforation = base.Columns["Bottom_Perforation"];
                this.columnAnchor_depth = base.Columns["Anchor_depth"];
                this.columnPlug_Back_TD = base.Columns["Plug_Back_TD"];
                this.columnPump_Measured = base.Columns["Pump_Measured"];
                this.columnPump_Vertical = base.Columns["Pump_Vertical"];
                this.columnPump_ID = base.Columns["Pump_ID"];
                this.columnCasing_Valve_Open = base.Columns["Casing_Valve_Open"];
                this.columnCasing_OD = base.Columns["Casing_OD"];
                this.columnCasing_Weight = base.Columns["Casing_Weight"];
                this.columnTubing_OD = base.Columns["Tubing_OD"];
                this.columnOil = base.Columns["Oil"];
                this.columnWater = base.Columns["Water"];
                this.columnGas = base.Columns["Gas"];
                this.columnLast_WT_date = base.Columns["Last_WT_date"];
                this.columnOil_Gravity = base.Columns["Oil_Gravity"];
                this.columnWater_SP_Grav = base.Columns["Water_SP_Grav"];
                this.columnGas_Sp_Grav = base.Columns["Gas_Sp_Grav"];
                this.columnTubing_Press = base.Columns["Tubing_Press"];
                this.columnTubing_Gradient = base.Columns["Tubing_Gradient"];
                this.columnTubing_Temp_Whead = base.Columns["Tubing_Temp_Whead"];
                this.columnCasing_Press = base.Columns["Casing_Press"];
                this.columnCasing_Oil_Cut = base.Columns["Casing_Oil_Cut"];
                this.columnFluid_Level_From_Surface = base.Columns["Fluid_Level_From_Surface"];
                this.columnFluid_Level_Shot_Date = base.Columns["Fluid_Level_Shot_Date"];
                this.columnFluid_Level_Comment = base.Columns["Fluid_Level_Comment"];
                this.columnUse_Fluid_Insertia_For_Analysis = base.Columns["Use_Fluid_Insertia_For_Analysis"];
                this.columnUnit_Type = base.Columns["Unit_Type"];
                this.columnPumping_Unit = base.Columns["Pumping_Unit"];
                this.columnWrist_Pin = base.Columns["Wrist_Pin"];
                this.columnActual_Stroke = base.Columns["Actual_Stroke"];
                this.columnTorque_Methode = base.Columns["Torque_Methode"];
                this.columnRotation = base.Columns["Rotation"];
                this.columnMotor_Type = base.Columns["Motor_Type"];
                this.columnMotor_Size = base.Columns["Motor_Size"];
                this.columnSlip_Torque = base.Columns["Slip_Torque"];
                this.columnMeasured_Motor_Amps_Up = base.Columns["Measured_Motor_Amps_Up"];
                this.columnMeasured_Motor_Amps_Down = base.Columns["Measured_Motor_Amps_Down"];
                this.columnMax_Air_Balance_Press = base.Columns["Max_Air_Balance_Press"];
                this.columnMin_Air_Balance_Press = base.Columns["Min_Air_Balance_Press"];
                this.columnCrank_ID = base.Columns["Crank_ID"];
                this.columnCBT = base.Columns["CBT"];
                this.columnC1_Lead_Distance = base.Columns["C1_Lead_Distance"];
                this.columnC1_Lead_Primary_Wt = base.Columns["C1_Lead_Primary_Wt"];
                this.columnC1_Lead_Aux_WT = base.Columns["C1_Lead_Aux_WT"];
                this.columnC1_lag_Distance = base.Columns["C1_lag_Distance"];
                this.columnC1_Lag_Primary_Wt = base.Columns["C1_Lag_Primary_Wt"];
                this.columnC1_Lag_Aux_Wt = base.Columns["C1_Lag_Aux_Wt"];
                this.columnC2_Lead_Distance = base.Columns["C2_Lead_Distance"];
                this.columnC2_Lead_Primary_Wt = base.Columns["C2_Lead_Primary_Wt"];
                this.columnC2_Lead_Aux_WT = base.Columns["C2_Lead_Aux_WT"];
                this.columnC2_lag_Distance = base.Columns["C2_lag_Distance"];
                this.columnC2_Lag_Primary_Wt = base.Columns["C2_Lag_Primary_Wt"];
                this.columnC2_Lag_Aux_Wt = base.Columns["C2_Lag_Aux_Wt"];
                this.columnFluid_Above_Pump = base.Columns["Fluid_Above_Pump"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnwellname = new global::System.Data.DataColumn("wellname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwellname);
                this.columnnavigator_name = new global::System.Data.DataColumn("navigator_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnavigator_name);
                this.columnCAO_ID = new global::System.Data.DataColumn("CAO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAO_ID);
                this.columnLong_Name = new global::System.Data.DataColumn("Long_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLong_Name);
                this.columnInternal_ID = new global::System.Data.DataColumn("Internal_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInternal_ID);
                this.columnGroup1 = new global::System.Data.DataColumn("Group1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup1);
                this.columnGroup2 = new global::System.Data.DataColumn("Group2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup2);
                this.columnGroup3 = new global::System.Data.DataColumn("Group3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup3);
                this.columnGroup4 = new global::System.Data.DataColumn("Group4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup4);
                this.columnFacility_Description = new global::System.Data.DataColumn("Facility_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacility_Description);
                this.columnRodpum_Controller = new global::System.Data.DataColumn("Rodpum_Controller", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodpum_Controller);
                this.columnController_Type = new global::System.Data.DataColumn("Controller_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnController_Type);
                this.columnSub_Controller_Type = new global::System.Data.DataColumn("Sub_Controller_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSub_Controller_Type);
                this.columnCommunication_Protocol = new global::System.Data.DataColumn("Communication_Protocol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommunication_Protocol);
                this.columnCommunication_Port = new global::System.Data.DataColumn("Communication_Port", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommunication_Port);
                this.columnCommunication_Address = new global::System.Data.DataColumn("Communication_Address", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommunication_Address);
                this.columnAlt_Address = new global::System.Data.DataColumn("Alt_Address", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlt_Address);
                this.columnComm_retry = new global::System.Data.DataColumn("Comm_retry", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_retry);
                this.columnKey_On_Delay = new global::System.Data.DataColumn("Key_On_Delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKey_On_Delay);
                this.columnKey_Off_Delay = new global::System.Data.DataColumn("Key_Off_Delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKey_Off_Delay);
                this.columnAlarm_Delay = new global::System.Data.DataColumn("Alarm_Delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlarm_Delay);
                this.columnClear_Delay = new global::System.Data.DataColumn("Clear_Delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Delay);
                this.columnMax_Event_History_Recs = new global::System.Data.DataColumn("Max_Event_History_Recs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Event_History_Recs);
                this.columnTop_Perforation = new global::System.Data.DataColumn("Top_Perforation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTop_Perforation);
                this.columnBottom_Perforation = new global::System.Data.DataColumn("Bottom_Perforation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBottom_Perforation);
                this.columnAnchor_depth = new global::System.Data.DataColumn("Anchor_depth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnchor_depth);
                this.columnPlug_Back_TD = new global::System.Data.DataColumn("Plug_Back_TD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlug_Back_TD);
                this.columnPump_Measured = new global::System.Data.DataColumn("Pump_Measured", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPump_Measured);
                this.columnPump_Vertical = new global::System.Data.DataColumn("Pump_Vertical", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPump_Vertical);
                this.columnPump_ID = new global::System.Data.DataColumn("Pump_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPump_ID);
                this.columnCasing_Valve_Open = new global::System.Data.DataColumn("Casing_Valve_Open", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_Valve_Open);
                this.columnCasing_OD = new global::System.Data.DataColumn("Casing_OD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_OD);
                this.columnCasing_Weight = new global::System.Data.DataColumn("Casing_Weight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_Weight);
                this.columnTubing_OD = new global::System.Data.DataColumn("Tubing_OD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubing_OD);
                this.columnOil = new global::System.Data.DataColumn("Oil", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOil);
                this.columnWater = new global::System.Data.DataColumn("Water", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWater);
                this.columnGas = new global::System.Data.DataColumn("Gas", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGas);
                this.columnLast_WT_date = new global::System.Data.DataColumn("Last_WT_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLast_WT_date);
                this.columnOil_Gravity = new global::System.Data.DataColumn("Oil_Gravity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOil_Gravity);
                this.columnWater_SP_Grav = new global::System.Data.DataColumn("Water_SP_Grav", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWater_SP_Grav);
                this.columnGas_Sp_Grav = new global::System.Data.DataColumn("Gas_Sp_Grav", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGas_Sp_Grav);
                this.columnTubing_Press = new global::System.Data.DataColumn("Tubing_Press", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubing_Press);
                this.columnTubing_Gradient = new global::System.Data.DataColumn("Tubing_Gradient", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubing_Gradient);
                this.columnTubing_Temp_Whead = new global::System.Data.DataColumn("Tubing_Temp_Whead", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubing_Temp_Whead);
                this.columnCasing_Press = new global::System.Data.DataColumn("Casing_Press", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_Press);
                this.columnCasing_Oil_Cut = new global::System.Data.DataColumn("Casing_Oil_Cut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_Oil_Cut);
                this.columnFluid_Level_From_Surface = new global::System.Data.DataColumn("Fluid_Level_From_Surface", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluid_Level_From_Surface);
                this.columnFluid_Level_Shot_Date = new global::System.Data.DataColumn("Fluid_Level_Shot_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluid_Level_Shot_Date);
                this.columnFluid_Level_Comment = new global::System.Data.DataColumn("Fluid_Level_Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluid_Level_Comment);
                this.columnUse_Fluid_Insertia_For_Analysis = new global::System.Data.DataColumn("Use_Fluid_Insertia_For_Analysis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Fluid_Insertia_For_Analysis);
                this.columnUnit_Type = new global::System.Data.DataColumn("Unit_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Type);
                this.columnPumping_Unit = new global::System.Data.DataColumn("Pumping_Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumping_Unit);
                this.columnWrist_Pin = new global::System.Data.DataColumn("Wrist_Pin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrist_Pin);
                this.columnActual_Stroke = new global::System.Data.DataColumn("Actual_Stroke", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActual_Stroke);
                this.columnTorque_Methode = new global::System.Data.DataColumn("Torque_Methode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTorque_Methode);
                this.columnRotation = new global::System.Data.DataColumn("Rotation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRotation);
                this.columnMotor_Type = new global::System.Data.DataColumn("Motor_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotor_Type);
                this.columnMotor_Size = new global::System.Data.DataColumn("Motor_Size", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotor_Size);
                this.columnSlip_Torque = new global::System.Data.DataColumn("Slip_Torque", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlip_Torque);
                this.columnMeasured_Motor_Amps_Up = new global::System.Data.DataColumn("Measured_Motor_Amps_Up", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasured_Motor_Amps_Up);
                this.columnMeasured_Motor_Amps_Down = new global::System.Data.DataColumn("Measured_Motor_Amps_Down", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasured_Motor_Amps_Down);
                this.columnMax_Air_Balance_Press = new global::System.Data.DataColumn("Max_Air_Balance_Press", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Air_Balance_Press);
                this.columnMin_Air_Balance_Press = new global::System.Data.DataColumn("Min_Air_Balance_Press", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMin_Air_Balance_Press);
                this.columnCrank_ID = new global::System.Data.DataColumn("Crank_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrank_ID);
                this.columnCBT = new global::System.Data.DataColumn("CBT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBT);
                this.columnC1_Lead_Distance = new global::System.Data.DataColumn("C1_Lead_Distance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lead_Distance);
                this.columnC1_Lead_Primary_Wt = new global::System.Data.DataColumn("C1_Lead_Primary_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lead_Primary_Wt);
                this.columnC1_Lead_Aux_WT = new global::System.Data.DataColumn("C1_Lead_Aux_WT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lead_Aux_WT);
                this.columnC1_lag_Distance = new global::System.Data.DataColumn("C1_lag_Distance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_lag_Distance);
                this.columnC1_Lag_Primary_Wt = new global::System.Data.DataColumn("C1_Lag_Primary_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lag_Primary_Wt);
                this.columnC1_Lag_Aux_Wt = new global::System.Data.DataColumn("C1_Lag_Aux_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lag_Aux_Wt);
                this.columnC2_Lead_Distance = new global::System.Data.DataColumn("C2_Lead_Distance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lead_Distance);
                this.columnC2_Lead_Primary_Wt = new global::System.Data.DataColumn("C2_Lead_Primary_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lead_Primary_Wt);
                this.columnC2_Lead_Aux_WT = new global::System.Data.DataColumn("C2_Lead_Aux_WT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lead_Aux_WT);
                this.columnC2_lag_Distance = new global::System.Data.DataColumn("C2_lag_Distance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_lag_Distance);
                this.columnC2_Lag_Primary_Wt = new global::System.Data.DataColumn("C2_Lag_Primary_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lag_Primary_Wt);
                this.columnC2_Lag_Aux_Wt = new global::System.Data.DataColumn("C2_Lag_Aux_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lag_Aux_Wt);
                this.columnFluid_Above_Pump = new global::System.Data.DataColumn("Fluid_Above_Pump", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluid_Above_Pump);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnwellname}, true));
                this.columnwellname.AllowDBNull = false;
                this.columnwellname.Unique = true;
                this.columnwellname.MaxLength = 20;
                this.columnnavigator_name.MaxLength = 50;
                this.columnCAO_ID.MaxLength = 50;
                this.columnLong_Name.MaxLength = 50;
                this.columnInternal_ID.MaxLength = 50;
                this.columnGroup1.MaxLength = 50;
                this.columnGroup2.MaxLength = 50;
                this.columnGroup3.MaxLength = 50;
                this.columnGroup4.MaxLength = 50;
                this.columnFacility_Description.MaxLength = 50;
                this.columnRodpum_Controller.MaxLength = 50;
                this.columnController_Type.MaxLength = 50;
                this.columnSub_Controller_Type.MaxLength = 50;
                this.columnCommunication_Protocol.MaxLength = 50;
                this.columnCommunication_Port.MaxLength = 50;
                this.columnCasing_Valve_Open.MaxLength = 1;
                this.columnFluid_Level_Comment.MaxLength = 50;
                this.columnUse_Fluid_Insertia_For_Analysis.MaxLength = 1;
                this.columnUnit_Type.MaxLength = 50;
                this.columnPumping_Unit.MaxLength = 50;
                this.columnTorque_Methode.MaxLength = 50;
                this.columnRotation.MaxLength = 50;
                this.columnMotor_Type.MaxLength = 50;
                this.columnCrank_ID.MaxLength = 50;
                this.columnC1_Lead_Primary_Wt.MaxLength = 50;
                this.columnC1_Lead_Aux_WT.MaxLength = 50;
                this.columnC1_Lag_Primary_Wt.MaxLength = 50;
                this.columnC1_Lag_Aux_Wt.MaxLength = 50;
                this.columnC2_Lead_Primary_Wt.MaxLength = 50;
                this.columnC2_Lead_Aux_WT.MaxLength = 50;
                this.columnC2_Lag_Primary_Wt.MaxLength = 50;
                this.columnC2_Lag_Aux_Wt.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow NewBeamWellRow() {
                return ((BeamWellRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BeamWellRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BeamWellRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BeamWellRowChanged != null)) {
                    this.BeamWellRowChanged(this, new BeamWellRowChangeEvent(((BeamWellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BeamWellRowChanging != null)) {
                    this.BeamWellRowChanging(this, new BeamWellRowChangeEvent(((BeamWellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BeamWellRowDeleted != null)) {
                    this.BeamWellRowDeleted(this, new BeamWellRowChangeEvent(((BeamWellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BeamWellRowDeleting != null)) {
                    this.BeamWellRowDeleting(this, new BeamWellRowChangeEvent(((BeamWellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveBeamWellRow(BeamWellRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BeamWellDataSet ds = new BeamWellDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BeamWellDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Beam_Well_Group_ConfigurationDataTable : global::System.Data.TypedTableBase<Beam_Well_Group_ConfigurationRow> {
            
            private global::System.Data.DataColumn columnLWNAME;
            
            private global::System.Data.DataColumn columnNAVNAME;
            
            private global::System.Data.DataColumn columnUniqueWellbore;
            
            private global::System.Data.DataColumn columnUniqueWellboreID;
            
            private global::System.Data.DataColumn columnUniqueIntervalID;
            
            private global::System.Data.DataColumn columnCAOID;
            
            private global::System.Data.DataColumn columnLongName;
            
            private global::System.Data.DataColumn columnGroup1Name;
            
            private global::System.Data.DataColumn columnGroup2Name;
            
            private global::System.Data.DataColumn columnGroup3Name;
            
            private global::System.Data.DataColumn columnGroup4Name;
            
            private global::System.Data.DataColumn columnGroup5Name;
            
            private global::System.Data.DataColumn columnFacilityDescription;
            
            private global::System.Data.DataColumn columnOutofScan;
            
            private global::System.Data.DataColumn columnGeographicalXCoordinates;
            
            private global::System.Data.DataColumn columnGeographicalYCoordinates;
            
            private global::System.Data.DataColumn columnRodPumpControllerType;
            
            private global::System.Data.DataColumn columnControllerSubType;
            
            private global::System.Data.DataColumn columnCommPort;
            
            private global::System.Data.DataColumn columnCommProtocol;
            
            private global::System.Data.DataColumn columnCommAddress;
            
            private global::System.Data.DataColumn columnAlternateAddress;
            
            private global::System.Data.DataColumn columnCommRetries;
            
            private global::System.Data.DataColumn columnKeyOnDelay;
            
            private global::System.Data.DataColumn columnKeyOffDelay;
            
            private global::System.Data.DataColumn columnAlarmDelay;
            
            private global::System.Data.DataColumn columnClearDelay;
            
            private global::System.Data.DataColumn columnWelltestAutoEval;
            
            private global::System.Data.DataColumn columnTopPerfs;
            
            private global::System.Data.DataColumn columnBottomPerfs;
            
            private global::System.Data.DataColumn columnTACDepth;
            
            private global::System.Data.DataColumn columnPlugBackTD;
            
            private global::System.Data.DataColumn columnPumpMeasuredDepth;
            
            private global::System.Data.DataColumn columnPumpVerticalDepth;
            
            private global::System.Data.DataColumn columnPumpID;
            
            private global::System.Data.DataColumn columnCasingValveOpen;
            
            private global::System.Data.DataColumn columnCasingOD;
            
            private global::System.Data.DataColumn columnCasingWeight;
            
            private global::System.Data.DataColumn columnTubingOD;
            
            private global::System.Data.DataColumn columnOil;
            
            private global::System.Data.DataColumn columnWater;
            
            private global::System.Data.DataColumn columnGas;
            
            private global::System.Data.DataColumn columnLastWellTestDate;
            
            private global::System.Data.DataColumn columnOilGravity;
            
            private global::System.Data.DataColumn columnWaterSpGravity;
            
            private global::System.Data.DataColumn columnGasSpGravity;
            
            private global::System.Data.DataColumn columnTubingPres;
            
            private global::System.Data.DataColumn columnTubingGrad;
            
            private global::System.Data.DataColumn columnWheadTemp;
            
            private global::System.Data.DataColumn columnCasingPres;
            
            private global::System.Data.DataColumn columnCasingOilCut;
            
            private global::System.Data.DataColumn columnFLevelfromSurface;
            
            private global::System.Data.DataColumn columnFluidAbovePump;
            
            private global::System.Data.DataColumn columnFluidLevelDate;
            
            private global::System.Data.DataColumn columnFluidLevelComment;
            
            private global::System.Data.DataColumn columnFluidInertiaforAna;
            
            private global::System.Data.DataColumn columnPumpingUnitManuf;
            
            private global::System.Data.DataColumn columnPUnitType;
            
            private global::System.Data.DataColumn columnGearboxSize;
            
            private global::System.Data.DataColumn columnBeamRating;
            
            private global::System.Data.DataColumn columnStrokeLength;
            
            private global::System.Data.DataColumn columnPumpingUnitDescription;
            
            private global::System.Data.DataColumn columnWristPin;
            
            private global::System.Data.DataColumn columnActualStrokLength;
            
            private global::System.Data.DataColumn columnTorqueCalcMethod;
            
            private global::System.Data.DataColumn columnUnitRotation;
            
            private global::System.Data.DataColumn columnMotorType;
            
            private global::System.Data.DataColumn columnMotorSize;
            
            private global::System.Data.DataColumn columnSlipTorque;
            
            private global::System.Data.DataColumn columnCrankID;
            
            private global::System.Data.DataColumn columnCBTCBE;
            
            private global::System.Data.DataColumn columnMeasMotorAmps;
            
            private global::System.Data.DataColumn columnMeasMotorAmps1;
            
            private global::System.Data.DataColumn columnMaxAirBalPres;
            
            private global::System.Data.DataColumn columnMinAirBalPres;
            
            private global::System.Data.DataColumn columnMaxEvent_HistoryRecords;
            
            private global::System.Data.DataColumn columnC1Lead_Dist;
            
            private global::System.Data.DataColumn columnC1LeadPrimaryWeightID;
            
            private global::System.Data.DataColumn columnC1LeadAuxWeight;
            
            private global::System.Data.DataColumn columnC1LagDist;
            
            private global::System.Data.DataColumn columnC1LagPrimaryWeightID;
            
            private global::System.Data.DataColumn columnC1Lag_AuxWeighID;
            
            private global::System.Data.DataColumn columnC2LeadDist;
            
            private global::System.Data.DataColumn columnC2LeadPrimaryWeighID;
            
            private global::System.Data.DataColumn columnC2LeadAuxWeightID;
            
            private global::System.Data.DataColumn columnC2LagDist;
            
            private global::System.Data.DataColumn columnC2LagPrimaryWeightID;
            
            private global::System.Data.DataColumn columnC2LaAuxWeightID;
            
            private global::System.Data.DataColumn columnFacilitRecord;
            
            private global::System.Data.DataColumn columnRodpumController;
            
            private global::System.Data.DataColumn columnInternal_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Beam_Well_Group_ConfigurationDataTable() {
                this.TableName = "Beam_Well_Group_Configuration";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Beam_Well_Group_ConfigurationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected Beam_Well_Group_ConfigurationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LWNAMEColumn {
                get {
                    return this.columnLWNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAVNAMEColumn {
                get {
                    return this.columnNAVNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UniqueWellboreColumn {
                get {
                    return this.columnUniqueWellbore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UniqueWellboreIDColumn {
                get {
                    return this.columnUniqueWellboreID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UniqueIntervalIDColumn {
                get {
                    return this.columnUniqueIntervalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CAOIDColumn {
                get {
                    return this.columnCAOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LongNameColumn {
                get {
                    return this.columnLongName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group1NameColumn {
                get {
                    return this.columnGroup1Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group2NameColumn {
                get {
                    return this.columnGroup2Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group3NameColumn {
                get {
                    return this.columnGroup3Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group4NameColumn {
                get {
                    return this.columnGroup4Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group5NameColumn {
                get {
                    return this.columnGroup5Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FacilityDescriptionColumn {
                get {
                    return this.columnFacilityDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OutofScanColumn {
                get {
                    return this.columnOutofScan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GeographicalXCoordinatesColumn {
                get {
                    return this.columnGeographicalXCoordinates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GeographicalYCoordinatesColumn {
                get {
                    return this.columnGeographicalYCoordinates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RodPumpControllerTypeColumn {
                get {
                    return this.columnRodPumpControllerType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ControllerSubTypeColumn {
                get {
                    return this.columnControllerSubType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommPortColumn {
                get {
                    return this.columnCommPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommProtocolColumn {
                get {
                    return this.columnCommProtocol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommAddressColumn {
                get {
                    return this.columnCommAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AlternateAddressColumn {
                get {
                    return this.columnAlternateAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CommRetriesColumn {
                get {
                    return this.columnCommRetries;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KeyOnDelayColumn {
                get {
                    return this.columnKeyOnDelay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KeyOffDelayColumn {
                get {
                    return this.columnKeyOffDelay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AlarmDelayColumn {
                get {
                    return this.columnAlarmDelay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ClearDelayColumn {
                get {
                    return this.columnClearDelay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WelltestAutoEvalColumn {
                get {
                    return this.columnWelltestAutoEval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TopPerfsColumn {
                get {
                    return this.columnTopPerfs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BottomPerfsColumn {
                get {
                    return this.columnBottomPerfs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TACDepthColumn {
                get {
                    return this.columnTACDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PlugBackTDColumn {
                get {
                    return this.columnPlugBackTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PumpMeasuredDepthColumn {
                get {
                    return this.columnPumpMeasuredDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PumpVerticalDepthColumn {
                get {
                    return this.columnPumpVerticalDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PumpIDColumn {
                get {
                    return this.columnPumpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CasingValveOpenColumn {
                get {
                    return this.columnCasingValveOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CasingODColumn {
                get {
                    return this.columnCasingOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CasingWeightColumn {
                get {
                    return this.columnCasingWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TubingODColumn {
                get {
                    return this.columnTubingOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OilColumn {
                get {
                    return this.columnOil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WaterColumn {
                get {
                    return this.columnWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GasColumn {
                get {
                    return this.columnGas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastWellTestDateColumn {
                get {
                    return this.columnLastWellTestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OilGravityColumn {
                get {
                    return this.columnOilGravity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WaterSpGravityColumn {
                get {
                    return this.columnWaterSpGravity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GasSpGravityColumn {
                get {
                    return this.columnGasSpGravity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TubingPresColumn {
                get {
                    return this.columnTubingPres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TubingGradColumn {
                get {
                    return this.columnTubingGrad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WheadTempColumn {
                get {
                    return this.columnWheadTemp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CasingPresColumn {
                get {
                    return this.columnCasingPres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CasingOilCutColumn {
                get {
                    return this.columnCasingOilCut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FLevelfromSurfaceColumn {
                get {
                    return this.columnFLevelfromSurface;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FluidAbovePumpColumn {
                get {
                    return this.columnFluidAbovePump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FluidLevelDateColumn {
                get {
                    return this.columnFluidLevelDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FluidLevelCommentColumn {
                get {
                    return this.columnFluidLevelComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FluidInertiaforAnaColumn {
                get {
                    return this.columnFluidInertiaforAna;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PumpingUnitManufColumn {
                get {
                    return this.columnPumpingUnitManuf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PUnitTypeColumn {
                get {
                    return this.columnPUnitType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GearboxSizeColumn {
                get {
                    return this.columnGearboxSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BeamRatingColumn {
                get {
                    return this.columnBeamRating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn StrokeLengthColumn {
                get {
                    return this.columnStrokeLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PumpingUnitDescriptionColumn {
                get {
                    return this.columnPumpingUnitDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WristPinColumn {
                get {
                    return this.columnWristPin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActualStrokLengthColumn {
                get {
                    return this.columnActualStrokLength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TorqueCalcMethodColumn {
                get {
                    return this.columnTorqueCalcMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnitRotationColumn {
                get {
                    return this.columnUnitRotation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MotorTypeColumn {
                get {
                    return this.columnMotorType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MotorSizeColumn {
                get {
                    return this.columnMotorSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SlipTorqueColumn {
                get {
                    return this.columnSlipTorque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CrankIDColumn {
                get {
                    return this.columnCrankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CBTCBEColumn {
                get {
                    return this.columnCBTCBE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MeasMotorAmpsColumn {
                get {
                    return this.columnMeasMotorAmps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MeasMotorAmps1Column {
                get {
                    return this.columnMeasMotorAmps1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MaxAirBalPresColumn {
                get {
                    return this.columnMaxAirBalPres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MinAirBalPresColumn {
                get {
                    return this.columnMinAirBalPres;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MaxEvent_HistoryRecordsColumn {
                get {
                    return this.columnMaxEvent_HistoryRecords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1Lead_DistColumn {
                get {
                    return this.columnC1Lead_Dist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1LeadPrimaryWeightIDColumn {
                get {
                    return this.columnC1LeadPrimaryWeightID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1LeadAuxWeightColumn {
                get {
                    return this.columnC1LeadAuxWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1LagDistColumn {
                get {
                    return this.columnC1LagDist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1LagPrimaryWeightIDColumn {
                get {
                    return this.columnC1LagPrimaryWeightID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1Lag_AuxWeighIDColumn {
                get {
                    return this.columnC1Lag_AuxWeighID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2LeadDistColumn {
                get {
                    return this.columnC2LeadDist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2LeadPrimaryWeighIDColumn {
                get {
                    return this.columnC2LeadPrimaryWeighID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2LeadAuxWeightIDColumn {
                get {
                    return this.columnC2LeadAuxWeightID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2LagDistColumn {
                get {
                    return this.columnC2LagDist;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2LagPrimaryWeightIDColumn {
                get {
                    return this.columnC2LagPrimaryWeightID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2LaAuxWeightIDColumn {
                get {
                    return this.columnC2LaAuxWeightID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FacilitRecordColumn {
                get {
                    return this.columnFacilitRecord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RodpumControllerColumn {
                get {
                    return this.columnRodpumController;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Internal_IDColumn {
                get {
                    return this.columnInternal_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Beam_Well_Group_ConfigurationRow this[int index] {
                get {
                    return ((Beam_Well_Group_ConfigurationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Beam_Well_Group_ConfigurationRowChangeEventHandler Beam_Well_Group_ConfigurationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Beam_Well_Group_ConfigurationRowChangeEventHandler Beam_Well_Group_ConfigurationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Beam_Well_Group_ConfigurationRowChangeEventHandler Beam_Well_Group_ConfigurationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event Beam_Well_Group_ConfigurationRowChangeEventHandler Beam_Well_Group_ConfigurationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddBeam_Well_Group_ConfigurationRow(Beam_Well_Group_ConfigurationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Beam_Well_Group_ConfigurationRow AddBeam_Well_Group_ConfigurationRow(
                        string LWNAME, 
                        string NAVNAME, 
                        string UniqueWellbore, 
                        string UniqueWellboreID, 
                        string UniqueIntervalID, 
                        string CAOID, 
                        string LongName, 
                        string Group1Name, 
                        string Group2Name, 
                        string Group3Name, 
                        string Group4Name, 
                        string Group5Name, 
                        string FacilityDescription, 
                        double OutofScan, 
                        double GeographicalXCoordinates, 
                        double GeographicalYCoordinates, 
                        string RodPumpControllerType, 
                        string ControllerSubType, 
                        string CommPort, 
                        string CommProtocol, 
                        double CommAddress, 
                        string AlternateAddress, 
                        double CommRetries, 
                        double KeyOnDelay, 
                        double KeyOffDelay, 
                        double AlarmDelay, 
                        double ClearDelay, 
                        double WelltestAutoEval, 
                        double TopPerfs, 
                        double BottomPerfs, 
                        double TACDepth, 
                        double PlugBackTD, 
                        double PumpMeasuredDepth, 
                        double PumpVerticalDepth, 
                        double PumpID, 
                        string CasingValveOpen, 
                        double CasingOD, 
                        double CasingWeight, 
                        double TubingOD, 
                        double Oil, 
                        double Water, 
                        double Gas, 
                        System.DateTime LastWellTestDate, 
                        double OilGravity, 
                        double WaterSpGravity, 
                        double GasSpGravity, 
                        double TubingPres, 
                        double TubingGrad, 
                        double WheadTemp, 
                        double CasingPres, 
                        double CasingOilCut, 
                        double FLevelfromSurface, 
                        double FluidAbovePump, 
                        System.DateTime FluidLevelDate, 
                        string FluidLevelComment, 
                        string FluidInertiaforAna, 
                        string PumpingUnitManuf, 
                        string PUnitType, 
                        double GearboxSize, 
                        double BeamRating, 
                        double StrokeLength, 
                        string PumpingUnitDescription, 
                        double WristPin, 
                        double ActualStrokLength, 
                        string TorqueCalcMethod, 
                        string UnitRotation, 
                        string MotorType, 
                        double MotorSize, 
                        double SlipTorque, 
                        string CrankID, 
                        double CBTCBE, 
                        double MeasMotorAmps, 
                        double MeasMotorAmps1, 
                        double MaxAirBalPres, 
                        double MinAirBalPres, 
                        double MaxEvent_HistoryRecords, 
                        double C1Lead_Dist, 
                        string C1LeadPrimaryWeightID, 
                        string C1LeadAuxWeight, 
                        double C1LagDist, 
                        string C1LagPrimaryWeightID, 
                        string C1Lag_AuxWeighID, 
                        double C2LeadDist, 
                        string C2LeadPrimaryWeighID, 
                        string C2LeadAuxWeightID, 
                        double C2LagDist, 
                        string C2LagPrimaryWeightID, 
                        string C2LaAuxWeightID, 
                        string FacilitRecord, 
                        string RodpumController, 
                        string Internal_ID) {
                Beam_Well_Group_ConfigurationRow rowBeam_Well_Group_ConfigurationRow = ((Beam_Well_Group_ConfigurationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LWNAME,
                        NAVNAME,
                        UniqueWellbore,
                        UniqueWellboreID,
                        UniqueIntervalID,
                        CAOID,
                        LongName,
                        Group1Name,
                        Group2Name,
                        Group3Name,
                        Group4Name,
                        Group5Name,
                        FacilityDescription,
                        OutofScan,
                        GeographicalXCoordinates,
                        GeographicalYCoordinates,
                        RodPumpControllerType,
                        ControllerSubType,
                        CommPort,
                        CommProtocol,
                        CommAddress,
                        AlternateAddress,
                        CommRetries,
                        KeyOnDelay,
                        KeyOffDelay,
                        AlarmDelay,
                        ClearDelay,
                        WelltestAutoEval,
                        TopPerfs,
                        BottomPerfs,
                        TACDepth,
                        PlugBackTD,
                        PumpMeasuredDepth,
                        PumpVerticalDepth,
                        PumpID,
                        CasingValveOpen,
                        CasingOD,
                        CasingWeight,
                        TubingOD,
                        Oil,
                        Water,
                        Gas,
                        LastWellTestDate,
                        OilGravity,
                        WaterSpGravity,
                        GasSpGravity,
                        TubingPres,
                        TubingGrad,
                        WheadTemp,
                        CasingPres,
                        CasingOilCut,
                        FLevelfromSurface,
                        FluidAbovePump,
                        FluidLevelDate,
                        FluidLevelComment,
                        FluidInertiaforAna,
                        PumpingUnitManuf,
                        PUnitType,
                        GearboxSize,
                        BeamRating,
                        StrokeLength,
                        PumpingUnitDescription,
                        WristPin,
                        ActualStrokLength,
                        TorqueCalcMethod,
                        UnitRotation,
                        MotorType,
                        MotorSize,
                        SlipTorque,
                        CrankID,
                        CBTCBE,
                        MeasMotorAmps,
                        MeasMotorAmps1,
                        MaxAirBalPres,
                        MinAirBalPres,
                        MaxEvent_HistoryRecords,
                        C1Lead_Dist,
                        C1LeadPrimaryWeightID,
                        C1LeadAuxWeight,
                        C1LagDist,
                        C1LagPrimaryWeightID,
                        C1Lag_AuxWeighID,
                        C2LeadDist,
                        C2LeadPrimaryWeighID,
                        C2LeadAuxWeightID,
                        C2LagDist,
                        C2LagPrimaryWeightID,
                        C2LaAuxWeightID,
                        FacilitRecord,
                        RodpumController,
                        Internal_ID};
                rowBeam_Well_Group_ConfigurationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBeam_Well_Group_ConfigurationRow);
                return rowBeam_Well_Group_ConfigurationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Beam_Well_Group_ConfigurationRow FindByLWNAME(string LWNAME) {
                return ((Beam_Well_Group_ConfigurationRow)(this.Rows.Find(new object[] {
                            LWNAME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Beam_Well_Group_ConfigurationDataTable cln = ((Beam_Well_Group_ConfigurationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Beam_Well_Group_ConfigurationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnLWNAME = base.Columns["LWNAME"];
                this.columnNAVNAME = base.Columns["NAVNAME"];
                this.columnUniqueWellbore = base.Columns["UniqueWellbore"];
                this.columnUniqueWellboreID = base.Columns["UniqueWellboreID"];
                this.columnUniqueIntervalID = base.Columns["UniqueIntervalID"];
                this.columnCAOID = base.Columns["CAOID"];
                this.columnLongName = base.Columns["LongName"];
                this.columnGroup1Name = base.Columns["Group1Name"];
                this.columnGroup2Name = base.Columns["Group2Name"];
                this.columnGroup3Name = base.Columns["Group3Name"];
                this.columnGroup4Name = base.Columns["Group4Name"];
                this.columnGroup5Name = base.Columns["Group5Name"];
                this.columnFacilityDescription = base.Columns["FacilityDescription"];
                this.columnOutofScan = base.Columns["OutofScan"];
                this.columnGeographicalXCoordinates = base.Columns["GeographicalXCoordinates"];
                this.columnGeographicalYCoordinates = base.Columns["GeographicalYCoordinates"];
                this.columnRodPumpControllerType = base.Columns["RodPumpControllerType"];
                this.columnControllerSubType = base.Columns["ControllerSubType"];
                this.columnCommPort = base.Columns["CommPort"];
                this.columnCommProtocol = base.Columns["CommProtocol"];
                this.columnCommAddress = base.Columns["CommAddress"];
                this.columnAlternateAddress = base.Columns["AlternateAddress"];
                this.columnCommRetries = base.Columns["CommRetries"];
                this.columnKeyOnDelay = base.Columns["KeyOnDelay"];
                this.columnKeyOffDelay = base.Columns["KeyOffDelay"];
                this.columnAlarmDelay = base.Columns["AlarmDelay"];
                this.columnClearDelay = base.Columns["ClearDelay"];
                this.columnWelltestAutoEval = base.Columns["WelltestAutoEval"];
                this.columnTopPerfs = base.Columns["TopPerfs"];
                this.columnBottomPerfs = base.Columns["BottomPerfs"];
                this.columnTACDepth = base.Columns["TACDepth"];
                this.columnPlugBackTD = base.Columns["PlugBackTD"];
                this.columnPumpMeasuredDepth = base.Columns["PumpMeasuredDepth"];
                this.columnPumpVerticalDepth = base.Columns["PumpVerticalDepth"];
                this.columnPumpID = base.Columns["PumpID"];
                this.columnCasingValveOpen = base.Columns["CasingValveOpen"];
                this.columnCasingOD = base.Columns["CasingOD"];
                this.columnCasingWeight = base.Columns["CasingWeight"];
                this.columnTubingOD = base.Columns["TubingOD"];
                this.columnOil = base.Columns["Oil"];
                this.columnWater = base.Columns["Water"];
                this.columnGas = base.Columns["Gas"];
                this.columnLastWellTestDate = base.Columns["LastWellTestDate"];
                this.columnOilGravity = base.Columns["OilGravity"];
                this.columnWaterSpGravity = base.Columns["WaterSpGravity"];
                this.columnGasSpGravity = base.Columns["GasSpGravity"];
                this.columnTubingPres = base.Columns["TubingPres"];
                this.columnTubingGrad = base.Columns["TubingGrad"];
                this.columnWheadTemp = base.Columns["WheadTemp"];
                this.columnCasingPres = base.Columns["CasingPres"];
                this.columnCasingOilCut = base.Columns["CasingOilCut"];
                this.columnFLevelfromSurface = base.Columns["FLevelfromSurface"];
                this.columnFluidAbovePump = base.Columns["FluidAbovePump"];
                this.columnFluidLevelDate = base.Columns["FluidLevelDate"];
                this.columnFluidLevelComment = base.Columns["FluidLevelComment"];
                this.columnFluidInertiaforAna = base.Columns["FluidInertiaforAna"];
                this.columnPumpingUnitManuf = base.Columns["PumpingUnitManuf"];
                this.columnPUnitType = base.Columns["PUnitType"];
                this.columnGearboxSize = base.Columns["GearboxSize"];
                this.columnBeamRating = base.Columns["BeamRating"];
                this.columnStrokeLength = base.Columns["StrokeLength"];
                this.columnPumpingUnitDescription = base.Columns["PumpingUnitDescription"];
                this.columnWristPin = base.Columns["WristPin"];
                this.columnActualStrokLength = base.Columns["ActualStrokLength"];
                this.columnTorqueCalcMethod = base.Columns["TorqueCalcMethod"];
                this.columnUnitRotation = base.Columns["UnitRotation"];
                this.columnMotorType = base.Columns["MotorType"];
                this.columnMotorSize = base.Columns["MotorSize"];
                this.columnSlipTorque = base.Columns["SlipTorque"];
                this.columnCrankID = base.Columns["CrankID"];
                this.columnCBTCBE = base.Columns["CBTCBE"];
                this.columnMeasMotorAmps = base.Columns["MeasMotorAmps"];
                this.columnMeasMotorAmps1 = base.Columns["MeasMotorAmps1"];
                this.columnMaxAirBalPres = base.Columns["MaxAirBalPres"];
                this.columnMinAirBalPres = base.Columns["MinAirBalPres"];
                this.columnMaxEvent_HistoryRecords = base.Columns["MaxEvent HistoryRecords"];
                this.columnC1Lead_Dist = base.Columns["C1Lead Dist"];
                this.columnC1LeadPrimaryWeightID = base.Columns["C1LeadPrimaryWeightID"];
                this.columnC1LeadAuxWeight = base.Columns["C1LeadAuxWeight"];
                this.columnC1LagDist = base.Columns["C1LagDist"];
                this.columnC1LagPrimaryWeightID = base.Columns["C1LagPrimaryWeightID"];
                this.columnC1Lag_AuxWeighID = base.Columns["C1Lag AuxWeighID"];
                this.columnC2LeadDist = base.Columns["C2LeadDist"];
                this.columnC2LeadPrimaryWeighID = base.Columns["C2LeadPrimaryWeighID"];
                this.columnC2LeadAuxWeightID = base.Columns["C2LeadAuxWeightID"];
                this.columnC2LagDist = base.Columns["C2LagDist"];
                this.columnC2LagPrimaryWeightID = base.Columns["C2LagPrimaryWeightID"];
                this.columnC2LaAuxWeightID = base.Columns["C2LaAuxWeightID"];
                this.columnFacilitRecord = base.Columns["FacilitRecord"];
                this.columnRodpumController = base.Columns["RodpumController"];
                this.columnInternal_ID = base.Columns["Internal_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnLWNAME = new global::System.Data.DataColumn("LWNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLWNAME);
                this.columnNAVNAME = new global::System.Data.DataColumn("NAVNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAVNAME);
                this.columnUniqueWellbore = new global::System.Data.DataColumn("UniqueWellbore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUniqueWellbore);
                this.columnUniqueWellboreID = new global::System.Data.DataColumn("UniqueWellboreID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUniqueWellboreID);
                this.columnUniqueIntervalID = new global::System.Data.DataColumn("UniqueIntervalID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUniqueIntervalID);
                this.columnCAOID = new global::System.Data.DataColumn("CAOID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAOID);
                this.columnLongName = new global::System.Data.DataColumn("LongName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLongName);
                this.columnGroup1Name = new global::System.Data.DataColumn("Group1Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup1Name);
                this.columnGroup2Name = new global::System.Data.DataColumn("Group2Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup2Name);
                this.columnGroup3Name = new global::System.Data.DataColumn("Group3Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup3Name);
                this.columnGroup4Name = new global::System.Data.DataColumn("Group4Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup4Name);
                this.columnGroup5Name = new global::System.Data.DataColumn("Group5Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup5Name);
                this.columnFacilityDescription = new global::System.Data.DataColumn("FacilityDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacilityDescription);
                this.columnOutofScan = new global::System.Data.DataColumn("OutofScan", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutofScan);
                this.columnGeographicalXCoordinates = new global::System.Data.DataColumn("GeographicalXCoordinates", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeographicalXCoordinates);
                this.columnGeographicalYCoordinates = new global::System.Data.DataColumn("GeographicalYCoordinates", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeographicalYCoordinates);
                this.columnRodPumpControllerType = new global::System.Data.DataColumn("RodPumpControllerType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodPumpControllerType);
                this.columnControllerSubType = new global::System.Data.DataColumn("ControllerSubType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnControllerSubType);
                this.columnCommPort = new global::System.Data.DataColumn("CommPort", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommPort);
                this.columnCommProtocol = new global::System.Data.DataColumn("CommProtocol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommProtocol);
                this.columnCommAddress = new global::System.Data.DataColumn("CommAddress", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommAddress);
                this.columnAlternateAddress = new global::System.Data.DataColumn("AlternateAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternateAddress);
                this.columnCommRetries = new global::System.Data.DataColumn("CommRetries", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommRetries);
                this.columnKeyOnDelay = new global::System.Data.DataColumn("KeyOnDelay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyOnDelay);
                this.columnKeyOffDelay = new global::System.Data.DataColumn("KeyOffDelay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyOffDelay);
                this.columnAlarmDelay = new global::System.Data.DataColumn("AlarmDelay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlarmDelay);
                this.columnClearDelay = new global::System.Data.DataColumn("ClearDelay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClearDelay);
                this.columnWelltestAutoEval = new global::System.Data.DataColumn("WelltestAutoEval", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWelltestAutoEval);
                this.columnTopPerfs = new global::System.Data.DataColumn("TopPerfs", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTopPerfs);
                this.columnBottomPerfs = new global::System.Data.DataColumn("BottomPerfs", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBottomPerfs);
                this.columnTACDepth = new global::System.Data.DataColumn("TACDepth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTACDepth);
                this.columnPlugBackTD = new global::System.Data.DataColumn("PlugBackTD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlugBackTD);
                this.columnPumpMeasuredDepth = new global::System.Data.DataColumn("PumpMeasuredDepth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpMeasuredDepth);
                this.columnPumpVerticalDepth = new global::System.Data.DataColumn("PumpVerticalDepth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpVerticalDepth);
                this.columnPumpID = new global::System.Data.DataColumn("PumpID", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpID);
                this.columnCasingValveOpen = new global::System.Data.DataColumn("CasingValveOpen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasingValveOpen);
                this.columnCasingOD = new global::System.Data.DataColumn("CasingOD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasingOD);
                this.columnCasingWeight = new global::System.Data.DataColumn("CasingWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasingWeight);
                this.columnTubingOD = new global::System.Data.DataColumn("TubingOD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubingOD);
                this.columnOil = new global::System.Data.DataColumn("Oil", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOil);
                this.columnWater = new global::System.Data.DataColumn("Water", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWater);
                this.columnGas = new global::System.Data.DataColumn("Gas", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGas);
                this.columnLastWellTestDate = new global::System.Data.DataColumn("LastWellTestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastWellTestDate);
                this.columnOilGravity = new global::System.Data.DataColumn("OilGravity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOilGravity);
                this.columnWaterSpGravity = new global::System.Data.DataColumn("WaterSpGravity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterSpGravity);
                this.columnGasSpGravity = new global::System.Data.DataColumn("GasSpGravity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGasSpGravity);
                this.columnTubingPres = new global::System.Data.DataColumn("TubingPres", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubingPres);
                this.columnTubingGrad = new global::System.Data.DataColumn("TubingGrad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubingGrad);
                this.columnWheadTemp = new global::System.Data.DataColumn("WheadTemp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWheadTemp);
                this.columnCasingPres = new global::System.Data.DataColumn("CasingPres", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasingPres);
                this.columnCasingOilCut = new global::System.Data.DataColumn("CasingOilCut", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasingOilCut);
                this.columnFLevelfromSurface = new global::System.Data.DataColumn("FLevelfromSurface", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLevelfromSurface);
                this.columnFluidAbovePump = new global::System.Data.DataColumn("FluidAbovePump", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluidAbovePump);
                this.columnFluidLevelDate = new global::System.Data.DataColumn("FluidLevelDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluidLevelDate);
                this.columnFluidLevelComment = new global::System.Data.DataColumn("FluidLevelComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluidLevelComment);
                this.columnFluidInertiaforAna = new global::System.Data.DataColumn("FluidInertiaforAna", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluidInertiaforAna);
                this.columnPumpingUnitManuf = new global::System.Data.DataColumn("PumpingUnitManuf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpingUnitManuf);
                this.columnPUnitType = new global::System.Data.DataColumn("PUnitType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPUnitType);
                this.columnGearboxSize = new global::System.Data.DataColumn("GearboxSize", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGearboxSize);
                this.columnBeamRating = new global::System.Data.DataColumn("BeamRating", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeamRating);
                this.columnStrokeLength = new global::System.Data.DataColumn("StrokeLength", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrokeLength);
                this.columnPumpingUnitDescription = new global::System.Data.DataColumn("PumpingUnitDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumpingUnitDescription);
                this.columnWristPin = new global::System.Data.DataColumn("WristPin", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristPin);
                this.columnActualStrokLength = new global::System.Data.DataColumn("ActualStrokLength", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualStrokLength);
                this.columnTorqueCalcMethod = new global::System.Data.DataColumn("TorqueCalcMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTorqueCalcMethod);
                this.columnUnitRotation = new global::System.Data.DataColumn("UnitRotation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitRotation);
                this.columnMotorType = new global::System.Data.DataColumn("MotorType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorType);
                this.columnMotorSize = new global::System.Data.DataColumn("MotorSize", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorSize);
                this.columnSlipTorque = new global::System.Data.DataColumn("SlipTorque", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlipTorque);
                this.columnCrankID = new global::System.Data.DataColumn("CrankID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrankID);
                this.columnCBTCBE = new global::System.Data.DataColumn("CBTCBE", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBTCBE);
                this.columnMeasMotorAmps = new global::System.Data.DataColumn("MeasMotorAmps", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasMotorAmps);
                this.columnMeasMotorAmps1 = new global::System.Data.DataColumn("MeasMotorAmps1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasMotorAmps1);
                this.columnMaxAirBalPres = new global::System.Data.DataColumn("MaxAirBalPres", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxAirBalPres);
                this.columnMinAirBalPres = new global::System.Data.DataColumn("MinAirBalPres", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinAirBalPres);
                this.columnMaxEvent_HistoryRecords = new global::System.Data.DataColumn("MaxEvent HistoryRecords", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxEvent_HistoryRecords);
                this.columnC1Lead_Dist = new global::System.Data.DataColumn("C1Lead Dist", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1Lead_Dist);
                this.columnC1LeadPrimaryWeightID = new global::System.Data.DataColumn("C1LeadPrimaryWeightID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1LeadPrimaryWeightID);
                this.columnC1LeadAuxWeight = new global::System.Data.DataColumn("C1LeadAuxWeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1LeadAuxWeight);
                this.columnC1LagDist = new global::System.Data.DataColumn("C1LagDist", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1LagDist);
                this.columnC1LagPrimaryWeightID = new global::System.Data.DataColumn("C1LagPrimaryWeightID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1LagPrimaryWeightID);
                this.columnC1Lag_AuxWeighID = new global::System.Data.DataColumn("C1Lag AuxWeighID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1Lag_AuxWeighID);
                this.columnC2LeadDist = new global::System.Data.DataColumn("C2LeadDist", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2LeadDist);
                this.columnC2LeadPrimaryWeighID = new global::System.Data.DataColumn("C2LeadPrimaryWeighID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2LeadPrimaryWeighID);
                this.columnC2LeadAuxWeightID = new global::System.Data.DataColumn("C2LeadAuxWeightID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2LeadAuxWeightID);
                this.columnC2LagDist = new global::System.Data.DataColumn("C2LagDist", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2LagDist);
                this.columnC2LagPrimaryWeightID = new global::System.Data.DataColumn("C2LagPrimaryWeightID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2LagPrimaryWeightID);
                this.columnC2LaAuxWeightID = new global::System.Data.DataColumn("C2LaAuxWeightID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2LaAuxWeightID);
                this.columnFacilitRecord = new global::System.Data.DataColumn("FacilitRecord", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacilitRecord);
                this.columnRodpumController = new global::System.Data.DataColumn("RodpumController", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodpumController);
                this.columnInternal_ID = new global::System.Data.DataColumn("Internal_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInternal_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLWNAME}, true));
                this.columnLWNAME.AllowDBNull = false;
                this.columnLWNAME.Unique = true;
                this.columnLWNAME.MaxLength = 255;
                this.columnNAVNAME.MaxLength = 255;
                this.columnUniqueWellbore.MaxLength = 255;
                this.columnUniqueWellboreID.MaxLength = 255;
                this.columnUniqueIntervalID.MaxLength = 255;
                this.columnCAOID.MaxLength = 255;
                this.columnLongName.MaxLength = 255;
                this.columnGroup1Name.MaxLength = 255;
                this.columnGroup2Name.MaxLength = 255;
                this.columnGroup3Name.MaxLength = 255;
                this.columnGroup4Name.MaxLength = 255;
                this.columnGroup5Name.MaxLength = 255;
                this.columnFacilityDescription.MaxLength = 255;
                this.columnRodPumpControllerType.MaxLength = 255;
                this.columnControllerSubType.MaxLength = 255;
                this.columnCommPort.MaxLength = 255;
                this.columnCommProtocol.MaxLength = 255;
                this.columnAlternateAddress.MaxLength = 255;
                this.columnCasingValveOpen.MaxLength = 1;
                this.columnFluidLevelComment.MaxLength = 255;
                this.columnFluidInertiaforAna.MaxLength = 1;
                this.columnPumpingUnitManuf.MaxLength = 255;
                this.columnPUnitType.MaxLength = 255;
                this.columnPumpingUnitDescription.MaxLength = 255;
                this.columnTorqueCalcMethod.MaxLength = 255;
                this.columnUnitRotation.MaxLength = 255;
                this.columnMotorType.MaxLength = 255;
                this.columnCrankID.MaxLength = 255;
                this.columnC1LeadPrimaryWeightID.MaxLength = 255;
                this.columnC1LeadAuxWeight.MaxLength = 255;
                this.columnC1LagPrimaryWeightID.MaxLength = 255;
                this.columnC1Lag_AuxWeighID.MaxLength = 255;
                this.columnC2LeadPrimaryWeighID.MaxLength = 255;
                this.columnC2LeadAuxWeightID.MaxLength = 255;
                this.columnC2LagPrimaryWeightID.MaxLength = 255;
                this.columnC2LaAuxWeightID.MaxLength = 255;
                this.columnFacilitRecord.MaxLength = 255;
                this.columnRodpumController.MaxLength = 255;
                this.columnInternal_ID.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Beam_Well_Group_ConfigurationRow NewBeam_Well_Group_ConfigurationRow() {
                return ((Beam_Well_Group_ConfigurationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Beam_Well_Group_ConfigurationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Beam_Well_Group_ConfigurationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Beam_Well_Group_ConfigurationRowChanged != null)) {
                    this.Beam_Well_Group_ConfigurationRowChanged(this, new Beam_Well_Group_ConfigurationRowChangeEvent(((Beam_Well_Group_ConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Beam_Well_Group_ConfigurationRowChanging != null)) {
                    this.Beam_Well_Group_ConfigurationRowChanging(this, new Beam_Well_Group_ConfigurationRowChangeEvent(((Beam_Well_Group_ConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Beam_Well_Group_ConfigurationRowDeleted != null)) {
                    this.Beam_Well_Group_ConfigurationRowDeleted(this, new Beam_Well_Group_ConfigurationRowChangeEvent(((Beam_Well_Group_ConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Beam_Well_Group_ConfigurationRowDeleting != null)) {
                    this.Beam_Well_Group_ConfigurationRowDeleting(this, new Beam_Well_Group_ConfigurationRowChangeEvent(((Beam_Well_Group_ConfigurationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveBeam_Well_Group_ConfigurationRow(Beam_Well_Group_ConfigurationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BeamWellDataSet ds = new BeamWellDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Beam_Well_Group_ConfigurationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BeamWellRow : global::System.Data.DataRow {
            
            private BeamWellDataTable tableBeamWell;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal BeamWellRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBeamWell = ((BeamWellDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string wellname {
                get {
                    return ((string)(this[this.tableBeamWell.wellnameColumn]));
                }
                set {
                    this[this.tableBeamWell.wellnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string navigator_name {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.navigator_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'navigator_name\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.navigator_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CAO_ID {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.CAO_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAO_ID\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.CAO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Long_Name {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Long_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Long_Name\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Long_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Internal_ID {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Internal_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Internal_ID\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Internal_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group1 {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Group1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group1\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Group1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group2 {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Group2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group2\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Group2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group3 {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Group3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group3\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Group3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group4 {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Group4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group4\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Group4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Facility_Description {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Facility_DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Facility_Description\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Facility_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Rodpum_Controller {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Rodpum_ControllerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rodpum_Controller\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Rodpum_ControllerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Controller_Type {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Controller_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Controller_Type\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Controller_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Sub_Controller_Type {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Sub_Controller_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sub_Controller_Type\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Sub_Controller_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Communication_Protocol {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Communication_ProtocolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Communication_Protocol\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Communication_ProtocolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Communication_Port {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Communication_PortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Communication_Port\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Communication_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Communication_Address {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Communication_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Communication_Address\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Communication_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Alt_Address {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Alt_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alt_Address\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Alt_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Comm_retry {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Comm_retryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_retry\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Comm_retryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Key_On_Delay {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Key_On_DelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Key_On_Delay\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Key_On_DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Key_Off_Delay {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Key_Off_DelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Key_Off_Delay\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Key_Off_DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Alarm_Delay {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Alarm_DelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alarm_Delay\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Alarm_DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Clear_Delay {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Clear_DelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clear_Delay\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Clear_DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Max_Event_History_Recs {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Max_Event_History_RecsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Event_History_Recs\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Max_Event_History_RecsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Top_Perforation {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Top_PerforationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Top_Perforation\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Top_PerforationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Bottom_Perforation {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Bottom_PerforationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bottom_Perforation\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Bottom_PerforationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Anchor_depth {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Anchor_depthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Anchor_depth\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Anchor_depthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Plug_Back_TD {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Plug_Back_TDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plug_Back_TD\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Plug_Back_TDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Pump_Measured {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Pump_MeasuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pump_Measured\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Pump_MeasuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Pump_Vertical {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Pump_VerticalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pump_Vertical\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Pump_VerticalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Pump_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Pump_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pump_ID\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Pump_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Casing_Valve_Open {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Casing_Valve_OpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_Valve_Open\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_Valve_OpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Casing_OD {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Casing_ODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_OD\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_ODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Casing_Weight {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Casing_WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_Weight\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Tubing_OD {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Tubing_ODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tubing_OD\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Tubing_ODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Oil {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.OilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oil\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.OilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Water {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.WaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Water\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.WaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Gas {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.GasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gas\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.GasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Last_WT_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBeamWell.Last_WT_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Last_WT_date\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Last_WT_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Oil_Gravity {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Oil_GravityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oil_Gravity\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Oil_GravityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Water_SP_Grav {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Water_SP_GravColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Water_SP_Grav\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Water_SP_GravColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Gas_Sp_Grav {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Gas_Sp_GravColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gas_Sp_Grav\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Gas_Sp_GravColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Tubing_Press {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Tubing_PressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tubing_Press\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Tubing_PressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Tubing_Gradient {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Tubing_GradientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tubing_Gradient\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Tubing_GradientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Tubing_Temp_Whead {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Tubing_Temp_WheadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tubing_Temp_Whead\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Tubing_Temp_WheadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Casing_Press {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Casing_PressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_Press\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_PressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Casing_Oil_Cut {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Casing_Oil_CutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_Oil_Cut\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_Oil_CutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Fluid_Level_From_Surface {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Fluid_Level_From_SurfaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fluid_Level_From_Surface\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Fluid_Level_From_SurfaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Fluid_Level_Shot_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBeamWell.Fluid_Level_Shot_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fluid_Level_Shot_Date\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Fluid_Level_Shot_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fluid_Level_Comment {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Fluid_Level_CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fluid_Level_Comment\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Fluid_Level_CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Use_Fluid_Insertia_For_Analysis {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Use_Fluid_Insertia_For_AnalysisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Use_Fluid_Insertia_For_Analysis\' in table \'BeamWell\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Use_Fluid_Insertia_For_AnalysisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Unit_Type {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_Type\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Pumping_Unit {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Pumping_UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pumping_Unit\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Pumping_UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Wrist_Pin {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Wrist_PinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wrist_Pin\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Wrist_PinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Actual_Stroke {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Actual_StrokeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Actual_Stroke\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Actual_StrokeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Torque_Methode {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Torque_MethodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Torque_Methode\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Torque_MethodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Rotation {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.RotationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rotation\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.RotationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Motor_Type {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Motor_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Motor_Type\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Motor_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Motor_Size {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Motor_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Motor_Size\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Motor_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Slip_Torque {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Slip_TorqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Slip_Torque\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Slip_TorqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Measured_Motor_Amps_Up {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Measured_Motor_Amps_UpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Measured_Motor_Amps_Up\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Measured_Motor_Amps_UpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Measured_Motor_Amps_Down {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Measured_Motor_Amps_DownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Measured_Motor_Amps_Down\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Measured_Motor_Amps_DownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Max_Air_Balance_Press {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Max_Air_Balance_PressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Air_Balance_Press\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Max_Air_Balance_PressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Min_Air_Balance_Press {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Min_Air_Balance_PressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Min_Air_Balance_Press\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Min_Air_Balance_PressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Crank_ID {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Crank_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Crank_ID\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Crank_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CBT {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.CBTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBT\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.CBTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal C1_Lead_Distance {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.C1_Lead_DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lead_Distance\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lead_DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1_Lead_Primary_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C1_Lead_Primary_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lead_Primary_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lead_Primary_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1_Lead_Aux_WT {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C1_Lead_Aux_WTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lead_Aux_WT\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lead_Aux_WTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal C1_lag_Distance {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.C1_lag_DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_lag_Distance\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_lag_DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1_Lag_Primary_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C1_Lag_Primary_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lag_Primary_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lag_Primary_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1_Lag_Aux_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C1_Lag_Aux_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lag_Aux_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lag_Aux_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal C2_Lead_Distance {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.C2_Lead_DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lead_Distance\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lead_DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2_Lead_Primary_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C2_Lead_Primary_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lead_Primary_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lead_Primary_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2_Lead_Aux_WT {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C2_Lead_Aux_WTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lead_Aux_WT\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lead_Aux_WTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal C2_lag_Distance {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.C2_lag_DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_lag_Distance\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_lag_DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2_Lag_Primary_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C2_Lag_Primary_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lag_Primary_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lag_Primary_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2_Lag_Aux_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C2_Lag_Aux_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lag_Aux_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lag_Aux_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Fluid_Above_Pump {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Fluid_Above_PumpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fluid_Above_Pump\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Fluid_Above_PumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isnavigator_nameNull() {
                return this.IsNull(this.tableBeamWell.navigator_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setnavigator_nameNull() {
                this[this.tableBeamWell.navigator_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCAO_IDNull() {
                return this.IsNull(this.tableBeamWell.CAO_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCAO_IDNull() {
                this[this.tableBeamWell.CAO_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLong_NameNull() {
                return this.IsNull(this.tableBeamWell.Long_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLong_NameNull() {
                this[this.tableBeamWell.Long_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInternal_IDNull() {
                return this.IsNull(this.tableBeamWell.Internal_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInternal_IDNull() {
                this[this.tableBeamWell.Internal_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup1Null() {
                return this.IsNull(this.tableBeamWell.Group1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup1Null() {
                this[this.tableBeamWell.Group1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup2Null() {
                return this.IsNull(this.tableBeamWell.Group2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup2Null() {
                this[this.tableBeamWell.Group2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup3Null() {
                return this.IsNull(this.tableBeamWell.Group3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup3Null() {
                this[this.tableBeamWell.Group3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup4Null() {
                return this.IsNull(this.tableBeamWell.Group4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup4Null() {
                this[this.tableBeamWell.Group4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFacility_DescriptionNull() {
                return this.IsNull(this.tableBeamWell.Facility_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFacility_DescriptionNull() {
                this[this.tableBeamWell.Facility_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRodpum_ControllerNull() {
                return this.IsNull(this.tableBeamWell.Rodpum_ControllerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRodpum_ControllerNull() {
                this[this.tableBeamWell.Rodpum_ControllerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsController_TypeNull() {
                return this.IsNull(this.tableBeamWell.Controller_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetController_TypeNull() {
                this[this.tableBeamWell.Controller_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSub_Controller_TypeNull() {
                return this.IsNull(this.tableBeamWell.Sub_Controller_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSub_Controller_TypeNull() {
                this[this.tableBeamWell.Sub_Controller_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommunication_ProtocolNull() {
                return this.IsNull(this.tableBeamWell.Communication_ProtocolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommunication_ProtocolNull() {
                this[this.tableBeamWell.Communication_ProtocolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommunication_PortNull() {
                return this.IsNull(this.tableBeamWell.Communication_PortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommunication_PortNull() {
                this[this.tableBeamWell.Communication_PortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommunication_AddressNull() {
                return this.IsNull(this.tableBeamWell.Communication_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommunication_AddressNull() {
                this[this.tableBeamWell.Communication_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAlt_AddressNull() {
                return this.IsNull(this.tableBeamWell.Alt_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAlt_AddressNull() {
                this[this.tableBeamWell.Alt_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsComm_retryNull() {
                return this.IsNull(this.tableBeamWell.Comm_retryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetComm_retryNull() {
                this[this.tableBeamWell.Comm_retryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKey_On_DelayNull() {
                return this.IsNull(this.tableBeamWell.Key_On_DelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKey_On_DelayNull() {
                this[this.tableBeamWell.Key_On_DelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKey_Off_DelayNull() {
                return this.IsNull(this.tableBeamWell.Key_Off_DelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKey_Off_DelayNull() {
                this[this.tableBeamWell.Key_Off_DelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAlarm_DelayNull() {
                return this.IsNull(this.tableBeamWell.Alarm_DelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAlarm_DelayNull() {
                this[this.tableBeamWell.Alarm_DelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClear_DelayNull() {
                return this.IsNull(this.tableBeamWell.Clear_DelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClear_DelayNull() {
                this[this.tableBeamWell.Clear_DelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMax_Event_History_RecsNull() {
                return this.IsNull(this.tableBeamWell.Max_Event_History_RecsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMax_Event_History_RecsNull() {
                this[this.tableBeamWell.Max_Event_History_RecsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTop_PerforationNull() {
                return this.IsNull(this.tableBeamWell.Top_PerforationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTop_PerforationNull() {
                this[this.tableBeamWell.Top_PerforationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBottom_PerforationNull() {
                return this.IsNull(this.tableBeamWell.Bottom_PerforationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBottom_PerforationNull() {
                this[this.tableBeamWell.Bottom_PerforationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAnchor_depthNull() {
                return this.IsNull(this.tableBeamWell.Anchor_depthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAnchor_depthNull() {
                this[this.tableBeamWell.Anchor_depthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPlug_Back_TDNull() {
                return this.IsNull(this.tableBeamWell.Plug_Back_TDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPlug_Back_TDNull() {
                this[this.tableBeamWell.Plug_Back_TDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPump_MeasuredNull() {
                return this.IsNull(this.tableBeamWell.Pump_MeasuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPump_MeasuredNull() {
                this[this.tableBeamWell.Pump_MeasuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPump_VerticalNull() {
                return this.IsNull(this.tableBeamWell.Pump_VerticalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPump_VerticalNull() {
                this[this.tableBeamWell.Pump_VerticalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPump_IDNull() {
                return this.IsNull(this.tableBeamWell.Pump_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPump_IDNull() {
                this[this.tableBeamWell.Pump_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_Valve_OpenNull() {
                return this.IsNull(this.tableBeamWell.Casing_Valve_OpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_Valve_OpenNull() {
                this[this.tableBeamWell.Casing_Valve_OpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_ODNull() {
                return this.IsNull(this.tableBeamWell.Casing_ODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_ODNull() {
                this[this.tableBeamWell.Casing_ODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_WeightNull() {
                return this.IsNull(this.tableBeamWell.Casing_WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_WeightNull() {
                this[this.tableBeamWell.Casing_WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubing_ODNull() {
                return this.IsNull(this.tableBeamWell.Tubing_ODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubing_ODNull() {
                this[this.tableBeamWell.Tubing_ODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOilNull() {
                return this.IsNull(this.tableBeamWell.OilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOilNull() {
                this[this.tableBeamWell.OilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWaterNull() {
                return this.IsNull(this.tableBeamWell.WaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWaterNull() {
                this[this.tableBeamWell.WaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGasNull() {
                return this.IsNull(this.tableBeamWell.GasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGasNull() {
                this[this.tableBeamWell.GasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLast_WT_dateNull() {
                return this.IsNull(this.tableBeamWell.Last_WT_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLast_WT_dateNull() {
                this[this.tableBeamWell.Last_WT_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOil_GravityNull() {
                return this.IsNull(this.tableBeamWell.Oil_GravityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOil_GravityNull() {
                this[this.tableBeamWell.Oil_GravityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWater_SP_GravNull() {
                return this.IsNull(this.tableBeamWell.Water_SP_GravColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWater_SP_GravNull() {
                this[this.tableBeamWell.Water_SP_GravColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGas_Sp_GravNull() {
                return this.IsNull(this.tableBeamWell.Gas_Sp_GravColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGas_Sp_GravNull() {
                this[this.tableBeamWell.Gas_Sp_GravColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubing_PressNull() {
                return this.IsNull(this.tableBeamWell.Tubing_PressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubing_PressNull() {
                this[this.tableBeamWell.Tubing_PressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubing_GradientNull() {
                return this.IsNull(this.tableBeamWell.Tubing_GradientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubing_GradientNull() {
                this[this.tableBeamWell.Tubing_GradientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubing_Temp_WheadNull() {
                return this.IsNull(this.tableBeamWell.Tubing_Temp_WheadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubing_Temp_WheadNull() {
                this[this.tableBeamWell.Tubing_Temp_WheadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_PressNull() {
                return this.IsNull(this.tableBeamWell.Casing_PressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_PressNull() {
                this[this.tableBeamWell.Casing_PressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_Oil_CutNull() {
                return this.IsNull(this.tableBeamWell.Casing_Oil_CutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_Oil_CutNull() {
                this[this.tableBeamWell.Casing_Oil_CutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluid_Level_From_SurfaceNull() {
                return this.IsNull(this.tableBeamWell.Fluid_Level_From_SurfaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluid_Level_From_SurfaceNull() {
                this[this.tableBeamWell.Fluid_Level_From_SurfaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluid_Level_Shot_DateNull() {
                return this.IsNull(this.tableBeamWell.Fluid_Level_Shot_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluid_Level_Shot_DateNull() {
                this[this.tableBeamWell.Fluid_Level_Shot_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluid_Level_CommentNull() {
                return this.IsNull(this.tableBeamWell.Fluid_Level_CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluid_Level_CommentNull() {
                this[this.tableBeamWell.Fluid_Level_CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUse_Fluid_Insertia_For_AnalysisNull() {
                return this.IsNull(this.tableBeamWell.Use_Fluid_Insertia_For_AnalysisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUse_Fluid_Insertia_For_AnalysisNull() {
                this[this.tableBeamWell.Use_Fluid_Insertia_For_AnalysisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnit_TypeNull() {
                return this.IsNull(this.tableBeamWell.Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnit_TypeNull() {
                this[this.tableBeamWell.Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPumping_UnitNull() {
                return this.IsNull(this.tableBeamWell.Pumping_UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPumping_UnitNull() {
                this[this.tableBeamWell.Pumping_UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWrist_PinNull() {
                return this.IsNull(this.tableBeamWell.Wrist_PinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWrist_PinNull() {
                this[this.tableBeamWell.Wrist_PinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActual_StrokeNull() {
                return this.IsNull(this.tableBeamWell.Actual_StrokeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActual_StrokeNull() {
                this[this.tableBeamWell.Actual_StrokeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTorque_MethodeNull() {
                return this.IsNull(this.tableBeamWell.Torque_MethodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTorque_MethodeNull() {
                this[this.tableBeamWell.Torque_MethodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRotationNull() {
                return this.IsNull(this.tableBeamWell.RotationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRotationNull() {
                this[this.tableBeamWell.RotationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMotor_TypeNull() {
                return this.IsNull(this.tableBeamWell.Motor_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMotor_TypeNull() {
                this[this.tableBeamWell.Motor_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMotor_SizeNull() {
                return this.IsNull(this.tableBeamWell.Motor_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMotor_SizeNull() {
                this[this.tableBeamWell.Motor_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSlip_TorqueNull() {
                return this.IsNull(this.tableBeamWell.Slip_TorqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSlip_TorqueNull() {
                this[this.tableBeamWell.Slip_TorqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMeasured_Motor_Amps_UpNull() {
                return this.IsNull(this.tableBeamWell.Measured_Motor_Amps_UpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMeasured_Motor_Amps_UpNull() {
                this[this.tableBeamWell.Measured_Motor_Amps_UpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMeasured_Motor_Amps_DownNull() {
                return this.IsNull(this.tableBeamWell.Measured_Motor_Amps_DownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMeasured_Motor_Amps_DownNull() {
                this[this.tableBeamWell.Measured_Motor_Amps_DownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMax_Air_Balance_PressNull() {
                return this.IsNull(this.tableBeamWell.Max_Air_Balance_PressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMax_Air_Balance_PressNull() {
                this[this.tableBeamWell.Max_Air_Balance_PressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMin_Air_Balance_PressNull() {
                return this.IsNull(this.tableBeamWell.Min_Air_Balance_PressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMin_Air_Balance_PressNull() {
                this[this.tableBeamWell.Min_Air_Balance_PressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrank_IDNull() {
                return this.IsNull(this.tableBeamWell.Crank_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrank_IDNull() {
                this[this.tableBeamWell.Crank_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCBTNull() {
                return this.IsNull(this.tableBeamWell.CBTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCBTNull() {
                this[this.tableBeamWell.CBTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lead_DistanceNull() {
                return this.IsNull(this.tableBeamWell.C1_Lead_DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lead_DistanceNull() {
                this[this.tableBeamWell.C1_Lead_DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lead_Primary_WtNull() {
                return this.IsNull(this.tableBeamWell.C1_Lead_Primary_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lead_Primary_WtNull() {
                this[this.tableBeamWell.C1_Lead_Primary_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lead_Aux_WTNull() {
                return this.IsNull(this.tableBeamWell.C1_Lead_Aux_WTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lead_Aux_WTNull() {
                this[this.tableBeamWell.C1_Lead_Aux_WTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_lag_DistanceNull() {
                return this.IsNull(this.tableBeamWell.C1_lag_DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_lag_DistanceNull() {
                this[this.tableBeamWell.C1_lag_DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lag_Primary_WtNull() {
                return this.IsNull(this.tableBeamWell.C1_Lag_Primary_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lag_Primary_WtNull() {
                this[this.tableBeamWell.C1_Lag_Primary_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lag_Aux_WtNull() {
                return this.IsNull(this.tableBeamWell.C1_Lag_Aux_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lag_Aux_WtNull() {
                this[this.tableBeamWell.C1_Lag_Aux_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lead_DistanceNull() {
                return this.IsNull(this.tableBeamWell.C2_Lead_DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lead_DistanceNull() {
                this[this.tableBeamWell.C2_Lead_DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lead_Primary_WtNull() {
                return this.IsNull(this.tableBeamWell.C2_Lead_Primary_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lead_Primary_WtNull() {
                this[this.tableBeamWell.C2_Lead_Primary_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lead_Aux_WTNull() {
                return this.IsNull(this.tableBeamWell.C2_Lead_Aux_WTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lead_Aux_WTNull() {
                this[this.tableBeamWell.C2_Lead_Aux_WTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_lag_DistanceNull() {
                return this.IsNull(this.tableBeamWell.C2_lag_DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_lag_DistanceNull() {
                this[this.tableBeamWell.C2_lag_DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lag_Primary_WtNull() {
                return this.IsNull(this.tableBeamWell.C2_Lag_Primary_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lag_Primary_WtNull() {
                this[this.tableBeamWell.C2_Lag_Primary_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lag_Aux_WtNull() {
                return this.IsNull(this.tableBeamWell.C2_Lag_Aux_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lag_Aux_WtNull() {
                this[this.tableBeamWell.C2_Lag_Aux_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluid_Above_PumpNull() {
                return this.IsNull(this.tableBeamWell.Fluid_Above_PumpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluid_Above_PumpNull() {
                this[this.tableBeamWell.Fluid_Above_PumpColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Beam_Well_Group_ConfigurationRow : global::System.Data.DataRow {
            
            private Beam_Well_Group_ConfigurationDataTable tableBeam_Well_Group_Configuration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal Beam_Well_Group_ConfigurationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBeam_Well_Group_Configuration = ((Beam_Well_Group_ConfigurationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LWNAME {
                get {
                    return ((string)(this[this.tableBeam_Well_Group_Configuration.LWNAMEColumn]));
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.LWNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAVNAME {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.NAVNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NAVNAME\' in table \'Beam_Well_Group_Configuration\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.NAVNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UniqueWellbore {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.UniqueWellboreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UniqueWellbore\' in table \'Beam_Well_Group_Configuration\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.UniqueWellboreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UniqueWellboreID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.UniqueWellboreIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UniqueWellboreID\' in table \'Beam_Well_Group_Configuration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.UniqueWellboreIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UniqueIntervalID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.UniqueIntervalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UniqueIntervalID\' in table \'Beam_Well_Group_Configuration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.UniqueIntervalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CAOID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.CAOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAOID\' in table \'Beam_Well_Group_Configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CAOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LongName {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.LongNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LongName\' in table \'Beam_Well_Group_Configuration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.LongNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group1Name {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.Group1NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group1Name\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.Group1NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group2Name {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.Group2NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group2Name\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.Group2NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group3Name {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.Group3NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group3Name\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.Group3NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group4Name {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.Group4NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group4Name\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.Group4NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group5Name {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.Group5NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group5Name\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.Group5NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FacilityDescription {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.FacilityDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacilityDescription\' in table \'Beam_Well_Group_Configuratio" +
                                "n\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.FacilityDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double OutofScan {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.OutofScanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutofScan\' in table \'Beam_Well_Group_Configuration\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.OutofScanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double GeographicalXCoordinates {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.GeographicalXCoordinatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeographicalXCoordinates\' in table \'Beam_Well_Group_Configu" +
                                "ration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.GeographicalXCoordinatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double GeographicalYCoordinates {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.GeographicalYCoordinatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GeographicalYCoordinates\' in table \'Beam_Well_Group_Configu" +
                                "ration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.GeographicalYCoordinatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RodPumpControllerType {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.RodPumpControllerTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RodPumpControllerType\' in table \'Beam_Well_Group_Configurat" +
                                "ion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.RodPumpControllerTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ControllerSubType {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.ControllerSubTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ControllerSubType\' in table \'Beam_Well_Group_Configuration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.ControllerSubTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CommPort {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.CommPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommPort\' in table \'Beam_Well_Group_Configuration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CommPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CommProtocol {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.CommProtocolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommProtocol\' in table \'Beam_Well_Group_Configuration\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CommProtocolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double CommAddress {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.CommAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommAddress\' in table \'Beam_Well_Group_Configuration\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CommAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AlternateAddress {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.AlternateAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlternateAddress\' in table \'Beam_Well_Group_Configuration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.AlternateAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double CommRetries {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.CommRetriesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommRetries\' in table \'Beam_Well_Group_Configuration\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CommRetriesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double KeyOnDelay {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.KeyOnDelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyOnDelay\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.KeyOnDelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double KeyOffDelay {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.KeyOffDelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeyOffDelay\' in table \'Beam_Well_Group_Configuration\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.KeyOffDelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double AlarmDelay {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.AlarmDelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlarmDelay\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.AlarmDelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double ClearDelay {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.ClearDelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClearDelay\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.ClearDelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double WelltestAutoEval {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.WelltestAutoEvalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WelltestAutoEval\' in table \'Beam_Well_Group_Configuration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.WelltestAutoEvalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TopPerfs {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.TopPerfsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TopPerfs\' in table \'Beam_Well_Group_Configuration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.TopPerfsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double BottomPerfs {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.BottomPerfsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BottomPerfs\' in table \'Beam_Well_Group_Configuration\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.BottomPerfsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TACDepth {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.TACDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TACDepth\' in table \'Beam_Well_Group_Configuration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.TACDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double PlugBackTD {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.PlugBackTDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlugBackTD\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.PlugBackTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double PumpMeasuredDepth {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.PumpMeasuredDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpMeasuredDepth\' in table \'Beam_Well_Group_Configuration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.PumpMeasuredDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double PumpVerticalDepth {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.PumpVerticalDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpVerticalDepth\' in table \'Beam_Well_Group_Configuration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.PumpVerticalDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double PumpID {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.PumpIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpID\' in table \'Beam_Well_Group_Configuration\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.PumpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CasingValveOpen {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.CasingValveOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CasingValveOpen\' in table \'Beam_Well_Group_Configuration\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CasingValveOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double CasingOD {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.CasingODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CasingOD\' in table \'Beam_Well_Group_Configuration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CasingODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double CasingWeight {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.CasingWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CasingWeight\' in table \'Beam_Well_Group_Configuration\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CasingWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TubingOD {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.TubingODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TubingOD\' in table \'Beam_Well_Group_Configuration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.TubingODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Oil {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.OilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oil\' in table \'Beam_Well_Group_Configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.OilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Water {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.WaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Water\' in table \'Beam_Well_Group_Configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.WaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Gas {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.GasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gas\' in table \'Beam_Well_Group_Configuration\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.GasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LastWellTestDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBeam_Well_Group_Configuration.LastWellTestDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastWellTestDate\' in table \'Beam_Well_Group_Configuration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.LastWellTestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double OilGravity {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.OilGravityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OilGravity\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.OilGravityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double WaterSpGravity {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.WaterSpGravityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterSpGravity\' in table \'Beam_Well_Group_Configuration\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.WaterSpGravityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double GasSpGravity {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.GasSpGravityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GasSpGravity\' in table \'Beam_Well_Group_Configuration\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.GasSpGravityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TubingPres {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.TubingPresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TubingPres\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.TubingPresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double TubingGrad {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.TubingGradColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TubingGrad\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.TubingGradColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double WheadTemp {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.WheadTempColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WheadTemp\' in table \'Beam_Well_Group_Configuration\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.WheadTempColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double CasingPres {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.CasingPresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CasingPres\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CasingPresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double CasingOilCut {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.CasingOilCutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CasingOilCut\' in table \'Beam_Well_Group_Configuration\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CasingOilCutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FLevelfromSurface {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.FLevelfromSurfaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLevelfromSurface\' in table \'Beam_Well_Group_Configuration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.FLevelfromSurfaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double FluidAbovePump {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.FluidAbovePumpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FluidAbovePump\' in table \'Beam_Well_Group_Configuration\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.FluidAbovePumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime FluidLevelDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBeam_Well_Group_Configuration.FluidLevelDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FluidLevelDate\' in table \'Beam_Well_Group_Configuration\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.FluidLevelDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FluidLevelComment {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.FluidLevelCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FluidLevelComment\' in table \'Beam_Well_Group_Configuration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.FluidLevelCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FluidInertiaforAna {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.FluidInertiaforAnaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FluidInertiaforAna\' in table \'Beam_Well_Group_Configuration" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.FluidInertiaforAnaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PumpingUnitManuf {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.PumpingUnitManufColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpingUnitManuf\' in table \'Beam_Well_Group_Configuration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.PumpingUnitManufColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PUnitType {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.PUnitTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PUnitType\' in table \'Beam_Well_Group_Configuration\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.PUnitTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double GearboxSize {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.GearboxSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GearboxSize\' in table \'Beam_Well_Group_Configuration\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.GearboxSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double BeamRating {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.BeamRatingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeamRating\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.BeamRatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double StrokeLength {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.StrokeLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StrokeLength\' in table \'Beam_Well_Group_Configuration\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.StrokeLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PumpingUnitDescription {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.PumpingUnitDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PumpingUnitDescription\' in table \'Beam_Well_Group_Configura" +
                                "tion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.PumpingUnitDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double WristPin {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.WristPinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WristPin\' in table \'Beam_Well_Group_Configuration\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.WristPinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double ActualStrokLength {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.ActualStrokLengthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualStrokLength\' in table \'Beam_Well_Group_Configuration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.ActualStrokLengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TorqueCalcMethod {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.TorqueCalcMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TorqueCalcMethod\' in table \'Beam_Well_Group_Configuration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.TorqueCalcMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UnitRotation {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.UnitRotationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitRotation\' in table \'Beam_Well_Group_Configuration\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.UnitRotationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MotorType {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.MotorTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorType\' in table \'Beam_Well_Group_Configuration\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.MotorTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double MotorSize {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.MotorSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorSize\' in table \'Beam_Well_Group_Configuration\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.MotorSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double SlipTorque {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.SlipTorqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlipTorque\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.SlipTorqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CrankID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.CrankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CrankID\' in table \'Beam_Well_Group_Configuration\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CrankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double CBTCBE {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.CBTCBEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBTCBE\' in table \'Beam_Well_Group_Configuration\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.CBTCBEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double MeasMotorAmps {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.MeasMotorAmpsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasMotorAmps\' in table \'Beam_Well_Group_Configuration\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.MeasMotorAmpsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double MeasMotorAmps1 {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.MeasMotorAmps1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasMotorAmps1\' in table \'Beam_Well_Group_Configuration\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.MeasMotorAmps1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double MaxAirBalPres {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.MaxAirBalPresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxAirBalPres\' in table \'Beam_Well_Group_Configuration\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.MaxAirBalPresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double MinAirBalPres {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.MinAirBalPresColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinAirBalPres\' in table \'Beam_Well_Group_Configuration\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.MinAirBalPresColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double MaxEvent_HistoryRecords {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.MaxEvent_HistoryRecordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxEvent HistoryRecords\' in table \'Beam_Well_Group_Configur" +
                                "ation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.MaxEvent_HistoryRecordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double C1Lead_Dist {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.C1Lead_DistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1Lead Dist\' in table \'Beam_Well_Group_Configuration\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C1Lead_DistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1LeadPrimaryWeightID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.C1LeadPrimaryWeightIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1LeadPrimaryWeightID\' in table \'Beam_Well_Group_Configurat" +
                                "ion\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C1LeadPrimaryWeightIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1LeadAuxWeight {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.C1LeadAuxWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1LeadAuxWeight\' in table \'Beam_Well_Group_Configuration\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C1LeadAuxWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double C1LagDist {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.C1LagDistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1LagDist\' in table \'Beam_Well_Group_Configuration\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C1LagDistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1LagPrimaryWeightID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.C1LagPrimaryWeightIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1LagPrimaryWeightID\' in table \'Beam_Well_Group_Configurati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C1LagPrimaryWeightIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1Lag_AuxWeighID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.C1Lag_AuxWeighIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1Lag AuxWeighID\' in table \'Beam_Well_Group_Configuration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C1Lag_AuxWeighIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double C2LeadDist {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.C2LeadDistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2LeadDist\' in table \'Beam_Well_Group_Configuration\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C2LeadDistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2LeadPrimaryWeighID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.C2LeadPrimaryWeighIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2LeadPrimaryWeighID\' in table \'Beam_Well_Group_Configurati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C2LeadPrimaryWeighIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2LeadAuxWeightID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.C2LeadAuxWeightIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2LeadAuxWeightID\' in table \'Beam_Well_Group_Configuration\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C2LeadAuxWeightIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double C2LagDist {
                get {
                    try {
                        return ((double)(this[this.tableBeam_Well_Group_Configuration.C2LagDistColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2LagDist\' in table \'Beam_Well_Group_Configuration\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C2LagDistColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2LagPrimaryWeightID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.C2LagPrimaryWeightIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2LagPrimaryWeightID\' in table \'Beam_Well_Group_Configurati" +
                                "on\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C2LagPrimaryWeightIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2LaAuxWeightID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.C2LaAuxWeightIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2LaAuxWeightID\' in table \'Beam_Well_Group_Configuration\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.C2LaAuxWeightIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FacilitRecord {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.FacilitRecordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacilitRecord\' in table \'Beam_Well_Group_Configuration\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.FacilitRecordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RodpumController {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.RodpumControllerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RodpumController\' in table \'Beam_Well_Group_Configuration\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.RodpumControllerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Internal_ID {
                get {
                    try {
                        return ((string)(this[this.tableBeam_Well_Group_Configuration.Internal_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Internal_ID\' in table \'Beam_Well_Group_Configuration\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBeam_Well_Group_Configuration.Internal_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNAVNAMENull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.NAVNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNAVNAMENull() {
                this[this.tableBeam_Well_Group_Configuration.NAVNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUniqueWellboreNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.UniqueWellboreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUniqueWellboreNull() {
                this[this.tableBeam_Well_Group_Configuration.UniqueWellboreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUniqueWellboreIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.UniqueWellboreIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUniqueWellboreIDNull() {
                this[this.tableBeam_Well_Group_Configuration.UniqueWellboreIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUniqueIntervalIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.UniqueIntervalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUniqueIntervalIDNull() {
                this[this.tableBeam_Well_Group_Configuration.UniqueIntervalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCAOIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CAOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCAOIDNull() {
                this[this.tableBeam_Well_Group_Configuration.CAOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLongNameNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.LongNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLongNameNull() {
                this[this.tableBeam_Well_Group_Configuration.LongNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup1NameNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.Group1NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup1NameNull() {
                this[this.tableBeam_Well_Group_Configuration.Group1NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup2NameNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.Group2NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup2NameNull() {
                this[this.tableBeam_Well_Group_Configuration.Group2NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup3NameNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.Group3NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup3NameNull() {
                this[this.tableBeam_Well_Group_Configuration.Group3NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup4NameNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.Group4NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup4NameNull() {
                this[this.tableBeam_Well_Group_Configuration.Group4NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup5NameNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.Group5NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup5NameNull() {
                this[this.tableBeam_Well_Group_Configuration.Group5NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFacilityDescriptionNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.FacilityDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFacilityDescriptionNull() {
                this[this.tableBeam_Well_Group_Configuration.FacilityDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOutofScanNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.OutofScanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOutofScanNull() {
                this[this.tableBeam_Well_Group_Configuration.OutofScanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGeographicalXCoordinatesNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.GeographicalXCoordinatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGeographicalXCoordinatesNull() {
                this[this.tableBeam_Well_Group_Configuration.GeographicalXCoordinatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGeographicalYCoordinatesNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.GeographicalYCoordinatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGeographicalYCoordinatesNull() {
                this[this.tableBeam_Well_Group_Configuration.GeographicalYCoordinatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRodPumpControllerTypeNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.RodPumpControllerTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRodPumpControllerTypeNull() {
                this[this.tableBeam_Well_Group_Configuration.RodPumpControllerTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsControllerSubTypeNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.ControllerSubTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetControllerSubTypeNull() {
                this[this.tableBeam_Well_Group_Configuration.ControllerSubTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommPortNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CommPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommPortNull() {
                this[this.tableBeam_Well_Group_Configuration.CommPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommProtocolNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CommProtocolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommProtocolNull() {
                this[this.tableBeam_Well_Group_Configuration.CommProtocolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommAddressNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CommAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommAddressNull() {
                this[this.tableBeam_Well_Group_Configuration.CommAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAlternateAddressNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.AlternateAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAlternateAddressNull() {
                this[this.tableBeam_Well_Group_Configuration.AlternateAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommRetriesNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CommRetriesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommRetriesNull() {
                this[this.tableBeam_Well_Group_Configuration.CommRetriesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKeyOnDelayNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.KeyOnDelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKeyOnDelayNull() {
                this[this.tableBeam_Well_Group_Configuration.KeyOnDelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKeyOffDelayNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.KeyOffDelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKeyOffDelayNull() {
                this[this.tableBeam_Well_Group_Configuration.KeyOffDelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAlarmDelayNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.AlarmDelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAlarmDelayNull() {
                this[this.tableBeam_Well_Group_Configuration.AlarmDelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClearDelayNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.ClearDelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClearDelayNull() {
                this[this.tableBeam_Well_Group_Configuration.ClearDelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWelltestAutoEvalNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.WelltestAutoEvalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWelltestAutoEvalNull() {
                this[this.tableBeam_Well_Group_Configuration.WelltestAutoEvalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTopPerfsNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.TopPerfsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTopPerfsNull() {
                this[this.tableBeam_Well_Group_Configuration.TopPerfsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBottomPerfsNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.BottomPerfsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBottomPerfsNull() {
                this[this.tableBeam_Well_Group_Configuration.BottomPerfsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTACDepthNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.TACDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTACDepthNull() {
                this[this.tableBeam_Well_Group_Configuration.TACDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPlugBackTDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.PlugBackTDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPlugBackTDNull() {
                this[this.tableBeam_Well_Group_Configuration.PlugBackTDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPumpMeasuredDepthNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.PumpMeasuredDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPumpMeasuredDepthNull() {
                this[this.tableBeam_Well_Group_Configuration.PumpMeasuredDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPumpVerticalDepthNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.PumpVerticalDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPumpVerticalDepthNull() {
                this[this.tableBeam_Well_Group_Configuration.PumpVerticalDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPumpIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.PumpIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPumpIDNull() {
                this[this.tableBeam_Well_Group_Configuration.PumpIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasingValveOpenNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CasingValveOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasingValveOpenNull() {
                this[this.tableBeam_Well_Group_Configuration.CasingValveOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasingODNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CasingODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasingODNull() {
                this[this.tableBeam_Well_Group_Configuration.CasingODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasingWeightNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CasingWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasingWeightNull() {
                this[this.tableBeam_Well_Group_Configuration.CasingWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubingODNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.TubingODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubingODNull() {
                this[this.tableBeam_Well_Group_Configuration.TubingODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOilNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.OilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOilNull() {
                this[this.tableBeam_Well_Group_Configuration.OilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWaterNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.WaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWaterNull() {
                this[this.tableBeam_Well_Group_Configuration.WaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGasNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.GasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGasNull() {
                this[this.tableBeam_Well_Group_Configuration.GasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLastWellTestDateNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.LastWellTestDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLastWellTestDateNull() {
                this[this.tableBeam_Well_Group_Configuration.LastWellTestDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOilGravityNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.OilGravityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOilGravityNull() {
                this[this.tableBeam_Well_Group_Configuration.OilGravityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWaterSpGravityNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.WaterSpGravityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWaterSpGravityNull() {
                this[this.tableBeam_Well_Group_Configuration.WaterSpGravityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGasSpGravityNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.GasSpGravityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGasSpGravityNull() {
                this[this.tableBeam_Well_Group_Configuration.GasSpGravityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubingPresNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.TubingPresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubingPresNull() {
                this[this.tableBeam_Well_Group_Configuration.TubingPresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubingGradNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.TubingGradColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubingGradNull() {
                this[this.tableBeam_Well_Group_Configuration.TubingGradColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWheadTempNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.WheadTempColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWheadTempNull() {
                this[this.tableBeam_Well_Group_Configuration.WheadTempColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasingPresNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CasingPresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasingPresNull() {
                this[this.tableBeam_Well_Group_Configuration.CasingPresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasingOilCutNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CasingOilCutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasingOilCutNull() {
                this[this.tableBeam_Well_Group_Configuration.CasingOilCutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFLevelfromSurfaceNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.FLevelfromSurfaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFLevelfromSurfaceNull() {
                this[this.tableBeam_Well_Group_Configuration.FLevelfromSurfaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluidAbovePumpNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.FluidAbovePumpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluidAbovePumpNull() {
                this[this.tableBeam_Well_Group_Configuration.FluidAbovePumpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluidLevelDateNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.FluidLevelDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluidLevelDateNull() {
                this[this.tableBeam_Well_Group_Configuration.FluidLevelDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluidLevelCommentNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.FluidLevelCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluidLevelCommentNull() {
                this[this.tableBeam_Well_Group_Configuration.FluidLevelCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluidInertiaforAnaNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.FluidInertiaforAnaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluidInertiaforAnaNull() {
                this[this.tableBeam_Well_Group_Configuration.FluidInertiaforAnaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPumpingUnitManufNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.PumpingUnitManufColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPumpingUnitManufNull() {
                this[this.tableBeam_Well_Group_Configuration.PumpingUnitManufColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPUnitTypeNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.PUnitTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPUnitTypeNull() {
                this[this.tableBeam_Well_Group_Configuration.PUnitTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGearboxSizeNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.GearboxSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGearboxSizeNull() {
                this[this.tableBeam_Well_Group_Configuration.GearboxSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBeamRatingNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.BeamRatingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBeamRatingNull() {
                this[this.tableBeam_Well_Group_Configuration.BeamRatingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsStrokeLengthNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.StrokeLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetStrokeLengthNull() {
                this[this.tableBeam_Well_Group_Configuration.StrokeLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPumpingUnitDescriptionNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.PumpingUnitDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPumpingUnitDescriptionNull() {
                this[this.tableBeam_Well_Group_Configuration.PumpingUnitDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWristPinNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.WristPinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWristPinNull() {
                this[this.tableBeam_Well_Group_Configuration.WristPinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActualStrokLengthNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.ActualStrokLengthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActualStrokLengthNull() {
                this[this.tableBeam_Well_Group_Configuration.ActualStrokLengthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTorqueCalcMethodNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.TorqueCalcMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTorqueCalcMethodNull() {
                this[this.tableBeam_Well_Group_Configuration.TorqueCalcMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnitRotationNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.UnitRotationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnitRotationNull() {
                this[this.tableBeam_Well_Group_Configuration.UnitRotationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMotorTypeNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.MotorTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMotorTypeNull() {
                this[this.tableBeam_Well_Group_Configuration.MotorTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMotorSizeNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.MotorSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMotorSizeNull() {
                this[this.tableBeam_Well_Group_Configuration.MotorSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSlipTorqueNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.SlipTorqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSlipTorqueNull() {
                this[this.tableBeam_Well_Group_Configuration.SlipTorqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrankIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CrankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrankIDNull() {
                this[this.tableBeam_Well_Group_Configuration.CrankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCBTCBENull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.CBTCBEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCBTCBENull() {
                this[this.tableBeam_Well_Group_Configuration.CBTCBEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMeasMotorAmpsNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.MeasMotorAmpsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMeasMotorAmpsNull() {
                this[this.tableBeam_Well_Group_Configuration.MeasMotorAmpsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMeasMotorAmps1Null() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.MeasMotorAmps1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMeasMotorAmps1Null() {
                this[this.tableBeam_Well_Group_Configuration.MeasMotorAmps1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMaxAirBalPresNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.MaxAirBalPresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMaxAirBalPresNull() {
                this[this.tableBeam_Well_Group_Configuration.MaxAirBalPresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMinAirBalPresNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.MinAirBalPresColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMinAirBalPresNull() {
                this[this.tableBeam_Well_Group_Configuration.MinAirBalPresColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMaxEvent_HistoryRecordsNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.MaxEvent_HistoryRecordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMaxEvent_HistoryRecordsNull() {
                this[this.tableBeam_Well_Group_Configuration.MaxEvent_HistoryRecordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1Lead_DistNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C1Lead_DistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1Lead_DistNull() {
                this[this.tableBeam_Well_Group_Configuration.C1Lead_DistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1LeadPrimaryWeightIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C1LeadPrimaryWeightIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1LeadPrimaryWeightIDNull() {
                this[this.tableBeam_Well_Group_Configuration.C1LeadPrimaryWeightIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1LeadAuxWeightNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C1LeadAuxWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1LeadAuxWeightNull() {
                this[this.tableBeam_Well_Group_Configuration.C1LeadAuxWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1LagDistNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C1LagDistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1LagDistNull() {
                this[this.tableBeam_Well_Group_Configuration.C1LagDistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1LagPrimaryWeightIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C1LagPrimaryWeightIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1LagPrimaryWeightIDNull() {
                this[this.tableBeam_Well_Group_Configuration.C1LagPrimaryWeightIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1Lag_AuxWeighIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C1Lag_AuxWeighIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1Lag_AuxWeighIDNull() {
                this[this.tableBeam_Well_Group_Configuration.C1Lag_AuxWeighIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2LeadDistNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C2LeadDistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2LeadDistNull() {
                this[this.tableBeam_Well_Group_Configuration.C2LeadDistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2LeadPrimaryWeighIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C2LeadPrimaryWeighIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2LeadPrimaryWeighIDNull() {
                this[this.tableBeam_Well_Group_Configuration.C2LeadPrimaryWeighIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2LeadAuxWeightIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C2LeadAuxWeightIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2LeadAuxWeightIDNull() {
                this[this.tableBeam_Well_Group_Configuration.C2LeadAuxWeightIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2LagDistNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C2LagDistColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2LagDistNull() {
                this[this.tableBeam_Well_Group_Configuration.C2LagDistColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2LagPrimaryWeightIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C2LagPrimaryWeightIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2LagPrimaryWeightIDNull() {
                this[this.tableBeam_Well_Group_Configuration.C2LagPrimaryWeightIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2LaAuxWeightIDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.C2LaAuxWeightIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2LaAuxWeightIDNull() {
                this[this.tableBeam_Well_Group_Configuration.C2LaAuxWeightIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFacilitRecordNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.FacilitRecordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFacilitRecordNull() {
                this[this.tableBeam_Well_Group_Configuration.FacilitRecordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRodpumControllerNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.RodpumControllerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRodpumControllerNull() {
                this[this.tableBeam_Well_Group_Configuration.RodpumControllerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInternal_IDNull() {
                return this.IsNull(this.tableBeam_Well_Group_Configuration.Internal_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInternal_IDNull() {
                this[this.tableBeam_Well_Group_Configuration.Internal_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class BeamWellRowChangeEvent : global::System.EventArgs {
            
            private BeamWellRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRowChangeEvent(BeamWellRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class Beam_Well_Group_ConfigurationRowChangeEvent : global::System.EventArgs {
            
            private Beam_Well_Group_ConfigurationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Beam_Well_Group_ConfigurationRowChangeEvent(Beam_Well_Group_ConfigurationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public Beam_Well_Group_ConfigurationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LowisChartApp.ds.BeamWellGroupConfiguration.BeamWellDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BeamWellTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public BeamWellTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BeamWell";
            tableMapping.ColumnMappings.Add("wellname", "wellname");
            tableMapping.ColumnMappings.Add("navigator_name", "navigator_name");
            tableMapping.ColumnMappings.Add("CAO_ID", "CAO_ID");
            tableMapping.ColumnMappings.Add("Long_Name", "Long_Name");
            tableMapping.ColumnMappings.Add("Internal_ID", "Internal_ID");
            tableMapping.ColumnMappings.Add("Group1", "Group1");
            tableMapping.ColumnMappings.Add("Group2", "Group2");
            tableMapping.ColumnMappings.Add("Group3", "Group3");
            tableMapping.ColumnMappings.Add("Group4", "Group4");
            tableMapping.ColumnMappings.Add("Facility_Description", "Facility_Description");
            tableMapping.ColumnMappings.Add("Rodpum_Controller", "Rodpum_Controller");
            tableMapping.ColumnMappings.Add("Controller_Type", "Controller_Type");
            tableMapping.ColumnMappings.Add("Sub_Controller_Type", "Sub_Controller_Type");
            tableMapping.ColumnMappings.Add("Communication_Protocol", "Communication_Protocol");
            tableMapping.ColumnMappings.Add("Communication_Port", "Communication_Port");
            tableMapping.ColumnMappings.Add("Communication_Address", "Communication_Address");
            tableMapping.ColumnMappings.Add("Alt_Address", "Alt_Address");
            tableMapping.ColumnMappings.Add("Comm_retry", "Comm_retry");
            tableMapping.ColumnMappings.Add("Key_On_Delay", "Key_On_Delay");
            tableMapping.ColumnMappings.Add("Key_Off_Delay", "Key_Off_Delay");
            tableMapping.ColumnMappings.Add("Alarm_Delay", "Alarm_Delay");
            tableMapping.ColumnMappings.Add("Clear_Delay", "Clear_Delay");
            tableMapping.ColumnMappings.Add("Max_Event_History_Recs", "Max_Event_History_Recs");
            tableMapping.ColumnMappings.Add("Top_Perforation", "Top_Perforation");
            tableMapping.ColumnMappings.Add("Bottom_Perforation", "Bottom_Perforation");
            tableMapping.ColumnMappings.Add("Anchor_depth", "Anchor_depth");
            tableMapping.ColumnMappings.Add("Plug_Back_TD", "Plug_Back_TD");
            tableMapping.ColumnMappings.Add("Pump_Measured", "Pump_Measured");
            tableMapping.ColumnMappings.Add("Pump_Vertical", "Pump_Vertical");
            tableMapping.ColumnMappings.Add("Pump_ID", "Pump_ID");
            tableMapping.ColumnMappings.Add("Casing_Valve_Open", "Casing_Valve_Open");
            tableMapping.ColumnMappings.Add("Casing_OD", "Casing_OD");
            tableMapping.ColumnMappings.Add("Casing_Weight", "Casing_Weight");
            tableMapping.ColumnMappings.Add("Tubing_OD", "Tubing_OD");
            tableMapping.ColumnMappings.Add("Oil", "Oil");
            tableMapping.ColumnMappings.Add("Water", "Water");
            tableMapping.ColumnMappings.Add("Gas", "Gas");
            tableMapping.ColumnMappings.Add("Last_WT_date", "Last_WT_date");
            tableMapping.ColumnMappings.Add("Oil_Gravity", "Oil_Gravity");
            tableMapping.ColumnMappings.Add("Water_SP_Grav", "Water_SP_Grav");
            tableMapping.ColumnMappings.Add("Gas_Sp_Grav", "Gas_Sp_Grav");
            tableMapping.ColumnMappings.Add("Tubing_Press", "Tubing_Press");
            tableMapping.ColumnMappings.Add("Tubing_Gradient", "Tubing_Gradient");
            tableMapping.ColumnMappings.Add("Tubing_Temp_Whead", "Tubing_Temp_Whead");
            tableMapping.ColumnMappings.Add("Casing_Press", "Casing_Press");
            tableMapping.ColumnMappings.Add("Casing_Oil_Cut", "Casing_Oil_Cut");
            tableMapping.ColumnMappings.Add("Fluid_Level_From_Surface", "Fluid_Level_From_Surface");
            tableMapping.ColumnMappings.Add("Fluid_Level_Shot_Date", "Fluid_Level_Shot_Date");
            tableMapping.ColumnMappings.Add("Fluid_Level_Comment", "Fluid_Level_Comment");
            tableMapping.ColumnMappings.Add("Use_Fluid_Insertia_For_Analysis", "Use_Fluid_Insertia_For_Analysis");
            tableMapping.ColumnMappings.Add("Unit_Type", "Unit_Type");
            tableMapping.ColumnMappings.Add("Pumping_Unit", "Pumping_Unit");
            tableMapping.ColumnMappings.Add("Wrist_Pin", "Wrist_Pin");
            tableMapping.ColumnMappings.Add("Actual_Stroke", "Actual_Stroke");
            tableMapping.ColumnMappings.Add("Torque_Methode", "Torque_Methode");
            tableMapping.ColumnMappings.Add("Rotation", "Rotation");
            tableMapping.ColumnMappings.Add("Motor_Type", "Motor_Type");
            tableMapping.ColumnMappings.Add("Motor_Size", "Motor_Size");
            tableMapping.ColumnMappings.Add("Slip_Torque", "Slip_Torque");
            tableMapping.ColumnMappings.Add("Measured_Motor_Amps_Up", "Measured_Motor_Amps_Up");
            tableMapping.ColumnMappings.Add("Measured_Motor_Amps_Down", "Measured_Motor_Amps_Down");
            tableMapping.ColumnMappings.Add("Max_Air_Balance_Press", "Max_Air_Balance_Press");
            tableMapping.ColumnMappings.Add("Min_Air_Balance_Press", "Min_Air_Balance_Press");
            tableMapping.ColumnMappings.Add("Crank_ID", "Crank_ID");
            tableMapping.ColumnMappings.Add("CBT", "CBT");
            tableMapping.ColumnMappings.Add("C1_Lead_Distance", "C1_Lead_Distance");
            tableMapping.ColumnMappings.Add("C1_Lead_Primary_Wt", "C1_Lead_Primary_Wt");
            tableMapping.ColumnMappings.Add("C1_Lead_Aux_WT", "C1_Lead_Aux_WT");
            tableMapping.ColumnMappings.Add("C1_lag_Distance", "C1_lag_Distance");
            tableMapping.ColumnMappings.Add("C1_Lag_Primary_Wt", "C1_Lag_Primary_Wt");
            tableMapping.ColumnMappings.Add("C1_Lag_Aux_Wt", "C1_Lag_Aux_Wt");
            tableMapping.ColumnMappings.Add("C2_Lead_Distance", "C2_Lead_Distance");
            tableMapping.ColumnMappings.Add("C2_Lead_Primary_Wt", "C2_Lead_Primary_Wt");
            tableMapping.ColumnMappings.Add("C2_Lead_Aux_WT", "C2_Lead_Aux_WT");
            tableMapping.ColumnMappings.Add("C2_lag_Distance", "C2_lag_Distance");
            tableMapping.ColumnMappings.Add("C2_Lag_Primary_Wt", "C2_Lag_Primary_Wt");
            tableMapping.ColumnMappings.Add("C2_Lag_Aux_Wt", "C2_Lag_Aux_Wt");
            tableMapping.ColumnMappings.Add("Fluid_Above_Pump", "Fluid_Above_Pump");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [BeamWell] WHERE (([wellname] = @Original_wellname) AND ((@IsNull_nav" +
                "igator_name = 1 AND [navigator_name] IS NULL) OR ([navigator_name] = @Original_n" +
                "avigator_name)) AND ((@IsNull_CAO_ID = 1 AND [CAO_ID] IS NULL) OR ([CAO_ID] = @O" +
                "riginal_CAO_ID)) AND ((@IsNull_Long_Name = 1 AND [Long_Name] IS NULL) OR ([Long_" +
                "Name] = @Original_Long_Name)) AND ((@IsNull_Internal_ID = 1 AND [Internal_ID] IS" +
                " NULL) OR ([Internal_ID] = @Original_Internal_ID)) AND ((@IsNull_Group1 = 1 AND " +
                "[Group1] IS NULL) OR ([Group1] = @Original_Group1)) AND ((@IsNull_Group2 = 1 AND" +
                " [Group2] IS NULL) OR ([Group2] = @Original_Group2)) AND ((@IsNull_Group3 = 1 AN" +
                "D [Group3] IS NULL) OR ([Group3] = @Original_Group3)) AND ((@IsNull_Group4 = 1 A" +
                "ND [Group4] IS NULL) OR ([Group4] = @Original_Group4)) AND ((@IsNull_Facility_De" +
                "scription = 1 AND [Facility_Description] IS NULL) OR ([Facility_Description] = @" +
                "Original_Facility_Description)) AND ((@IsNull_Rodpum_Controller = 1 AND [Rodpum_" +
                "Controller] IS NULL) OR ([Rodpum_Controller] = @Original_Rodpum_Controller)) AND" +
                " ((@IsNull_Controller_Type = 1 AND [Controller_Type] IS NULL) OR ([Controller_Ty" +
                "pe] = @Original_Controller_Type)) AND ((@IsNull_Sub_Controller_Type = 1 AND [Sub" +
                "_Controller_Type] IS NULL) OR ([Sub_Controller_Type] = @Original_Sub_Controller_" +
                "Type)) AND ((@IsNull_Communication_Protocol = 1 AND [Communication_Protocol] IS " +
                "NULL) OR ([Communication_Protocol] = @Original_Communication_Protocol)) AND ((@I" +
                "sNull_Communication_Port = 1 AND [Communication_Port] IS NULL) OR ([Communicatio" +
                "n_Port] = @Original_Communication_Port)) AND ((@IsNull_Communication_Address = 1" +
                " AND [Communication_Address] IS NULL) OR ([Communication_Address] = @Original_Co" +
                "mmunication_Address)) AND ((@IsNull_Alt_Address = 1 AND [Alt_Address] IS NULL) O" +
                "R ([Alt_Address] = @Original_Alt_Address)) AND ((@IsNull_Comm_retry = 1 AND [Com" +
                "m_retry] IS NULL) OR ([Comm_retry] = @Original_Comm_retry)) AND ((@IsNull_Key_On" +
                "_Delay = 1 AND [Key_On_Delay] IS NULL) OR ([Key_On_Delay] = @Original_Key_On_Del" +
                "ay)) AND ((@IsNull_Key_Off_Delay = 1 AND [Key_Off_Delay] IS NULL) OR ([Key_Off_D" +
                "elay] = @Original_Key_Off_Delay)) AND ((@IsNull_Alarm_Delay = 1 AND [Alarm_Delay" +
                "] IS NULL) OR ([Alarm_Delay] = @Original_Alarm_Delay)) AND ((@IsNull_Clear_Delay" +
                " = 1 AND [Clear_Delay] IS NULL) OR ([Clear_Delay] = @Original_Clear_Delay)) AND " +
                "((@IsNull_Max_Event_History_Recs = 1 AND [Max_Event_History_Recs] IS NULL) OR ([" +
                "Max_Event_History_Recs] = @Original_Max_Event_History_Recs)) AND ((@IsNull_Top_P" +
                "erforation = 1 AND [Top_Perforation] IS NULL) OR ([Top_Perforation] = @Original_" +
                "Top_Perforation)) AND ((@IsNull_Bottom_Perforation = 1 AND [Bottom_Perforation] " +
                "IS NULL) OR ([Bottom_Perforation] = @Original_Bottom_Perforation)) AND ((@IsNull" +
                "_Anchor_depth = 1 AND [Anchor_depth] IS NULL) OR ([Anchor_depth] = @Original_Anc" +
                "hor_depth)) AND ((@IsNull_Plug_Back_TD = 1 AND [Plug_Back_TD] IS NULL) OR ([Plug" +
                "_Back_TD] = @Original_Plug_Back_TD)) AND ((@IsNull_Pump_Measured = 1 AND [Pump_M" +
                "easured] IS NULL) OR ([Pump_Measured] = @Original_Pump_Measured)) AND ((@IsNull_" +
                "Pump_Vertical = 1 AND [Pump_Vertical] IS NULL) OR ([Pump_Vertical] = @Original_P" +
                "ump_Vertical)) AND ((@IsNull_Pump_ID = 1 AND [Pump_ID] IS NULL) OR ([Pump_ID] = " +
                "@Original_Pump_ID)) AND ((@IsNull_Casing_Valve_Open = 1 AND [Casing_Valve_Open] " +
                "IS NULL) OR ([Casing_Valve_Open] = @Original_Casing_Valve_Open)) AND ((@IsNull_C" +
                "asing_OD = 1 AND [Casing_OD] IS NULL) OR ([Casing_OD] = @Original_Casing_OD)) AN" +
                "D ((@IsNull_Casing_Weight = 1 AND [Casing_Weight] IS NULL) OR ([Casing_Weight] =" +
                " @Original_Casing_Weight)) AND ((@IsNull_Tubing_OD = 1 AND [Tubing_OD] IS NULL) " +
                "OR ([Tubing_OD] = @Original_Tubing_OD)) AND ((@IsNull_Oil = 1 AND [Oil] IS NULL)" +
                " OR ([Oil] = @Original_Oil)) AND ((@IsNull_Water = 1 AND [Water] IS NULL) OR ([W" +
                "ater] = @Original_Water)) AND ((@IsNull_Gas = 1 AND [Gas] IS NULL) OR ([Gas] = @" +
                "Original_Gas)) AND ((@IsNull_Last_WT_date = 1 AND [Last_WT_date] IS NULL) OR ([L" +
                "ast_WT_date] = @Original_Last_WT_date)) AND ((@IsNull_Oil_Gravity = 1 AND [Oil_G" +
                "ravity] IS NULL) OR ([Oil_Gravity] = @Original_Oil_Gravity)) AND ((@IsNull_Water" +
                "_SP_Grav = 1 AND [Water_SP_Grav] IS NULL) OR ([Water_SP_Grav] = @Original_Water_" +
                "SP_Grav)) AND ((@IsNull_Gas_Sp_Grav = 1 AND [Gas_Sp_Grav] IS NULL) OR ([Gas_Sp_G" +
                "rav] = @Original_Gas_Sp_Grav)) AND ((@IsNull_Tubing_Press = 1 AND [Tubing_Press]" +
                " IS NULL) OR ([Tubing_Press] = @Original_Tubing_Press)) AND ((@IsNull_Tubing_Gra" +
                "dient = 1 AND [Tubing_Gradient] IS NULL) OR ([Tubing_Gradient] = @Original_Tubin" +
                "g_Gradient)) AND ((@IsNull_Tubing_Temp_Whead = 1 AND [Tubing_Temp_Whead] IS NULL" +
                ") OR ([Tubing_Temp_Whead] = @Original_Tubing_Temp_Whead)) AND ((@IsNull_Casing_P" +
                "ress = 1 AND [Casing_Press] IS NULL) OR ([Casing_Press] = @Original_Casing_Press" +
                ")) AND ((@IsNull_Casing_Oil_Cut = 1 AND [Casing_Oil_Cut] IS NULL) OR ([Casing_Oi" +
                "l_Cut] = @Original_Casing_Oil_Cut)) AND ((@IsNull_Fluid_Level_From_Surface = 1 A" +
                "ND [Fluid_Level_From_Surface] IS NULL) OR ([Fluid_Level_From_Surface] = @Origina" +
                "l_Fluid_Level_From_Surface)) AND ((@IsNull_Fluid_Level_Shot_Date = 1 AND [Fluid_" +
                "Level_Shot_Date] IS NULL) OR ([Fluid_Level_Shot_Date] = @Original_Fluid_Level_Sh" +
                "ot_Date)) AND ((@IsNull_Fluid_Level_Comment = 1 AND [Fluid_Level_Comment] IS NUL" +
                "L) OR ([Fluid_Level_Comment] = @Original_Fluid_Level_Comment)) AND ((@IsNull_Use" +
                "_Fluid_Insertia_For_Analysis = 1 AND [Use_Fluid_Insertia_For_Analysis] IS NULL) " +
                "OR ([Use_Fluid_Insertia_For_Analysis] = @Original_Use_Fluid_Insertia_For_Analysi" +
                "s)) AND ((@IsNull_Unit_Type = 1 AND [Unit_Type] IS NULL) OR ([Unit_Type] = @Orig" +
                "inal_Unit_Type)) AND ((@IsNull_Pumping_Unit = 1 AND [Pumping_Unit] IS NULL) OR (" +
                "[Pumping_Unit] = @Original_Pumping_Unit)) AND ((@IsNull_Wrist_Pin = 1 AND [Wrist" +
                "_Pin] IS NULL) OR ([Wrist_Pin] = @Original_Wrist_Pin)) AND ((@IsNull_Actual_Stro" +
                "ke = 1 AND [Actual_Stroke] IS NULL) OR ([Actual_Stroke] = @Original_Actual_Strok" +
                "e)) AND ((@IsNull_Torque_Methode = 1 AND [Torque_Methode] IS NULL) OR ([Torque_M" +
                "ethode] = @Original_Torque_Methode)) AND ((@IsNull_Rotation = 1 AND [Rotation] I" +
                "S NULL) OR ([Rotation] = @Original_Rotation)) AND ((@IsNull_Motor_Type = 1 AND [" +
                "Motor_Type] IS NULL) OR ([Motor_Type] = @Original_Motor_Type)) AND ((@IsNull_Mot" +
                "or_Size = 1 AND [Motor_Size] IS NULL) OR ([Motor_Size] = @Original_Motor_Size)) " +
                "AND ((@IsNull_Slip_Torque = 1 AND [Slip_Torque] IS NULL) OR ([Slip_Torque] = @Or" +
                "iginal_Slip_Torque)) AND ((@IsNull_Measured_Motor_Amps_Up = 1 AND [Measured_Moto" +
                "r_Amps_Up] IS NULL) OR ([Measured_Motor_Amps_Up] = @Original_Measured_Motor_Amps" +
                "_Up)) AND ((@IsNull_Measured_Motor_Amps_Down = 1 AND [Measured_Motor_Amps_Down] " +
                "IS NULL) OR ([Measured_Motor_Amps_Down] = @Original_Measured_Motor_Amps_Down)) A" +
                "ND ((@IsNull_Max_Air_Balance_Press = 1 AND [Max_Air_Balance_Press] IS NULL) OR (" +
                "[Max_Air_Balance_Press] = @Original_Max_Air_Balance_Press)) AND ((@IsNull_Min_Ai" +
                "r_Balance_Press = 1 AND [Min_Air_Balance_Press] IS NULL) OR ([Min_Air_Balance_Pr" +
                "ess] = @Original_Min_Air_Balance_Press)) AND ((@IsNull_Crank_ID = 1 AND [Crank_I" +
                "D] IS NULL) OR ([Crank_ID] = @Original_Crank_ID)) AND ((@IsNull_CBT = 1 AND [CBT" +
                "] IS NULL) OR ([CBT] = @Original_CBT)) AND ((@IsNull_C1_Lead_Distance = 1 AND [C" +
                "1_Lead_Distance] IS NULL) OR ([C1_Lead_Distance] = @Original_C1_Lead_Distance)) " +
                "AND ((@IsNull_C1_Lead_Primary_Wt = 1 AND [C1_Lead_Primary_Wt] IS NULL) OR ([C1_L" +
                "ead_Primary_Wt] = @Original_C1_Lead_Primary_Wt)) AND ((@IsNull_C1_Lead_Aux_WT = " +
                "1 AND [C1_Lead_Aux_WT] IS NULL) OR ([C1_Lead_Aux_WT] = @Original_C1_Lead_Aux_WT)" +
                ") AND ((@IsNull_C1_lag_Distance = 1 AND [C1_lag_Distance] IS NULL) OR ([C1_lag_D" +
                "istance] = @Original_C1_lag_Distance)) AND ((@IsNull_C1_Lag_Primary_Wt = 1 AND [" +
                "C1_Lag_Primary_Wt] IS NULL) OR ([C1_Lag_Primary_Wt] = @Original_C1_Lag_Primary_W" +
                "t)) AND ((@IsNull_C1_Lag_Aux_Wt = 1 AND [C1_Lag_Aux_Wt] IS NULL) OR ([C1_Lag_Aux" +
                "_Wt] = @Original_C1_Lag_Aux_Wt)) AND ((@IsNull_C2_Lead_Distance = 1 AND [C2_Lead" +
                "_Distance] IS NULL) OR ([C2_Lead_Distance] = @Original_C2_Lead_Distance)) AND ((" +
                "@IsNull_C2_Lead_Primary_Wt = 1 AND [C2_Lead_Primary_Wt] IS NULL) OR ([C2_Lead_Pr" +
                "imary_Wt] = @Original_C2_Lead_Primary_Wt)) AND ((@IsNull_C2_Lead_Aux_WT = 1 AND " +
                "[C2_Lead_Aux_WT] IS NULL) OR ([C2_Lead_Aux_WT] = @Original_C2_Lead_Aux_WT)) AND " +
                "((@IsNull_C2_lag_Distance = 1 AND [C2_lag_Distance] IS NULL) OR ([C2_lag_Distanc" +
                "e] = @Original_C2_lag_Distance)) AND ((@IsNull_C2_Lag_Primary_Wt = 1 AND [C2_Lag" +
                "_Primary_Wt] IS NULL) OR ([C2_Lag_Primary_Wt] = @Original_C2_Lag_Primary_Wt)) AN" +
                "D ((@IsNull_C2_Lag_Aux_Wt = 1 AND [C2_Lag_Aux_Wt] IS NULL) OR ([C2_Lag_Aux_Wt] =" +
                " @Original_C2_Lag_Aux_Wt)) AND ((@IsNull_Fluid_Above_Pump = 1 AND [Fluid_Above_P" +
                "ump] IS NULL) OR ([Fluid_Above_Pump] = @Original_Fluid_Above_Pump)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wellname", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_navigator_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_navigator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CAO_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAO_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Long_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Long_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Internal_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Internal_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Facility_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Facility_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rodpum_Controller", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodpum_Controller", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Controller_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sub_Controller_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sub_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Port", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Top_Perforation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Top_Perforation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Top_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Top_Perforation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bottom_Perforation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bottom_Perforation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bottom_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Bottom_Perforation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Anchor_depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anchor_depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anchor_depth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Anchor_depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Plug_Back_TD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plug_Back_TD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Plug_Back_TD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Plug_Back_TD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_Measured", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_Measured", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_Measured", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Measured", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_Vertical", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_Vertical", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_Vertical", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Vertical", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Valve_Open", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Valve_Open", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_OD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Casing_OD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Weight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_OD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Tubing_OD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_WT_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_WT_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil_Gravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil_Gravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil_Gravity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil_Gravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water_SP_Grav", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water_SP_Grav", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water_SP_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water_SP_Grav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas_Sp_Grav", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas_Sp_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Gradient", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Gradient", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Gradient", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Gradient", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Temp_Whead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Temp_Whead", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Oil_Cut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Oil_Cut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_From_Surface", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_From_Surface", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_Shot_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_Shot_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_Comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pumping_Unit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pumping_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Stroke", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Stroke", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Stroke", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Actual_Stroke", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Torque_Methode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Torque_Methode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rotation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rotation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Motor_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Motor_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Motor_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Motor_Size", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Motor_Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Slip_Torque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Slip_Torque", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Slip_Torque", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Slip_Torque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Air_Balance_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Min_Air_Balance_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Min_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Crank_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Crank_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CBT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CBT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "CBT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_Lead_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Aux_WT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_lag_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_lag_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_lag_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lag_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lag_Aux_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_Lead_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Aux_WT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_lag_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_lag_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_lag_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lag_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lag_Aux_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Above_Pump", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Above_Pump", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [BeamWell] ([wellname], [navigator_name], [CAO_ID], [Long_Name], [Int" +
                "ernal_ID], [Group1], [Group2], [Group3], [Group4], [Facility_Description], [Rodp" +
                "um_Controller], [Controller_Type], [Sub_Controller_Type], [Communication_Protoco" +
                "l], [Communication_Port], [Communication_Address], [Alt_Address], [Comm_retry], " +
                "[Key_On_Delay], [Key_Off_Delay], [Alarm_Delay], [Clear_Delay], [Max_Event_Histor" +
                "y_Recs], [Top_Perforation], [Bottom_Perforation], [Anchor_depth], [Plug_Back_TD]" +
                ", [Pump_Measured], [Pump_Vertical], [Pump_ID], [Casing_Valve_Open], [Casing_OD]," +
                " [Casing_Weight], [Tubing_OD], [Oil], [Water], [Gas], [Last_WT_date], [Oil_Gravi" +
                "ty], [Water_SP_Grav], [Gas_Sp_Grav], [Tubing_Press], [Tubing_Gradient], [Tubing_" +
                "Temp_Whead], [Casing_Press], [Casing_Oil_Cut], [Fluid_Level_From_Surface], [Flui" +
                "d_Level_Shot_Date], [Fluid_Level_Comment], [Use_Fluid_Insertia_For_Analysis], [U" +
                "nit_Type], [Pumping_Unit], [Wrist_Pin], [Actual_Stroke], [Torque_Methode], [Rota" +
                "tion], [Motor_Type], [Motor_Size], [Slip_Torque], [Measured_Motor_Amps_Up], [Mea" +
                "sured_Motor_Amps_Down], [Max_Air_Balance_Press], [Min_Air_Balance_Press], [Crank" +
                "_ID], [CBT], [C1_Lead_Distance], [C1_Lead_Primary_Wt], [C1_Lead_Aux_WT], [C1_lag" +
                "_Distance], [C1_Lag_Primary_Wt], [C1_Lag_Aux_Wt], [C2_Lead_Distance], [C2_Lead_P" +
                "rimary_Wt], [C2_Lead_Aux_WT], [C2_lag_Distance], [C2_Lag_Primary_Wt], [C2_Lag_Au" +
                "x_Wt], [Fluid_Above_Pump]) VALUES (@wellname, @navigator_name, @CAO_ID, @Long_Na" +
                "me, @Internal_ID, @Group1, @Group2, @Group3, @Group4, @Facility_Description, @Ro" +
                "dpum_Controller, @Controller_Type, @Sub_Controller_Type, @Communication_Protocol" +
                ", @Communication_Port, @Communication_Address, @Alt_Address, @Comm_retry, @Key_O" +
                "n_Delay, @Key_Off_Delay, @Alarm_Delay, @Clear_Delay, @Max_Event_History_Recs, @T" +
                "op_Perforation, @Bottom_Perforation, @Anchor_depth, @Plug_Back_TD, @Pump_Measure" +
                "d, @Pump_Vertical, @Pump_ID, @Casing_Valve_Open, @Casing_OD, @Casing_Weight, @Tu" +
                "bing_OD, @Oil, @Water, @Gas, @Last_WT_date, @Oil_Gravity, @Water_SP_Grav, @Gas_S" +
                "p_Grav, @Tubing_Press, @Tubing_Gradient, @Tubing_Temp_Whead, @Casing_Press, @Cas" +
                "ing_Oil_Cut, @Fluid_Level_From_Surface, @Fluid_Level_Shot_Date, @Fluid_Level_Com" +
                "ment, @Use_Fluid_Insertia_For_Analysis, @Unit_Type, @Pumping_Unit, @Wrist_Pin, @" +
                "Actual_Stroke, @Torque_Methode, @Rotation, @Motor_Type, @Motor_Size, @Slip_Torqu" +
                "e, @Measured_Motor_Amps_Up, @Measured_Motor_Amps_Down, @Max_Air_Balance_Press, @" +
                "Min_Air_Balance_Press, @Crank_ID, @CBT, @C1_Lead_Distance, @C1_Lead_Primary_Wt, " +
                "@C1_Lead_Aux_WT, @C1_lag_Distance, @C1_Lag_Primary_Wt, @C1_Lag_Aux_Wt, @C2_Lead_" +
                "Distance, @C2_Lead_Primary_Wt, @C2_Lead_Aux_WT, @C2_lag_Distance, @C2_Lag_Primar" +
                "y_Wt, @C2_Lag_Aux_Wt, @Fluid_Above_Pump);\r\nSELECT wellname, navigator_name, CAO_" +
                "ID, Long_Name, Internal_ID, Group1, Group2, Group3, Group4, Facility_Description" +
                ", Rodpum_Controller, Controller_Type, Sub_Controller_Type, Communication_Protoco" +
                "l, Communication_Port, Communication_Address, Alt_Address, Comm_retry, Key_On_De" +
                "lay, Key_Off_Delay, Alarm_Delay, Clear_Delay, Max_Event_History_Recs, Top_Perfor" +
                "ation, Bottom_Perforation, Anchor_depth, Plug_Back_TD, Pump_Measured, Pump_Verti" +
                "cal, Pump_ID, Casing_Valve_Open, Casing_OD, Casing_Weight, Tubing_OD, Oil, Water" +
                ", Gas, Last_WT_date, Oil_Gravity, Water_SP_Grav, Gas_Sp_Grav, Tubing_Press, Tubi" +
                "ng_Gradient, Tubing_Temp_Whead, Casing_Press, Casing_Oil_Cut, Fluid_Level_From_S" +
                "urface, Fluid_Level_Shot_Date, Fluid_Level_Comment, Use_Fluid_Insertia_For_Analy" +
                "sis, Unit_Type, Pumping_Unit, Wrist_Pin, Actual_Stroke, Torque_Methode, Rotation" +
                ", Motor_Type, Motor_Size, Slip_Torque, Measured_Motor_Amps_Up, Measured_Motor_Am" +
                "ps_Down, Max_Air_Balance_Press, Min_Air_Balance_Press, Crank_ID, CBT, C1_Lead_Di" +
                "stance, C1_Lead_Primary_Wt, C1_Lead_Aux_WT, C1_lag_Distance, C1_Lag_Primary_Wt, " +
                "C1_Lag_Aux_Wt, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_Lead_Aux_WT, C2_lag_Dist" +
                "ance, C2_Lag_Primary_Wt, C2_Lag_Aux_Wt, Fluid_Above_Pump FROM BeamWell WHERE (we" +
                "llname = @wellname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wellname", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@navigator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAO_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Long_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Internal_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Facility_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodpum_Controller", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sub_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Port", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Top_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Top_Perforation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bottom_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Bottom_Perforation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anchor_depth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Anchor_depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plug_Back_TD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Plug_Back_TD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_Measured", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Measured", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_Vertical", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Vertical", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Valve_Open", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Casing_OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Tubing_OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_WT_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil_Gravity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil_Gravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water_SP_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water_SP_Grav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas_Sp_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Gradient", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Gradient", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Temp_Whead", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Oil_Cut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_From_Surface", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_Shot_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pumping_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Stroke", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Actual_Stroke", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Torque_Methode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rotation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motor_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motor_Size", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Motor_Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Slip_Torque", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Slip_Torque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Min_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crank_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "CBT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_Lead_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_lag_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_Lead_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_lag_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Above_Pump", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [BeamWell] SET [wellname] = @wellname, [navigator_name] = @navigator_name," +
                " [CAO_ID] = @CAO_ID, [Long_Name] = @Long_Name, [Internal_ID] = @Internal_ID, [Gr" +
                "oup1] = @Group1, [Group2] = @Group2, [Group3] = @Group3, [Group4] = @Group4, [Fa" +
                "cility_Description] = @Facility_Description, [Rodpum_Controller] = @Rodpum_Contr" +
                "oller, [Controller_Type] = @Controller_Type, [Sub_Controller_Type] = @Sub_Contro" +
                "ller_Type, [Communication_Protocol] = @Communication_Protocol, [Communication_Po" +
                "rt] = @Communication_Port, [Communication_Address] = @Communication_Address, [Al" +
                "t_Address] = @Alt_Address, [Comm_retry] = @Comm_retry, [Key_On_Delay] = @Key_On_" +
                "Delay, [Key_Off_Delay] = @Key_Off_Delay, [Alarm_Delay] = @Alarm_Delay, [Clear_De" +
                "lay] = @Clear_Delay, [Max_Event_History_Recs] = @Max_Event_History_Recs, [Top_Pe" +
                "rforation] = @Top_Perforation, [Bottom_Perforation] = @Bottom_Perforation, [Anch" +
                "or_depth] = @Anchor_depth, [Plug_Back_TD] = @Plug_Back_TD, [Pump_Measured] = @Pu" +
                "mp_Measured, [Pump_Vertical] = @Pump_Vertical, [Pump_ID] = @Pump_ID, [Casing_Val" +
                "ve_Open] = @Casing_Valve_Open, [Casing_OD] = @Casing_OD, [Casing_Weight] = @Casi" +
                "ng_Weight, [Tubing_OD] = @Tubing_OD, [Oil] = @Oil, [Water] = @Water, [Gas] = @Ga" +
                "s, [Last_WT_date] = @Last_WT_date, [Oil_Gravity] = @Oil_Gravity, [Water_SP_Grav]" +
                " = @Water_SP_Grav, [Gas_Sp_Grav] = @Gas_Sp_Grav, [Tubing_Press] = @Tubing_Press," +
                " [Tubing_Gradient] = @Tubing_Gradient, [Tubing_Temp_Whead] = @Tubing_Temp_Whead," +
                " [Casing_Press] = @Casing_Press, [Casing_Oil_Cut] = @Casing_Oil_Cut, [Fluid_Leve" +
                "l_From_Surface] = @Fluid_Level_From_Surface, [Fluid_Level_Shot_Date] = @Fluid_Le" +
                "vel_Shot_Date, [Fluid_Level_Comment] = @Fluid_Level_Comment, [Use_Fluid_Insertia" +
                "_For_Analysis] = @Use_Fluid_Insertia_For_Analysis, [Unit_Type] = @Unit_Type, [Pu" +
                "mping_Unit] = @Pumping_Unit, [Wrist_Pin] = @Wrist_Pin, [Actual_Stroke] = @Actual" +
                "_Stroke, [Torque_Methode] = @Torque_Methode, [Rotation] = @Rotation, [Motor_Type" +
                "] = @Motor_Type, [Motor_Size] = @Motor_Size, [Slip_Torque] = @Slip_Torque, [Meas" +
                "ured_Motor_Amps_Up] = @Measured_Motor_Amps_Up, [Measured_Motor_Amps_Down] = @Mea" +
                "sured_Motor_Amps_Down, [Max_Air_Balance_Press] = @Max_Air_Balance_Press, [Min_Ai" +
                "r_Balance_Press] = @Min_Air_Balance_Press, [Crank_ID] = @Crank_ID, [CBT] = @CBT," +
                " [C1_Lead_Distance] = @C1_Lead_Distance, [C1_Lead_Primary_Wt] = @C1_Lead_Primary" +
                "_Wt, [C1_Lead_Aux_WT] = @C1_Lead_Aux_WT, [C1_lag_Distance] = @C1_lag_Distance, [" +
                "C1_Lag_Primary_Wt] = @C1_Lag_Primary_Wt, [C1_Lag_Aux_Wt] = @C1_Lag_Aux_Wt, [C2_L" +
                "ead_Distance] = @C2_Lead_Distance, [C2_Lead_Primary_Wt] = @C2_Lead_Primary_Wt, [" +
                "C2_Lead_Aux_WT] = @C2_Lead_Aux_WT, [C2_lag_Distance] = @C2_lag_Distance, [C2_Lag" +
                "_Primary_Wt] = @C2_Lag_Primary_Wt, [C2_Lag_Aux_Wt] = @C2_Lag_Aux_Wt, [Fluid_Abov" +
                "e_Pump] = @Fluid_Above_Pump WHERE (([wellname] = @Original_wellname) AND ((@IsNu" +
                "ll_navigator_name = 1 AND [navigator_name] IS NULL) OR ([navigator_name] = @Orig" +
                "inal_navigator_name)) AND ((@IsNull_CAO_ID = 1 AND [CAO_ID] IS NULL) OR ([CAO_ID" +
                "] = @Original_CAO_ID)) AND ((@IsNull_Long_Name = 1 AND [Long_Name] IS NULL) OR (" +
                "[Long_Name] = @Original_Long_Name)) AND ((@IsNull_Internal_ID = 1 AND [Internal_" +
                "ID] IS NULL) OR ([Internal_ID] = @Original_Internal_ID)) AND ((@IsNull_Group1 = " +
                "1 AND [Group1] IS NULL) OR ([Group1] = @Original_Group1)) AND ((@IsNull_Group2 =" +
                " 1 AND [Group2] IS NULL) OR ([Group2] = @Original_Group2)) AND ((@IsNull_Group3 " +
                "= 1 AND [Group3] IS NULL) OR ([Group3] = @Original_Group3)) AND ((@IsNull_Group4" +
                " = 1 AND [Group4] IS NULL) OR ([Group4] = @Original_Group4)) AND ((@IsNull_Facil" +
                "ity_Description = 1 AND [Facility_Description] IS NULL) OR ([Facility_Descriptio" +
                "n] = @Original_Facility_Description)) AND ((@IsNull_Rodpum_Controller = 1 AND [R" +
                "odpum_Controller] IS NULL) OR ([Rodpum_Controller] = @Original_Rodpum_Controller" +
                ")) AND ((@IsNull_Controller_Type = 1 AND [Controller_Type] IS NULL) OR ([Control" +
                "ler_Type] = @Original_Controller_Type)) AND ((@IsNull_Sub_Controller_Type = 1 AN" +
                "D [Sub_Controller_Type] IS NULL) OR ([Sub_Controller_Type] = @Original_Sub_Contr" +
                "oller_Type)) AND ((@IsNull_Communication_Protocol = 1 AND [Communication_Protoco" +
                "l] IS NULL) OR ([Communication_Protocol] = @Original_Communication_Protocol)) AN" +
                "D ((@IsNull_Communication_Port = 1 AND [Communication_Port] IS NULL) OR ([Commun" +
                "ication_Port] = @Original_Communication_Port)) AND ((@IsNull_Communication_Addre" +
                "ss = 1 AND [Communication_Address] IS NULL) OR ([Communication_Address] = @Origi" +
                "nal_Communication_Address)) AND ((@IsNull_Alt_Address = 1 AND [Alt_Address] IS N" +
                "ULL) OR ([Alt_Address] = @Original_Alt_Address)) AND ((@IsNull_Comm_retry = 1 AN" +
                "D [Comm_retry] IS NULL) OR ([Comm_retry] = @Original_Comm_retry)) AND ((@IsNull_" +
                "Key_On_Delay = 1 AND [Key_On_Delay] IS NULL) OR ([Key_On_Delay] = @Original_Key_" +
                "On_Delay)) AND ((@IsNull_Key_Off_Delay = 1 AND [Key_Off_Delay] IS NULL) OR ([Key" +
                "_Off_Delay] = @Original_Key_Off_Delay)) AND ((@IsNull_Alarm_Delay = 1 AND [Alarm" +
                "_Delay] IS NULL) OR ([Alarm_Delay] = @Original_Alarm_Delay)) AND ((@IsNull_Clear" +
                "_Delay = 1 AND [Clear_Delay] IS NULL) OR ([Clear_Delay] = @Original_Clear_Delay)" +
                ") AND ((@IsNull_Max_Event_History_Recs = 1 AND [Max_Event_History_Recs] IS NULL)" +
                " OR ([Max_Event_History_Recs] = @Original_Max_Event_History_Recs)) AND ((@IsNull" +
                "_Top_Perforation = 1 AND [Top_Perforation] IS NULL) OR ([Top_Perforation] = @Ori" +
                "ginal_Top_Perforation)) AND ((@IsNull_Bottom_Perforation = 1 AND [Bottom_Perfora" +
                "tion] IS NULL) OR ([Bottom_Perforation] = @Original_Bottom_Perforation)) AND ((@" +
                "IsNull_Anchor_depth = 1 AND [Anchor_depth] IS NULL) OR ([Anchor_depth] = @Origin" +
                "al_Anchor_depth)) AND ((@IsNull_Plug_Back_TD = 1 AND [Plug_Back_TD] IS NULL) OR " +
                "([Plug_Back_TD] = @Original_Plug_Back_TD)) AND ((@IsNull_Pump_Measured = 1 AND [" +
                "Pump_Measured] IS NULL) OR ([Pump_Measured] = @Original_Pump_Measured)) AND ((@I" +
                "sNull_Pump_Vertical = 1 AND [Pump_Vertical] IS NULL) OR ([Pump_Vertical] = @Orig" +
                "inal_Pump_Vertical)) AND ((@IsNull_Pump_ID = 1 AND [Pump_ID] IS NULL) OR ([Pump_" +
                "ID] = @Original_Pump_ID)) AND ((@IsNull_Casing_Valve_Open = 1 AND [Casing_Valve_" +
                "Open] IS NULL) OR ([Casing_Valve_Open] = @Original_Casing_Valve_Open)) AND ((@Is" +
                "Null_Casing_OD = 1 AND [Casing_OD] IS NULL) OR ([Casing_OD] = @Original_Casing_O" +
                "D)) AND ((@IsNull_Casing_Weight = 1 AND [Casing_Weight] IS NULL) OR ([Casing_Wei" +
                "ght] = @Original_Casing_Weight)) AND ((@IsNull_Tubing_OD = 1 AND [Tubing_OD] IS " +
                "NULL) OR ([Tubing_OD] = @Original_Tubing_OD)) AND ((@IsNull_Oil = 1 AND [Oil] IS" +
                " NULL) OR ([Oil] = @Original_Oil)) AND ((@IsNull_Water = 1 AND [Water] IS NULL) " +
                "OR ([Water] = @Original_Water)) AND ((@IsNull_Gas = 1 AND [Gas] IS NULL) OR ([Ga" +
                "s] = @Original_Gas)) AND ((@IsNull_Last_WT_date = 1 AND [Last_WT_date] IS NULL) " +
                "OR ([Last_WT_date] = @Original_Last_WT_date)) AND ((@IsNull_Oil_Gravity = 1 AND " +
                "[Oil_Gravity] IS NULL) OR ([Oil_Gravity] = @Original_Oil_Gravity)) AND ((@IsNull" +
                "_Water_SP_Grav = 1 AND [Water_SP_Grav] IS NULL) OR ([Water_SP_Grav] = @Original_" +
                "Water_SP_Grav)) AND ((@IsNull_Gas_Sp_Grav = 1 AND [Gas_Sp_Grav] IS NULL) OR ([Ga" +
                "s_Sp_Grav] = @Original_Gas_Sp_Grav)) AND ((@IsNull_Tubing_Press = 1 AND [Tubing_" +
                "Press] IS NULL) OR ([Tubing_Press] = @Original_Tubing_Press)) AND ((@IsNull_Tubi" +
                "ng_Gradient = 1 AND [Tubing_Gradient] IS NULL) OR ([Tubing_Gradient] = @Original" +
                "_Tubing_Gradient)) AND ((@IsNull_Tubing_Temp_Whead = 1 AND [Tubing_Temp_Whead] I" +
                "S NULL) OR ([Tubing_Temp_Whead] = @Original_Tubing_Temp_Whead)) AND ((@IsNull_Ca" +
                "sing_Press = 1 AND [Casing_Press] IS NULL) OR ([Casing_Press] = @Original_Casing" +
                "_Press)) AND ((@IsNull_Casing_Oil_Cut = 1 AND [Casing_Oil_Cut] IS NULL) OR ([Cas" +
                "ing_Oil_Cut] = @Original_Casing_Oil_Cut)) AND ((@IsNull_Fluid_Level_From_Surface" +
                " = 1 AND [Fluid_Level_From_Surface] IS NULL) OR ([Fluid_Level_From_Surface] = @O" +
                "riginal_Fluid_Level_From_Surface)) AND ((@IsNull_Fluid_Level_Shot_Date = 1 AND [" +
                "Fluid_Level_Shot_Date] IS NULL) OR ([Fluid_Level_Shot_Date] = @Original_Fluid_Le" +
                "vel_Shot_Date)) AND ((@IsNull_Fluid_Level_Comment = 1 AND [Fluid_Level_Comment] " +
                "IS NULL) OR ([Fluid_Level_Comment] = @Original_Fluid_Level_Comment)) AND ((@IsNu" +
                "ll_Use_Fluid_Insertia_For_Analysis = 1 AND [Use_Fluid_Insertia_For_Analysis] IS " +
                "NULL) OR ([Use_Fluid_Insertia_For_Analysis] = @Original_Use_Fluid_Insertia_For_A" +
                "nalysis)) AND ((@IsNull_Unit_Type = 1 AND [Unit_Type] IS NULL) OR ([Unit_Type] =" +
                " @Original_Unit_Type)) AND ((@IsNull_Pumping_Unit = 1 AND [Pumping_Unit] IS NULL" +
                ") OR ([Pumping_Unit] = @Original_Pumping_Unit)) AND ((@IsNull_Wrist_Pin = 1 AND " +
                "[Wrist_Pin] IS NULL) OR ([Wrist_Pin] = @Original_Wrist_Pin)) AND ((@IsNull_Actua" +
                "l_Stroke = 1 AND [Actual_Stroke] IS NULL) OR ([Actual_Stroke] = @Original_Actual" +
                "_Stroke)) AND ((@IsNull_Torque_Methode = 1 AND [Torque_Methode] IS NULL) OR ([To" +
                "rque_Methode] = @Original_Torque_Methode)) AND ((@IsNull_Rotation = 1 AND [Rotat" +
                "ion] IS NULL) OR ([Rotation] = @Original_Rotation)) AND ((@IsNull_Motor_Type = 1" +
                " AND [Motor_Type] IS NULL) OR ([Motor_Type] = @Original_Motor_Type)) AND ((@IsNu" +
                "ll_Motor_Size = 1 AND [Motor_Size] IS NULL) OR ([Motor_Size] = @Original_Motor_S" +
                "ize)) AND ((@IsNull_Slip_Torque = 1 AND [Slip_Torque] IS NULL) OR ([Slip_Torque]" +
                " = @Original_Slip_Torque)) AND ((@IsNull_Measured_Motor_Amps_Up = 1 AND [Measure" +
                "d_Motor_Amps_Up] IS NULL) OR ([Measured_Motor_Amps_Up] = @Original_Measured_Moto" +
                "r_Amps_Up)) AND ((@IsNull_Measured_Motor_Amps_Down = 1 AND [Measured_Motor_Amps_" +
                "Down] IS NULL) OR ([Measured_Motor_Amps_Down] = @Original_Measured_Motor_Amps_Do" +
                "wn)) AND ((@IsNull_Max_Air_Balance_Press = 1 AND [Max_Air_Balance_Press] IS NULL" +
                ") OR ([Max_Air_Balance_Press] = @Original_Max_Air_Balance_Press)) AND ((@IsNull_" +
                "Min_Air_Balance_Press = 1 AND [Min_Air_Balance_Press] IS NULL) OR ([Min_Air_Bala" +
                "nce_Press] = @Original_Min_Air_Balance_Press)) AND ((@IsNull_Crank_ID = 1 AND [C" +
                "rank_ID] IS NULL) OR ([Crank_ID] = @Original_Crank_ID)) AND ((@IsNull_CBT = 1 AN" +
                "D [CBT] IS NULL) OR ([CBT] = @Original_CBT)) AND ((@IsNull_C1_Lead_Distance = 1 " +
                "AND [C1_Lead_Distance] IS NULL) OR ([C1_Lead_Distance] = @Original_C1_Lead_Dista" +
                "nce)) AND ((@IsNull_C1_Lead_Primary_Wt = 1 AND [C1_Lead_Primary_Wt] IS NULL) OR " +
                "([C1_Lead_Primary_Wt] = @Original_C1_Lead_Primary_Wt)) AND ((@IsNull_C1_Lead_Aux" +
                "_WT = 1 AND [C1_Lead_Aux_WT] IS NULL) OR ([C1_Lead_Aux_WT] = @Original_C1_Lead_A" +
                "ux_WT)) AND ((@IsNull_C1_lag_Distance = 1 AND [C1_lag_Distance] IS NULL) OR ([C1" +
                "_lag_Distance] = @Original_C1_lag_Distance)) AND ((@IsNull_C1_Lag_Primary_Wt = 1" +
                " AND [C1_Lag_Primary_Wt] IS NULL) OR ([C1_Lag_Primary_Wt] = @Original_C1_Lag_Pri" +
                "mary_Wt)) AND ((@IsNull_C1_Lag_Aux_Wt = 1 AND [C1_Lag_Aux_Wt] IS NULL) OR ([C1_L" +
                "ag_Aux_Wt] = @Original_C1_Lag_Aux_Wt)) AND ((@IsNull_C2_Lead_Distance = 1 AND [C" +
                "2_Lead_Distance] IS NULL) OR ([C2_Lead_Distance] = @Original_C2_Lead_Distance)) " +
                "AND ((@IsNull_C2_Lead_Primary_Wt = 1 AND [C2_Lead_Primary_Wt] IS NULL) OR ([C2_L" +
                "ead_Primary_Wt] = @Original_C2_Lead_Primary_Wt)) AND ((@IsNull_C2_Lead_Aux_WT = " +
                "1 AND [C2_Lead_Aux_WT] IS NULL) OR ([C2_Lead_Aux_WT] = @Original_C2_Lead_Aux_WT)" +
                ") AND ((@IsNull_C2_lag_Distance = 1 AND [C2_lag_Distance] IS NULL) OR ([C2_lag_D" +
                "istance] = @Original_C2_lag_Distance)) AND ((@IsNull_C2_Lag_Primary_Wt = 1 AND [" +
                "C2_Lag_Primary_Wt] IS NULL) OR ([C2_Lag_Primary_Wt] = @Original_C2_Lag_Primary_W" +
                "t)) AND ((@IsNull_C2_Lag_Aux_Wt = 1 AND [C2_Lag_Aux_Wt] IS NULL) OR ([C2_Lag_Aux" +
                "_Wt] = @Original_C2_Lag_Aux_Wt)) AND ((@IsNull_Fluid_Above_Pump = 1 AND [Fluid_A" +
                "bove_Pump] IS NULL) OR ([Fluid_Above_Pump] = @Original_Fluid_Above_Pump)));\r\nSEL" +
                "ECT wellname, navigator_name, CAO_ID, Long_Name, Internal_ID, Group1, Group2, Gr" +
                "oup3, Group4, Facility_Description, Rodpum_Controller, Controller_Type, Sub_Cont" +
                "roller_Type, Communication_Protocol, Communication_Port, Communication_Address, " +
                "Alt_Address, Comm_retry, Key_On_Delay, Key_Off_Delay, Alarm_Delay, Clear_Delay, " +
                "Max_Event_History_Recs, Top_Perforation, Bottom_Perforation, Anchor_depth, Plug_" +
                "Back_TD, Pump_Measured, Pump_Vertical, Pump_ID, Casing_Valve_Open, Casing_OD, Ca" +
                "sing_Weight, Tubing_OD, Oil, Water, Gas, Last_WT_date, Oil_Gravity, Water_SP_Gra" +
                "v, Gas_Sp_Grav, Tubing_Press, Tubing_Gradient, Tubing_Temp_Whead, Casing_Press, " +
                "Casing_Oil_Cut, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Fluid_Level_Com" +
                "ment, Use_Fluid_Insertia_For_Analysis, Unit_Type, Pumping_Unit, Wrist_Pin, Actua" +
                "l_Stroke, Torque_Methode, Rotation, Motor_Type, Motor_Size, Slip_Torque, Measure" +
                "d_Motor_Amps_Up, Measured_Motor_Amps_Down, Max_Air_Balance_Press, Min_Air_Balanc" +
                "e_Press, Crank_ID, CBT, C1_Lead_Distance, C1_Lead_Primary_Wt, C1_Lead_Aux_WT, C1" +
                "_lag_Distance, C1_Lag_Primary_Wt, C1_Lag_Aux_Wt, C2_Lead_Distance, C2_Lead_Prima" +
                "ry_Wt, C2_Lead_Aux_WT, C2_lag_Distance, C2_Lag_Primary_Wt, C2_Lag_Aux_Wt, Fluid_" +
                "Above_Pump FROM BeamWell WHERE (wellname = @wellname)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wellname", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@navigator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAO_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Long_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Internal_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Facility_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodpum_Controller", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sub_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Port", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Top_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Top_Perforation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bottom_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Bottom_Perforation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anchor_depth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Anchor_depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plug_Back_TD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Plug_Back_TD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_Measured", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Measured", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_Vertical", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Vertical", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Valve_Open", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Casing_OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Tubing_OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_WT_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil_Gravity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil_Gravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water_SP_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water_SP_Grav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas_Sp_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Gradient", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Gradient", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Temp_Whead", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Oil_Cut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_From_Surface", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_Shot_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pumping_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Stroke", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Actual_Stroke", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Torque_Methode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rotation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motor_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motor_Size", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Motor_Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Slip_Torque", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Slip_Torque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Min_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crank_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "CBT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_Lead_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_lag_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_Lead_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_lag_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Above_Pump", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wellname", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_navigator_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_navigator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CAO_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAO_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Long_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Long_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Internal_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Internal_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Facility_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Facility_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rodpum_Controller", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodpum_Controller", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Controller_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sub_Controller_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sub_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Port", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Top_Perforation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Top_Perforation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Top_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Top_Perforation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bottom_Perforation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bottom_Perforation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bottom_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Bottom_Perforation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Anchor_depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anchor_depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anchor_depth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Anchor_depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Plug_Back_TD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plug_Back_TD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Plug_Back_TD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Plug_Back_TD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_Measured", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_Measured", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_Measured", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Measured", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_Vertical", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_Vertical", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_Vertical", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Vertical", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Valve_Open", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Valve_Open", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_OD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Casing_OD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Weight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_OD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Tubing_OD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_WT_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_WT_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil_Gravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil_Gravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil_Gravity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil_Gravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water_SP_Grav", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water_SP_Grav", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water_SP_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water_SP_Grav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas_Sp_Grav", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas_Sp_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Gradient", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Gradient", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Gradient", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Gradient", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Temp_Whead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Temp_Whead", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Oil_Cut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Oil_Cut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_From_Surface", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_From_Surface", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_Shot_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_Shot_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_Comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pumping_Unit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pumping_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Stroke", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Stroke", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Stroke", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Actual_Stroke", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Torque_Methode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Torque_Methode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rotation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rotation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Motor_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Motor_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Motor_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Motor_Size", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Motor_Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Slip_Torque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Slip_Torque", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Slip_Torque", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Slip_Torque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Air_Balance_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Min_Air_Balance_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Min_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Crank_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Crank_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CBT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CBT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "CBT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_Lead_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Aux_WT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_lag_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_lag_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_lag_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lag_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lag_Aux_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_Lead_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Aux_WT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_lag_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_lag_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_lag_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lag_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lag_Aux_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Above_Pump", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Above_Pump", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LowisChartApp.Properties.Settings.Default.lw2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        wellname, navigator_name, CAO_ID, Long_Name, Internal_ID, Group1, Group2, Group3, Group4, Facility_Description, Rodpum_Controller, Controller_Type, Sub_Controller_Type, Communication_Protocol, Communication_Port, 
                         Communication_Address, Alt_Address, Comm_retry, Key_On_Delay, Key_Off_Delay, Alarm_Delay, Clear_Delay, Max_Event_History_Recs, Top_Perforation, Bottom_Perforation, Anchor_depth, Plug_Back_TD, Pump_Measured, 
                         Pump_Vertical, Pump_ID, Casing_Valve_Open, Casing_OD, Casing_Weight, Tubing_OD, Oil, Water, Gas, Last_WT_date, Oil_Gravity, Water_SP_Grav, Gas_Sp_Grav, Tubing_Press, Tubing_Gradient, Tubing_Temp_Whead, 
                         Casing_Press, Casing_Oil_Cut, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Fluid_Level_Comment, Use_Fluid_Insertia_For_Analysis, Unit_Type, Pumping_Unit, Wrist_Pin, Actual_Stroke, Torque_Methode, Rotation, 
                         Motor_Type, Motor_Size, Slip_Torque, Measured_Motor_Amps_Up, Measured_Motor_Amps_Down, Max_Air_Balance_Press, Min_Air_Balance_Press, Crank_ID, CBT, C1_Lead_Distance, C1_Lead_Primary_Wt, 
                         C1_Lead_Aux_WT, C1_lag_Distance, C1_Lag_Primary_Wt, C1_Lag_Aux_Wt, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_Lead_Aux_WT, C2_lag_Distance, C2_Lag_Primary_Wt, C2_Lag_Aux_Wt, Fluid_Above_Pump
FROM            BeamWell";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Actual_Stroke, Alarm_Delay, Alt_Address, Anchor_depth, Bottom_Perforation, C1_Lag_Aux_Wt, C1_Lag_Primary_Wt, C1_Lead_Aux_WT, C1_Lead_Distance, C1_Lead_Primary_Wt, C1_lag_Distance, C2_Lag_Aux_Wt, 
                         C2_Lag_Primary_Wt, C2_Lead_Aux_WT, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_lag_Distance, CAO_ID, CBT, Casing_OD, Casing_Oil_Cut, Casing_Press, Casing_Valve_Open, Casing_Weight, Clear_Delay, Comm_retry, 
                         Communication_Address, Communication_Port, Communication_Protocol, Controller_Type, Crank_ID, Facility_Description, Fluid_Above_Pump, Fluid_Level_Comment, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Gas, 
                         Gas_Sp_Grav, Group1, Group2, Group3, Group4, Internal_ID, Key_Off_Delay, Key_On_Delay, Last_WT_date, Long_Name, Max_Air_Balance_Press, Max_Event_History_Recs, Measured_Motor_Amps_Down, 
                         Measured_Motor_Amps_Up, Min_Air_Balance_Press, Motor_Size, Motor_Type, Oil, Oil_Gravity, Plug_Back_TD, Pump_ID, Pump_Measured, Pump_Vertical, Pumping_Unit, Rodpum_Controller, Rotation, Slip_Torque, 
                         Sub_Controller_Type, Top_Perforation, Torque_Methode, Tubing_Gradient, Tubing_OD, Tubing_Press, Tubing_Temp_Whead, Unit_Type, Use_Fluid_Insertia_For_Analysis, Water, Water_SP_Grav, Wrist_Pin, navigator_name, 
                         wellname
FROM            BeamWell
WHERE        (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT        Actual_Stroke, Alarm_Delay, Alt_Address, Anchor_depth, Bottom_Perforation, C1_Lag_Aux_Wt, C1_Lag_Primary_Wt, C1_Lead_Aux_WT, C1_Lead_Distance, C1_Lead_Primary_Wt, C1_lag_Distance, C2_Lag_Aux_Wt, 
                         C2_Lag_Primary_Wt, C2_Lead_Aux_WT, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_lag_Distance, CAO_ID, CBT, Casing_OD, Casing_Oil_Cut, Casing_Press, Casing_Valve_Open, Casing_Weight, Clear_Delay, Comm_retry, 
                         Communication_Address, Communication_Port, Communication_Protocol, Controller_Type, Crank_ID, Facility_Description, Fluid_Above_Pump, Fluid_Level_Comment, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Gas, 
                         Gas_Sp_Grav, Group1, Group2, Group3, Group4, Internal_ID, Key_Off_Delay, Key_On_Delay, Last_WT_date, Long_Name, Max_Air_Balance_Press, Max_Event_History_Recs, Measured_Motor_Amps_Down, 
                         Measured_Motor_Amps_Up, Min_Air_Balance_Press, Motor_Size, Motor_Type, Oil, Oil_Gravity, Plug_Back_TD, Pump_ID, Pump_Measured, Pump_Vertical, Pumping_Unit, Rodpum_Controller, Rotation, Slip_Torque, 
                         Sub_Controller_Type, Top_Perforation, Torque_Methode, Tubing_Gradient, Tubing_OD, Tubing_Press, Tubing_Temp_Whead, Unit_Type, Use_Fluid_Insertia_For_Analysis, Water, Water_SP_Grav, Wrist_Pin, navigator_name, 
                         wellname
FROM            BeamWell
WHERE        (wellname = @nama)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nama", global::System.Data.SqlDbType.Char, 20, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BeamWellDataSet.BeamWellDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BeamWellDataSet.BeamWellDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BeamWellDataSet.BeamWellDataTable dataTable = new BeamWellDataSet.BeamWellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNone(BeamWellDataSet.BeamWellDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BeamWellDataSet.BeamWellDataTable GetDataByNone() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            BeamWellDataSet.BeamWellDataTable dataTable = new BeamWellDataSet.BeamWellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByWellName(BeamWellDataSet.BeamWellDataTable dataTable, string nama) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((nama == null)) {
                throw new global::System.ArgumentNullException("nama");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nama));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BeamWellDataSet.BeamWellDataTable GetDataByWellName(string nama) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((nama == null)) {
                throw new global::System.ArgumentNullException("nama");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nama));
            }
            BeamWellDataSet.BeamWellDataTable dataTable = new BeamWellDataSet.BeamWellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BeamWellDataSet.BeamWellDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BeamWellDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BeamWell");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_wellname, 
                    string Original_navigator_name, 
                    string Original_CAO_ID, 
                    string Original_Long_Name, 
                    string Original_Internal_ID, 
                    string Original_Group1, 
                    string Original_Group2, 
                    string Original_Group3, 
                    string Original_Group4, 
                    string Original_Facility_Description, 
                    string Original_Rodpum_Controller, 
                    string Original_Controller_Type, 
                    string Original_Sub_Controller_Type, 
                    string Original_Communication_Protocol, 
                    string Original_Communication_Port, 
                    global::System.Nullable<int> Original_Communication_Address, 
                    global::System.Nullable<int> Original_Alt_Address, 
                    global::System.Nullable<int> Original_Comm_retry, 
                    global::System.Nullable<int> Original_Key_On_Delay, 
                    global::System.Nullable<int> Original_Key_Off_Delay, 
                    global::System.Nullable<int> Original_Alarm_Delay, 
                    global::System.Nullable<int> Original_Clear_Delay, 
                    global::System.Nullable<int> Original_Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Original_Top_Perforation, 
                    global::System.Nullable<decimal> Original_Bottom_Perforation, 
                    global::System.Nullable<decimal> Original_Anchor_depth, 
                    global::System.Nullable<decimal> Original_Plug_Back_TD, 
                    global::System.Nullable<decimal> Original_Pump_Measured, 
                    global::System.Nullable<decimal> Original_Pump_Vertical, 
                    global::System.Nullable<decimal> Original_Pump_ID, 
                    string Original_Casing_Valve_Open, 
                    global::System.Nullable<decimal> Original_Casing_OD, 
                    global::System.Nullable<decimal> Original_Casing_Weight, 
                    global::System.Nullable<decimal> Original_Tubing_OD, 
                    global::System.Nullable<decimal> Original_Oil, 
                    global::System.Nullable<decimal> Original_Water, 
                    global::System.Nullable<decimal> Original_Gas, 
                    global::System.Nullable<global::System.DateTime> Original_Last_WT_date, 
                    global::System.Nullable<decimal> Original_Oil_Gravity, 
                    global::System.Nullable<decimal> Original_Water_SP_Grav, 
                    global::System.Nullable<decimal> Original_Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Original_Tubing_Press, 
                    global::System.Nullable<decimal> Original_Tubing_Gradient, 
                    global::System.Nullable<decimal> Original_Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Original_Casing_Press, 
                    global::System.Nullable<decimal> Original_Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Original_Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Original_Fluid_Level_Shot_Date, 
                    string Original_Fluid_Level_Comment, 
                    string Original_Use_Fluid_Insertia_For_Analysis, 
                    string Original_Unit_Type, 
                    string Original_Pumping_Unit, 
                    global::System.Nullable<int> Original_Wrist_Pin, 
                    global::System.Nullable<decimal> Original_Actual_Stroke, 
                    string Original_Torque_Methode, 
                    string Original_Rotation, 
                    string Original_Motor_Type, 
                    global::System.Nullable<decimal> Original_Motor_Size, 
                    global::System.Nullable<decimal> Original_Slip_Torque, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Original_Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Original_Min_Air_Balance_Press, 
                    string Original_Crank_ID, 
                    global::System.Nullable<decimal> Original_CBT, 
                    global::System.Nullable<decimal> Original_C1_Lead_Distance, 
                    string Original_C1_Lead_Primary_Wt, 
                    string Original_C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C1_lag_Distance, 
                    string Original_C1_Lag_Primary_Wt, 
                    string Original_C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_C2_Lead_Distance, 
                    string Original_C2_Lead_Primary_Wt, 
                    string Original_C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C2_lag_Distance, 
                    string Original_C2_Lag_Primary_Wt, 
                    string Original_C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_Fluid_Above_Pump) {
            if ((Original_wellname == null)) {
                throw new global::System.ArgumentNullException("Original_wellname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_wellname));
            }
            if ((Original_navigator_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_navigator_name));
            }
            if ((Original_CAO_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CAO_ID));
            }
            if ((Original_Long_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Long_Name));
            }
            if ((Original_Internal_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Internal_ID));
            }
            if ((Original_Group1 == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Group1));
            }
            if ((Original_Group2 == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Group2));
            }
            if ((Original_Group3 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Group3));
            }
            if ((Original_Group4 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Group4));
            }
            if ((Original_Facility_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Facility_Description));
            }
            if ((Original_Rodpum_Controller == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Rodpum_Controller));
            }
            if ((Original_Controller_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Controller_Type));
            }
            if ((Original_Sub_Controller_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Sub_Controller_Type));
            }
            if ((Original_Communication_Protocol == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Communication_Protocol));
            }
            if ((Original_Communication_Port == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Communication_Port));
            }
            if ((Original_Communication_Address.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_Communication_Address.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Alt_Address.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_Alt_Address.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Comm_retry.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_Comm_retry.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Key_On_Delay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_Key_On_Delay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_Key_Off_Delay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_Key_Off_Delay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Alarm_Delay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_Alarm_Delay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Delay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_Clear_Delay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Event_History_Recs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_Max_Event_History_Recs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_Top_Perforation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_Top_Perforation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Bottom_Perforation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_Bottom_Perforation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_Anchor_depth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_Anchor_depth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Plug_Back_TD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_Plug_Back_TD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_Measured.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_Pump_Measured.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_Vertical.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((decimal)(Original_Pump_Vertical.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_Pump_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Valve_Open == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_Casing_Valve_Open));
            }
            if ((Original_Casing_OD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((decimal)(Original_Casing_OD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Weight.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((decimal)(Original_Casing_Weight.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_OD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((decimal)(Original_Tubing_OD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((decimal)(Original_Oil.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_Water.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((decimal)(Original_Water.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((decimal)(Original_Gas.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_Last_WT_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((System.DateTime)(Original_Last_WT_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil_Gravity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((decimal)(Original_Oil_Gravity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_Water_SP_Grav.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((decimal)(Original_Water_SP_Grav.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas_Sp_Grav.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((decimal)(Original_Gas_Sp_Grav.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Press.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((decimal)(Original_Tubing_Press.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Gradient.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((decimal)(Original_Tubing_Gradient.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Temp_Whead.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((decimal)(Original_Tubing_Temp_Whead.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Press.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((decimal)(Original_Casing_Press.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Oil_Cut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((decimal)(Original_Casing_Oil_Cut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_From_Surface.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((decimal)(Original_Fluid_Level_From_Surface.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_Shot_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((System.DateTime)(Original_Fluid_Level_Shot_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_Comment == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_Fluid_Level_Comment));
            }
            if ((Original_Use_Fluid_Insertia_For_Analysis == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_Use_Fluid_Insertia_For_Analysis));
            }
            if ((Original_Unit_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((string)(Original_Unit_Type));
            }
            if ((Original_Pumping_Unit == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_Pumping_Unit));
            }
            if ((Original_Wrist_Pin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((int)(Original_Wrist_Pin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_Actual_Stroke.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((decimal)(Original_Actual_Stroke.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_Torque_Methode == null)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((string)(Original_Torque_Methode));
            }
            if ((Original_Rotation == null)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((string)(Original_Rotation));
            }
            if ((Original_Motor_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((string)(Original_Motor_Type));
            }
            if ((Original_Motor_Size.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((decimal)(Original_Motor_Size.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_Slip_Torque.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((decimal)(Original_Slip_Torque.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_Measured_Motor_Amps_Up.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((decimal)(Original_Measured_Motor_Amps_Up.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_Measured_Motor_Amps_Down.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((decimal)(Original_Measured_Motor_Amps_Down.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Air_Balance_Press.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((decimal)(Original_Max_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_Min_Air_Balance_Press.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((decimal)(Original_Min_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_Crank_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_Crank_ID));
            }
            if ((Original_CBT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((decimal)(Original_CBT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lead_Distance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((decimal)(Original_C1_Lead_Distance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lead_Primary_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((string)(Original_C1_Lead_Primary_Wt));
            }
            if ((Original_C1_Lead_Aux_WT == null)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((string)(Original_C1_Lead_Aux_WT));
            }
            if ((Original_C1_lag_Distance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((decimal)(Original_C1_lag_Distance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lag_Primary_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((string)(Original_C1_Lag_Primary_Wt));
            }
            if ((Original_C1_Lag_Aux_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((string)(Original_C1_Lag_Aux_Wt));
            }
            if ((Original_C2_Lead_Distance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((decimal)(Original_C2_Lead_Distance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_C2_Lead_Primary_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((string)(Original_C2_Lead_Primary_Wt));
            }
            if ((Original_C2_Lead_Aux_WT == null)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((string)(Original_C2_Lead_Aux_WT));
            }
            if ((Original_C2_lag_Distance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((decimal)(Original_C2_lag_Distance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_C2_Lag_Primary_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((string)(Original_C2_Lag_Primary_Wt));
            }
            if ((Original_C2_Lag_Aux_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((string)(Original_C2_Lag_Aux_Wt));
            }
            if ((Original_Fluid_Above_Pump.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((decimal)(Original_Fluid_Above_Pump.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string wellname, 
                    string navigator_name, 
                    string CAO_ID, 
                    string Long_Name, 
                    string Internal_ID, 
                    string Group1, 
                    string Group2, 
                    string Group3, 
                    string Group4, 
                    string Facility_Description, 
                    string Rodpum_Controller, 
                    string Controller_Type, 
                    string Sub_Controller_Type, 
                    string Communication_Protocol, 
                    string Communication_Port, 
                    global::System.Nullable<int> Communication_Address, 
                    global::System.Nullable<int> Alt_Address, 
                    global::System.Nullable<int> Comm_retry, 
                    global::System.Nullable<int> Key_On_Delay, 
                    global::System.Nullable<int> Key_Off_Delay, 
                    global::System.Nullable<int> Alarm_Delay, 
                    global::System.Nullable<int> Clear_Delay, 
                    global::System.Nullable<int> Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Top_Perforation, 
                    global::System.Nullable<decimal> Bottom_Perforation, 
                    global::System.Nullable<decimal> Anchor_depth, 
                    global::System.Nullable<decimal> Plug_Back_TD, 
                    global::System.Nullable<decimal> Pump_Measured, 
                    global::System.Nullable<decimal> Pump_Vertical, 
                    global::System.Nullable<decimal> Pump_ID, 
                    string Casing_Valve_Open, 
                    global::System.Nullable<decimal> Casing_OD, 
                    global::System.Nullable<decimal> Casing_Weight, 
                    global::System.Nullable<decimal> Tubing_OD, 
                    global::System.Nullable<decimal> Oil, 
                    global::System.Nullable<decimal> Water, 
                    global::System.Nullable<decimal> Gas, 
                    global::System.Nullable<global::System.DateTime> Last_WT_date, 
                    global::System.Nullable<decimal> Oil_Gravity, 
                    global::System.Nullable<decimal> Water_SP_Grav, 
                    global::System.Nullable<decimal> Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Tubing_Press, 
                    global::System.Nullable<decimal> Tubing_Gradient, 
                    global::System.Nullable<decimal> Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Casing_Press, 
                    global::System.Nullable<decimal> Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Fluid_Level_Shot_Date, 
                    string Fluid_Level_Comment, 
                    string Use_Fluid_Insertia_For_Analysis, 
                    string Unit_Type, 
                    string Pumping_Unit, 
                    global::System.Nullable<int> Wrist_Pin, 
                    global::System.Nullable<decimal> Actual_Stroke, 
                    string Torque_Methode, 
                    string Rotation, 
                    string Motor_Type, 
                    global::System.Nullable<decimal> Motor_Size, 
                    global::System.Nullable<decimal> Slip_Torque, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Min_Air_Balance_Press, 
                    string Crank_ID, 
                    global::System.Nullable<decimal> CBT, 
                    global::System.Nullable<decimal> C1_Lead_Distance, 
                    string C1_Lead_Primary_Wt, 
                    string C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C1_lag_Distance, 
                    string C1_Lag_Primary_Wt, 
                    string C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> C2_Lead_Distance, 
                    string C2_Lead_Primary_Wt, 
                    string C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C2_lag_Distance, 
                    string C2_Lag_Primary_Wt, 
                    string C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Fluid_Above_Pump) {
            if ((wellname == null)) {
                throw new global::System.ArgumentNullException("wellname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(wellname));
            }
            if ((navigator_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(navigator_name));
            }
            if ((CAO_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CAO_ID));
            }
            if ((Long_Name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Long_Name));
            }
            if ((Internal_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Internal_ID));
            }
            if ((Group1 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Group1));
            }
            if ((Group2 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Group2));
            }
            if ((Group3 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Group3));
            }
            if ((Group4 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Group4));
            }
            if ((Facility_Description == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Facility_Description));
            }
            if ((Rodpum_Controller == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Rodpum_Controller));
            }
            if ((Controller_Type == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Controller_Type));
            }
            if ((Sub_Controller_Type == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Sub_Controller_Type));
            }
            if ((Communication_Protocol == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Communication_Protocol));
            }
            if ((Communication_Port == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Communication_Port));
            }
            if ((Communication_Address.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Communication_Address.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Alt_Address.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Alt_Address.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Comm_retry.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(Comm_retry.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Key_On_Delay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Key_On_Delay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Key_Off_Delay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Key_Off_Delay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Alarm_Delay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Alarm_Delay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Clear_Delay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(Clear_Delay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Max_Event_History_Recs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Max_Event_History_Recs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Top_Perforation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(Top_Perforation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Bottom_Perforation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(Bottom_Perforation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Anchor_depth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(Anchor_depth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Plug_Back_TD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(Plug_Back_TD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Pump_Measured.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(Pump_Measured.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Pump_Vertical.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(Pump_Vertical.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Pump_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(Pump_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Casing_Valve_Open == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Casing_Valve_Open));
            }
            if ((Casing_OD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(Casing_OD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Casing_Weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(Casing_Weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Tubing_OD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(Tubing_OD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Oil.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(Oil.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Water.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(Water.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Gas.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(Gas.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Last_WT_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(Last_WT_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Oil_Gravity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(Oil_Gravity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Water_SP_Grav.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(Water_SP_Grav.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Gas_Sp_Grav.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(Gas_Sp_Grav.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Press.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(Tubing_Press.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Gradient.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(Tubing_Gradient.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Temp_Whead.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(Tubing_Temp_Whead.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Casing_Press.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(Casing_Press.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Casing_Oil_Cut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(Casing_Oil_Cut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_From_Surface.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(Fluid_Level_From_Surface.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_Shot_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((System.DateTime)(Fluid_Level_Shot_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_Comment == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Fluid_Level_Comment));
            }
            if ((Use_Fluid_Insertia_For_Analysis == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(Use_Fluid_Insertia_For_Analysis));
            }
            if ((Unit_Type == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(Unit_Type));
            }
            if ((Pumping_Unit == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(Pumping_Unit));
            }
            if ((Wrist_Pin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((int)(Wrist_Pin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Actual_Stroke.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(Actual_Stroke.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Torque_Methode == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(Torque_Methode));
            }
            if ((Rotation == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(Rotation));
            }
            if ((Motor_Type == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(Motor_Type));
            }
            if ((Motor_Size.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((decimal)(Motor_Size.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Slip_Torque.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(Slip_Torque.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Measured_Motor_Amps_Up.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(Measured_Motor_Amps_Up.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Measured_Motor_Amps_Down.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((decimal)(Measured_Motor_Amps_Down.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Max_Air_Balance_Press.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((decimal)(Max_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Min_Air_Balance_Press.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((decimal)(Min_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Crank_ID == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(Crank_ID));
            }
            if ((CBT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((decimal)(CBT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((C1_Lead_Distance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((decimal)(C1_Lead_Distance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((C1_Lead_Primary_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(C1_Lead_Primary_Wt));
            }
            if ((C1_Lead_Aux_WT == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(C1_Lead_Aux_WT));
            }
            if ((C1_lag_Distance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((decimal)(C1_lag_Distance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((C1_Lag_Primary_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(C1_Lag_Primary_Wt));
            }
            if ((C1_Lag_Aux_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(C1_Lag_Aux_Wt));
            }
            if ((C2_Lead_Distance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((decimal)(C2_Lead_Distance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((C2_Lead_Primary_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(C2_Lead_Primary_Wt));
            }
            if ((C2_Lead_Aux_WT == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(C2_Lead_Aux_WT));
            }
            if ((C2_lag_Distance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((decimal)(C2_lag_Distance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((C2_Lag_Primary_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(C2_Lag_Primary_Wt));
            }
            if ((C2_Lag_Aux_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(C2_Lag_Aux_Wt));
            }
            if ((Fluid_Above_Pump.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((decimal)(Fluid_Above_Pump.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string wellname, 
                    string navigator_name, 
                    string CAO_ID, 
                    string Long_Name, 
                    string Internal_ID, 
                    string Group1, 
                    string Group2, 
                    string Group3, 
                    string Group4, 
                    string Facility_Description, 
                    string Rodpum_Controller, 
                    string Controller_Type, 
                    string Sub_Controller_Type, 
                    string Communication_Protocol, 
                    string Communication_Port, 
                    global::System.Nullable<int> Communication_Address, 
                    global::System.Nullable<int> Alt_Address, 
                    global::System.Nullable<int> Comm_retry, 
                    global::System.Nullable<int> Key_On_Delay, 
                    global::System.Nullable<int> Key_Off_Delay, 
                    global::System.Nullable<int> Alarm_Delay, 
                    global::System.Nullable<int> Clear_Delay, 
                    global::System.Nullable<int> Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Top_Perforation, 
                    global::System.Nullable<decimal> Bottom_Perforation, 
                    global::System.Nullable<decimal> Anchor_depth, 
                    global::System.Nullable<decimal> Plug_Back_TD, 
                    global::System.Nullable<decimal> Pump_Measured, 
                    global::System.Nullable<decimal> Pump_Vertical, 
                    global::System.Nullable<decimal> Pump_ID, 
                    string Casing_Valve_Open, 
                    global::System.Nullable<decimal> Casing_OD, 
                    global::System.Nullable<decimal> Casing_Weight, 
                    global::System.Nullable<decimal> Tubing_OD, 
                    global::System.Nullable<decimal> Oil, 
                    global::System.Nullable<decimal> Water, 
                    global::System.Nullable<decimal> Gas, 
                    global::System.Nullable<global::System.DateTime> Last_WT_date, 
                    global::System.Nullable<decimal> Oil_Gravity, 
                    global::System.Nullable<decimal> Water_SP_Grav, 
                    global::System.Nullable<decimal> Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Tubing_Press, 
                    global::System.Nullable<decimal> Tubing_Gradient, 
                    global::System.Nullable<decimal> Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Casing_Press, 
                    global::System.Nullable<decimal> Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Fluid_Level_Shot_Date, 
                    string Fluid_Level_Comment, 
                    string Use_Fluid_Insertia_For_Analysis, 
                    string Unit_Type, 
                    string Pumping_Unit, 
                    global::System.Nullable<int> Wrist_Pin, 
                    global::System.Nullable<decimal> Actual_Stroke, 
                    string Torque_Methode, 
                    string Rotation, 
                    string Motor_Type, 
                    global::System.Nullable<decimal> Motor_Size, 
                    global::System.Nullable<decimal> Slip_Torque, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Min_Air_Balance_Press, 
                    string Crank_ID, 
                    global::System.Nullable<decimal> CBT, 
                    global::System.Nullable<decimal> C1_Lead_Distance, 
                    string C1_Lead_Primary_Wt, 
                    string C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C1_lag_Distance, 
                    string C1_Lag_Primary_Wt, 
                    string C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> C2_Lead_Distance, 
                    string C2_Lead_Primary_Wt, 
                    string C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C2_lag_Distance, 
                    string C2_Lag_Primary_Wt, 
                    string C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Fluid_Above_Pump, 
                    string Original_wellname, 
                    string Original_navigator_name, 
                    string Original_CAO_ID, 
                    string Original_Long_Name, 
                    string Original_Internal_ID, 
                    string Original_Group1, 
                    string Original_Group2, 
                    string Original_Group3, 
                    string Original_Group4, 
                    string Original_Facility_Description, 
                    string Original_Rodpum_Controller, 
                    string Original_Controller_Type, 
                    string Original_Sub_Controller_Type, 
                    string Original_Communication_Protocol, 
                    string Original_Communication_Port, 
                    global::System.Nullable<int> Original_Communication_Address, 
                    global::System.Nullable<int> Original_Alt_Address, 
                    global::System.Nullable<int> Original_Comm_retry, 
                    global::System.Nullable<int> Original_Key_On_Delay, 
                    global::System.Nullable<int> Original_Key_Off_Delay, 
                    global::System.Nullable<int> Original_Alarm_Delay, 
                    global::System.Nullable<int> Original_Clear_Delay, 
                    global::System.Nullable<int> Original_Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Original_Top_Perforation, 
                    global::System.Nullable<decimal> Original_Bottom_Perforation, 
                    global::System.Nullable<decimal> Original_Anchor_depth, 
                    global::System.Nullable<decimal> Original_Plug_Back_TD, 
                    global::System.Nullable<decimal> Original_Pump_Measured, 
                    global::System.Nullable<decimal> Original_Pump_Vertical, 
                    global::System.Nullable<decimal> Original_Pump_ID, 
                    string Original_Casing_Valve_Open, 
                    global::System.Nullable<decimal> Original_Casing_OD, 
                    global::System.Nullable<decimal> Original_Casing_Weight, 
                    global::System.Nullable<decimal> Original_Tubing_OD, 
                    global::System.Nullable<decimal> Original_Oil, 
                    global::System.Nullable<decimal> Original_Water, 
                    global::System.Nullable<decimal> Original_Gas, 
                    global::System.Nullable<global::System.DateTime> Original_Last_WT_date, 
                    global::System.Nullable<decimal> Original_Oil_Gravity, 
                    global::System.Nullable<decimal> Original_Water_SP_Grav, 
                    global::System.Nullable<decimal> Original_Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Original_Tubing_Press, 
                    global::System.Nullable<decimal> Original_Tubing_Gradient, 
                    global::System.Nullable<decimal> Original_Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Original_Casing_Press, 
                    global::System.Nullable<decimal> Original_Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Original_Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Original_Fluid_Level_Shot_Date, 
                    string Original_Fluid_Level_Comment, 
                    string Original_Use_Fluid_Insertia_For_Analysis, 
                    string Original_Unit_Type, 
                    string Original_Pumping_Unit, 
                    global::System.Nullable<int> Original_Wrist_Pin, 
                    global::System.Nullable<decimal> Original_Actual_Stroke, 
                    string Original_Torque_Methode, 
                    string Original_Rotation, 
                    string Original_Motor_Type, 
                    global::System.Nullable<decimal> Original_Motor_Size, 
                    global::System.Nullable<decimal> Original_Slip_Torque, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Original_Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Original_Min_Air_Balance_Press, 
                    string Original_Crank_ID, 
                    global::System.Nullable<decimal> Original_CBT, 
                    global::System.Nullable<decimal> Original_C1_Lead_Distance, 
                    string Original_C1_Lead_Primary_Wt, 
                    string Original_C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C1_lag_Distance, 
                    string Original_C1_Lag_Primary_Wt, 
                    string Original_C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_C2_Lead_Distance, 
                    string Original_C2_Lead_Primary_Wt, 
                    string Original_C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C2_lag_Distance, 
                    string Original_C2_Lag_Primary_Wt, 
                    string Original_C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_Fluid_Above_Pump) {
            if ((wellname == null)) {
                throw new global::System.ArgumentNullException("wellname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(wellname));
            }
            if ((navigator_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(navigator_name));
            }
            if ((CAO_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CAO_ID));
            }
            if ((Long_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Long_Name));
            }
            if ((Internal_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Internal_ID));
            }
            if ((Group1 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Group1));
            }
            if ((Group2 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Group2));
            }
            if ((Group3 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Group3));
            }
            if ((Group4 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Group4));
            }
            if ((Facility_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Facility_Description));
            }
            if ((Rodpum_Controller == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Rodpum_Controller));
            }
            if ((Controller_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Controller_Type));
            }
            if ((Sub_Controller_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Sub_Controller_Type));
            }
            if ((Communication_Protocol == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Communication_Protocol));
            }
            if ((Communication_Port == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Communication_Port));
            }
            if ((Communication_Address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Communication_Address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Alt_Address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Alt_Address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Comm_retry.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Comm_retry.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Key_On_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Key_On_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Key_Off_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Key_Off_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Alarm_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Alarm_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Clear_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Clear_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Max_Event_History_Recs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Max_Event_History_Recs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Top_Perforation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Top_Perforation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Bottom_Perforation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Bottom_Perforation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Anchor_depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Anchor_depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Plug_Back_TD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Plug_Back_TD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Pump_Measured.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Pump_Measured.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Pump_Vertical.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Pump_Vertical.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Pump_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Pump_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Casing_Valve_Open == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Casing_Valve_Open));
            }
            if ((Casing_OD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Casing_OD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Casing_Weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Casing_Weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Tubing_OD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Tubing_OD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Oil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Oil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Water.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Water.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Gas.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Gas.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Last_WT_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Last_WT_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Oil_Gravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Oil_Gravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Water_SP_Grav.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Water_SP_Grav.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Gas_Sp_Grav.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Gas_Sp_Grav.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Tubing_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Gradient.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Tubing_Gradient.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Temp_Whead.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Tubing_Temp_Whead.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Casing_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Casing_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Casing_Oil_Cut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Casing_Oil_Cut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_From_Surface.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Fluid_Level_From_Surface.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_Shot_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(Fluid_Level_Shot_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Fluid_Level_Comment));
            }
            if ((Use_Fluid_Insertia_For_Analysis == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Use_Fluid_Insertia_For_Analysis));
            }
            if ((Unit_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Unit_Type));
            }
            if ((Pumping_Unit == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Pumping_Unit));
            }
            if ((Wrist_Pin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Wrist_Pin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Actual_Stroke.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(Actual_Stroke.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Torque_Methode == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Torque_Methode));
            }
            if ((Rotation == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Rotation));
            }
            if ((Motor_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Motor_Type));
            }
            if ((Motor_Size.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(Motor_Size.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Slip_Torque.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(Slip_Torque.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Measured_Motor_Amps_Up.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(Measured_Motor_Amps_Up.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Measured_Motor_Amps_Down.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(Measured_Motor_Amps_Down.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Max_Air_Balance_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(Max_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Min_Air_Balance_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(Min_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Crank_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Crank_ID));
            }
            if ((CBT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(CBT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((C1_Lead_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(C1_Lead_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((C1_Lead_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(C1_Lead_Primary_Wt));
            }
            if ((C1_Lead_Aux_WT == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(C1_Lead_Aux_WT));
            }
            if ((C1_lag_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((decimal)(C1_lag_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((C1_Lag_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(C1_Lag_Primary_Wt));
            }
            if ((C1_Lag_Aux_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(C1_Lag_Aux_Wt));
            }
            if ((C2_Lead_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(C2_Lead_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((C2_Lead_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(C2_Lead_Primary_Wt));
            }
            if ((C2_Lead_Aux_WT == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(C2_Lead_Aux_WT));
            }
            if ((C2_lag_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(C2_lag_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((C2_Lag_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(C2_Lag_Primary_Wt));
            }
            if ((C2_Lag_Aux_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(C2_Lag_Aux_Wt));
            }
            if ((Fluid_Above_Pump.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Fluid_Above_Pump.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_wellname == null)) {
                throw new global::System.ArgumentNullException("Original_wellname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_wellname));
            }
            if ((Original_navigator_name == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_navigator_name));
            }
            if ((Original_CAO_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_CAO_ID));
            }
            if ((Original_Long_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_Long_Name));
            }
            if ((Original_Internal_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_Internal_ID));
            }
            if ((Original_Group1 == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_Group1));
            }
            if ((Original_Group2 == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_Group2));
            }
            if ((Original_Group3 == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_Group3));
            }
            if ((Original_Group4 == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_Group4));
            }
            if ((Original_Facility_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_Facility_Description));
            }
            if ((Original_Rodpum_Controller == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_Rodpum_Controller));
            }
            if ((Original_Controller_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_Controller_Type));
            }
            if ((Original_Sub_Controller_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_Sub_Controller_Type));
            }
            if ((Original_Communication_Protocol == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_Communication_Protocol));
            }
            if ((Original_Communication_Port == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_Communication_Port));
            }
            if ((Original_Communication_Address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((int)(Original_Communication_Address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_Alt_Address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(Original_Alt_Address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_Comm_retry.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((int)(Original_Comm_retry.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_Key_On_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(Original_Key_On_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_Key_Off_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((int)(Original_Key_Off_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_Alarm_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(Original_Alarm_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(Original_Clear_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Event_History_Recs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((int)(Original_Max_Event_History_Recs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_Top_Perforation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((decimal)(Original_Top_Perforation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_Bottom_Perforation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((decimal)(Original_Bottom_Perforation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_Anchor_depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((decimal)(Original_Anchor_depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_Plug_Back_TD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((decimal)(Original_Plug_Back_TD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_Measured.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((decimal)(Original_Pump_Measured.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_Vertical.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((decimal)(Original_Pump_Vertical.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((decimal)(Original_Pump_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Valve_Open == null)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((string)(Original_Casing_Valve_Open));
            }
            if ((Original_Casing_OD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((decimal)(Original_Casing_OD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((decimal)(Original_Casing_Weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_OD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((decimal)(Original_Tubing_OD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((decimal)(Original_Oil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_Water.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((decimal)(Original_Water.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((decimal)(Original_Gas.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_Last_WT_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((System.DateTime)(Original_Last_WT_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil_Gravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((decimal)(Original_Oil_Gravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            if ((Original_Water_SP_Grav.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((decimal)(Original_Water_SP_Grav.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas_Sp_Grav.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((decimal)(Original_Gas_Sp_Grav.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((decimal)(Original_Tubing_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Gradient.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((decimal)(Original_Tubing_Gradient.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Temp_Whead.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((decimal)(Original_Tubing_Temp_Whead.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[166].Value = ((decimal)(Original_Casing_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Oil_Cut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[168].Value = ((decimal)(Original_Casing_Oil_Cut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_From_Surface.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[170].Value = ((decimal)(Original_Fluid_Level_From_Surface.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_Shot_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[172].Value = ((System.DateTime)(Original_Fluid_Level_Shot_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[174].Value = ((string)(Original_Fluid_Level_Comment));
            }
            if ((Original_Use_Fluid_Insertia_For_Analysis == null)) {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[176].Value = ((string)(Original_Use_Fluid_Insertia_For_Analysis));
            }
            if ((Original_Unit_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[178].Value = ((string)(Original_Unit_Type));
            }
            if ((Original_Pumping_Unit == null)) {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[180].Value = ((string)(Original_Pumping_Unit));
            }
            if ((Original_Wrist_Pin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[182].Value = ((int)(Original_Wrist_Pin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            if ((Original_Actual_Stroke.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[184].Value = ((decimal)(Original_Actual_Stroke.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            if ((Original_Torque_Methode == null)) {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[186].Value = ((string)(Original_Torque_Methode));
            }
            if ((Original_Rotation == null)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((string)(Original_Rotation));
            }
            if ((Original_Motor_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[190].Value = ((string)(Original_Motor_Type));
            }
            if ((Original_Motor_Size.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[192].Value = ((decimal)(Original_Motor_Size.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            if ((Original_Slip_Torque.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[194].Value = ((decimal)(Original_Slip_Torque.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            if ((Original_Measured_Motor_Amps_Up.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[196].Value = ((decimal)(Original_Measured_Motor_Amps_Up.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            if ((Original_Measured_Motor_Amps_Down.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((decimal)(Original_Measured_Motor_Amps_Down.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Air_Balance_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[200].Value = ((decimal)(Original_Max_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            if ((Original_Min_Air_Balance_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((decimal)(Original_Min_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_Crank_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(Original_Crank_ID));
            }
            if ((Original_CBT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((decimal)(Original_CBT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lead_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((decimal)(Original_C1_Lead_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lead_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_C1_Lead_Primary_Wt));
            }
            if ((Original_C1_Lead_Aux_WT == null)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((string)(Original_C1_Lead_Aux_WT));
            }
            if ((Original_C1_lag_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((decimal)(Original_C1_lag_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lag_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((string)(Original_C1_Lag_Primary_Wt));
            }
            if ((Original_C1_Lag_Aux_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_C1_Lag_Aux_Wt));
            }
            if ((Original_C2_Lead_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((decimal)(Original_C2_Lead_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            if ((Original_C2_Lead_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((string)(Original_C2_Lead_Primary_Wt));
            }
            if ((Original_C2_Lead_Aux_WT == null)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((string)(Original_C2_Lead_Aux_WT));
            }
            if ((Original_C2_lag_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[226].Value = ((decimal)(Original_C2_lag_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            if ((Original_C2_Lag_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[228].Value = ((string)(Original_C2_Lag_Primary_Wt));
            }
            if ((Original_C2_Lag_Aux_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[230].Value = ((string)(Original_C2_Lag_Aux_Wt));
            }
            if ((Original_Fluid_Above_Pump.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((decimal)(Original_Fluid_Above_Pump.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string navigator_name, 
                    string CAO_ID, 
                    string Long_Name, 
                    string Internal_ID, 
                    string Group1, 
                    string Group2, 
                    string Group3, 
                    string Group4, 
                    string Facility_Description, 
                    string Rodpum_Controller, 
                    string Controller_Type, 
                    string Sub_Controller_Type, 
                    string Communication_Protocol, 
                    string Communication_Port, 
                    global::System.Nullable<int> Communication_Address, 
                    global::System.Nullable<int> Alt_Address, 
                    global::System.Nullable<int> Comm_retry, 
                    global::System.Nullable<int> Key_On_Delay, 
                    global::System.Nullable<int> Key_Off_Delay, 
                    global::System.Nullable<int> Alarm_Delay, 
                    global::System.Nullable<int> Clear_Delay, 
                    global::System.Nullable<int> Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Top_Perforation, 
                    global::System.Nullable<decimal> Bottom_Perforation, 
                    global::System.Nullable<decimal> Anchor_depth, 
                    global::System.Nullable<decimal> Plug_Back_TD, 
                    global::System.Nullable<decimal> Pump_Measured, 
                    global::System.Nullable<decimal> Pump_Vertical, 
                    global::System.Nullable<decimal> Pump_ID, 
                    string Casing_Valve_Open, 
                    global::System.Nullable<decimal> Casing_OD, 
                    global::System.Nullable<decimal> Casing_Weight, 
                    global::System.Nullable<decimal> Tubing_OD, 
                    global::System.Nullable<decimal> Oil, 
                    global::System.Nullable<decimal> Water, 
                    global::System.Nullable<decimal> Gas, 
                    global::System.Nullable<global::System.DateTime> Last_WT_date, 
                    global::System.Nullable<decimal> Oil_Gravity, 
                    global::System.Nullable<decimal> Water_SP_Grav, 
                    global::System.Nullable<decimal> Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Tubing_Press, 
                    global::System.Nullable<decimal> Tubing_Gradient, 
                    global::System.Nullable<decimal> Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Casing_Press, 
                    global::System.Nullable<decimal> Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Fluid_Level_Shot_Date, 
                    string Fluid_Level_Comment, 
                    string Use_Fluid_Insertia_For_Analysis, 
                    string Unit_Type, 
                    string Pumping_Unit, 
                    global::System.Nullable<int> Wrist_Pin, 
                    global::System.Nullable<decimal> Actual_Stroke, 
                    string Torque_Methode, 
                    string Rotation, 
                    string Motor_Type, 
                    global::System.Nullable<decimal> Motor_Size, 
                    global::System.Nullable<decimal> Slip_Torque, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Min_Air_Balance_Press, 
                    string Crank_ID, 
                    global::System.Nullable<decimal> CBT, 
                    global::System.Nullable<decimal> C1_Lead_Distance, 
                    string C1_Lead_Primary_Wt, 
                    string C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C1_lag_Distance, 
                    string C1_Lag_Primary_Wt, 
                    string C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> C2_Lead_Distance, 
                    string C2_Lead_Primary_Wt, 
                    string C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C2_lag_Distance, 
                    string C2_Lag_Primary_Wt, 
                    string C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Fluid_Above_Pump, 
                    string Original_wellname, 
                    string Original_navigator_name, 
                    string Original_CAO_ID, 
                    string Original_Long_Name, 
                    string Original_Internal_ID, 
                    string Original_Group1, 
                    string Original_Group2, 
                    string Original_Group3, 
                    string Original_Group4, 
                    string Original_Facility_Description, 
                    string Original_Rodpum_Controller, 
                    string Original_Controller_Type, 
                    string Original_Sub_Controller_Type, 
                    string Original_Communication_Protocol, 
                    string Original_Communication_Port, 
                    global::System.Nullable<int> Original_Communication_Address, 
                    global::System.Nullable<int> Original_Alt_Address, 
                    global::System.Nullable<int> Original_Comm_retry, 
                    global::System.Nullable<int> Original_Key_On_Delay, 
                    global::System.Nullable<int> Original_Key_Off_Delay, 
                    global::System.Nullable<int> Original_Alarm_Delay, 
                    global::System.Nullable<int> Original_Clear_Delay, 
                    global::System.Nullable<int> Original_Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Original_Top_Perforation, 
                    global::System.Nullable<decimal> Original_Bottom_Perforation, 
                    global::System.Nullable<decimal> Original_Anchor_depth, 
                    global::System.Nullable<decimal> Original_Plug_Back_TD, 
                    global::System.Nullable<decimal> Original_Pump_Measured, 
                    global::System.Nullable<decimal> Original_Pump_Vertical, 
                    global::System.Nullable<decimal> Original_Pump_ID, 
                    string Original_Casing_Valve_Open, 
                    global::System.Nullable<decimal> Original_Casing_OD, 
                    global::System.Nullable<decimal> Original_Casing_Weight, 
                    global::System.Nullable<decimal> Original_Tubing_OD, 
                    global::System.Nullable<decimal> Original_Oil, 
                    global::System.Nullable<decimal> Original_Water, 
                    global::System.Nullable<decimal> Original_Gas, 
                    global::System.Nullable<global::System.DateTime> Original_Last_WT_date, 
                    global::System.Nullable<decimal> Original_Oil_Gravity, 
                    global::System.Nullable<decimal> Original_Water_SP_Grav, 
                    global::System.Nullable<decimal> Original_Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Original_Tubing_Press, 
                    global::System.Nullable<decimal> Original_Tubing_Gradient, 
                    global::System.Nullable<decimal> Original_Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Original_Casing_Press, 
                    global::System.Nullable<decimal> Original_Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Original_Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Original_Fluid_Level_Shot_Date, 
                    string Original_Fluid_Level_Comment, 
                    string Original_Use_Fluid_Insertia_For_Analysis, 
                    string Original_Unit_Type, 
                    string Original_Pumping_Unit, 
                    global::System.Nullable<int> Original_Wrist_Pin, 
                    global::System.Nullable<decimal> Original_Actual_Stroke, 
                    string Original_Torque_Methode, 
                    string Original_Rotation, 
                    string Original_Motor_Type, 
                    global::System.Nullable<decimal> Original_Motor_Size, 
                    global::System.Nullable<decimal> Original_Slip_Torque, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Original_Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Original_Min_Air_Balance_Press, 
                    string Original_Crank_ID, 
                    global::System.Nullable<decimal> Original_CBT, 
                    global::System.Nullable<decimal> Original_C1_Lead_Distance, 
                    string Original_C1_Lead_Primary_Wt, 
                    string Original_C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C1_lag_Distance, 
                    string Original_C1_Lag_Primary_Wt, 
                    string Original_C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_C2_Lead_Distance, 
                    string Original_C2_Lead_Primary_Wt, 
                    string Original_C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C2_lag_Distance, 
                    string Original_C2_Lag_Primary_Wt, 
                    string Original_C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_Fluid_Above_Pump) {
            return this.Update(Original_wellname, navigator_name, CAO_ID, Long_Name, Internal_ID, Group1, Group2, Group3, Group4, Facility_Description, Rodpum_Controller, Controller_Type, Sub_Controller_Type, Communication_Protocol, Communication_Port, Communication_Address, Alt_Address, Comm_retry, Key_On_Delay, Key_Off_Delay, Alarm_Delay, Clear_Delay, Max_Event_History_Recs, Top_Perforation, Bottom_Perforation, Anchor_depth, Plug_Back_TD, Pump_Measured, Pump_Vertical, Pump_ID, Casing_Valve_Open, Casing_OD, Casing_Weight, Tubing_OD, Oil, Water, Gas, Last_WT_date, Oil_Gravity, Water_SP_Grav, Gas_Sp_Grav, Tubing_Press, Tubing_Gradient, Tubing_Temp_Whead, Casing_Press, Casing_Oil_Cut, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Fluid_Level_Comment, Use_Fluid_Insertia_For_Analysis, Unit_Type, Pumping_Unit, Wrist_Pin, Actual_Stroke, Torque_Methode, Rotation, Motor_Type, Motor_Size, Slip_Torque, Measured_Motor_Amps_Up, Measured_Motor_Amps_Down, Max_Air_Balance_Press, Min_Air_Balance_Press, Crank_ID, CBT, C1_Lead_Distance, C1_Lead_Primary_Wt, C1_Lead_Aux_WT, C1_lag_Distance, C1_Lag_Primary_Wt, C1_Lag_Aux_Wt, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_Lead_Aux_WT, C2_lag_Distance, C2_Lag_Primary_Wt, C2_Lag_Aux_Wt, Fluid_Above_Pump, Original_wellname, Original_navigator_name, Original_CAO_ID, Original_Long_Name, Original_Internal_ID, Original_Group1, Original_Group2, Original_Group3, Original_Group4, Original_Facility_Description, Original_Rodpum_Controller, Original_Controller_Type, Original_Sub_Controller_Type, Original_Communication_Protocol, Original_Communication_Port, Original_Communication_Address, Original_Alt_Address, Original_Comm_retry, Original_Key_On_Delay, Original_Key_Off_Delay, Original_Alarm_Delay, Original_Clear_Delay, Original_Max_Event_History_Recs, Original_Top_Perforation, Original_Bottom_Perforation, Original_Anchor_depth, Original_Plug_Back_TD, Original_Pump_Measured, Original_Pump_Vertical, Original_Pump_ID, Original_Casing_Valve_Open, Original_Casing_OD, Original_Casing_Weight, Original_Tubing_OD, Original_Oil, Original_Water, Original_Gas, Original_Last_WT_date, Original_Oil_Gravity, Original_Water_SP_Grav, Original_Gas_Sp_Grav, Original_Tubing_Press, Original_Tubing_Gradient, Original_Tubing_Temp_Whead, Original_Casing_Press, Original_Casing_Oil_Cut, Original_Fluid_Level_From_Surface, Original_Fluid_Level_Shot_Date, Original_Fluid_Level_Comment, Original_Use_Fluid_Insertia_For_Analysis, Original_Unit_Type, Original_Pumping_Unit, Original_Wrist_Pin, Original_Actual_Stroke, Original_Torque_Methode, Original_Rotation, Original_Motor_Type, Original_Motor_Size, Original_Slip_Torque, Original_Measured_Motor_Amps_Up, Original_Measured_Motor_Amps_Down, Original_Max_Air_Balance_Press, Original_Min_Air_Balance_Press, Original_Crank_ID, Original_CBT, Original_C1_Lead_Distance, Original_C1_Lead_Primary_Wt, Original_C1_Lead_Aux_WT, Original_C1_lag_Distance, Original_C1_Lag_Primary_Wt, Original_C1_Lag_Aux_Wt, Original_C2_Lead_Distance, Original_C2_Lead_Primary_Wt, Original_C2_Lead_Aux_WT, Original_C2_lag_Distance, Original_C2_Lag_Primary_Wt, Original_C2_Lag_Aux_Wt, Original_Fluid_Above_Pump);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Beam_Well_Group_ConfigurationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public Beam_Well_Group_ConfigurationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Beam_Well_Group_Configuration";
            tableMapping.ColumnMappings.Add("LWNAME", "LWNAME");
            tableMapping.ColumnMappings.Add("NAVNAME", "NAVNAME");
            tableMapping.ColumnMappings.Add("UniqueWellbore", "UniqueWellbore");
            tableMapping.ColumnMappings.Add("UniqueWellboreID", "UniqueWellboreID");
            tableMapping.ColumnMappings.Add("UniqueIntervalID", "UniqueIntervalID");
            tableMapping.ColumnMappings.Add("CAOID", "CAOID");
            tableMapping.ColumnMappings.Add("LongName", "LongName");
            tableMapping.ColumnMappings.Add("Group1Name", "Group1Name");
            tableMapping.ColumnMappings.Add("Group2Name", "Group2Name");
            tableMapping.ColumnMappings.Add("Group3Name", "Group3Name");
            tableMapping.ColumnMappings.Add("Group4Name", "Group4Name");
            tableMapping.ColumnMappings.Add("Group5Name", "Group5Name");
            tableMapping.ColumnMappings.Add("FacilityDescription", "FacilityDescription");
            tableMapping.ColumnMappings.Add("OutofScan", "OutofScan");
            tableMapping.ColumnMappings.Add("GeographicalXCoordinates", "GeographicalXCoordinates");
            tableMapping.ColumnMappings.Add("GeographicalYCoordinates", "GeographicalYCoordinates");
            tableMapping.ColumnMappings.Add("RodPumpControllerType", "RodPumpControllerType");
            tableMapping.ColumnMappings.Add("ControllerSubType", "ControllerSubType");
            tableMapping.ColumnMappings.Add("CommPort", "CommPort");
            tableMapping.ColumnMappings.Add("CommProtocol", "CommProtocol");
            tableMapping.ColumnMappings.Add("CommAddress", "CommAddress");
            tableMapping.ColumnMappings.Add("AlternateAddress", "AlternateAddress");
            tableMapping.ColumnMappings.Add("CommRetries", "CommRetries");
            tableMapping.ColumnMappings.Add("KeyOnDelay", "KeyOnDelay");
            tableMapping.ColumnMappings.Add("KeyOffDelay", "KeyOffDelay");
            tableMapping.ColumnMappings.Add("AlarmDelay", "AlarmDelay");
            tableMapping.ColumnMappings.Add("ClearDelay", "ClearDelay");
            tableMapping.ColumnMappings.Add("WelltestAutoEval", "WelltestAutoEval");
            tableMapping.ColumnMappings.Add("TopPerfs", "TopPerfs");
            tableMapping.ColumnMappings.Add("BottomPerfs", "BottomPerfs");
            tableMapping.ColumnMappings.Add("TACDepth", "TACDepth");
            tableMapping.ColumnMappings.Add("PlugBackTD", "PlugBackTD");
            tableMapping.ColumnMappings.Add("PumpMeasuredDepth", "PumpMeasuredDepth");
            tableMapping.ColumnMappings.Add("PumpVerticalDepth", "PumpVerticalDepth");
            tableMapping.ColumnMappings.Add("PumpID", "PumpID");
            tableMapping.ColumnMappings.Add("CasingValveOpen", "CasingValveOpen");
            tableMapping.ColumnMappings.Add("CasingOD", "CasingOD");
            tableMapping.ColumnMappings.Add("CasingWeight", "CasingWeight");
            tableMapping.ColumnMappings.Add("TubingOD", "TubingOD");
            tableMapping.ColumnMappings.Add("Oil", "Oil");
            tableMapping.ColumnMappings.Add("Water", "Water");
            tableMapping.ColumnMappings.Add("Gas", "Gas");
            tableMapping.ColumnMappings.Add("LastWellTestDate", "LastWellTestDate");
            tableMapping.ColumnMappings.Add("OilGravity", "OilGravity");
            tableMapping.ColumnMappings.Add("WaterSpGravity", "WaterSpGravity");
            tableMapping.ColumnMappings.Add("GasSpGravity", "GasSpGravity");
            tableMapping.ColumnMappings.Add("TubingPres", "TubingPres");
            tableMapping.ColumnMappings.Add("TubingGrad", "TubingGrad");
            tableMapping.ColumnMappings.Add("WheadTemp", "WheadTemp");
            tableMapping.ColumnMappings.Add("CasingPres", "CasingPres");
            tableMapping.ColumnMappings.Add("CasingOilCut", "CasingOilCut");
            tableMapping.ColumnMappings.Add("FLevelfromSurface", "FLevelfromSurface");
            tableMapping.ColumnMappings.Add("FluidAbovePump", "FluidAbovePump");
            tableMapping.ColumnMappings.Add("FluidLevelDate", "FluidLevelDate");
            tableMapping.ColumnMappings.Add("FluidLevelComment", "FluidLevelComment");
            tableMapping.ColumnMappings.Add("FluidInertiaforAna", "FluidInertiaforAna");
            tableMapping.ColumnMappings.Add("PumpingUnitManuf", "PumpingUnitManuf");
            tableMapping.ColumnMappings.Add("PUnitType", "PUnitType");
            tableMapping.ColumnMappings.Add("GearboxSize", "GearboxSize");
            tableMapping.ColumnMappings.Add("BeamRating", "BeamRating");
            tableMapping.ColumnMappings.Add("StrokeLength", "StrokeLength");
            tableMapping.ColumnMappings.Add("PumpingUnitDescription", "PumpingUnitDescription");
            tableMapping.ColumnMappings.Add("WristPin", "WristPin");
            tableMapping.ColumnMappings.Add("ActualStrokLength", "ActualStrokLength");
            tableMapping.ColumnMappings.Add("TorqueCalcMethod", "TorqueCalcMethod");
            tableMapping.ColumnMappings.Add("UnitRotation", "UnitRotation");
            tableMapping.ColumnMappings.Add("MotorType", "MotorType");
            tableMapping.ColumnMappings.Add("MotorSize", "MotorSize");
            tableMapping.ColumnMappings.Add("SlipTorque", "SlipTorque");
            tableMapping.ColumnMappings.Add("CrankID", "CrankID");
            tableMapping.ColumnMappings.Add("CBTCBE", "CBTCBE");
            tableMapping.ColumnMappings.Add("MeasMotorAmps", "MeasMotorAmps");
            tableMapping.ColumnMappings.Add("MeasMotorAmps1", "MeasMotorAmps1");
            tableMapping.ColumnMappings.Add("MaxAirBalPres", "MaxAirBalPres");
            tableMapping.ColumnMappings.Add("MinAirBalPres", "MinAirBalPres");
            tableMapping.ColumnMappings.Add("MaxEvent HistoryRecords", "MaxEvent HistoryRecords");
            tableMapping.ColumnMappings.Add("C1Lead Dist", "C1Lead Dist");
            tableMapping.ColumnMappings.Add("C1LeadPrimaryWeightID", "C1LeadPrimaryWeightID");
            tableMapping.ColumnMappings.Add("C1LeadAuxWeight", "C1LeadAuxWeight");
            tableMapping.ColumnMappings.Add("C1LagDist", "C1LagDist");
            tableMapping.ColumnMappings.Add("C1LagPrimaryWeightID", "C1LagPrimaryWeightID");
            tableMapping.ColumnMappings.Add("C1Lag AuxWeighID", "C1Lag AuxWeighID");
            tableMapping.ColumnMappings.Add("C2LeadDist", "C2LeadDist");
            tableMapping.ColumnMappings.Add("C2LeadPrimaryWeighID", "C2LeadPrimaryWeighID");
            tableMapping.ColumnMappings.Add("C2LeadAuxWeightID", "C2LeadAuxWeightID");
            tableMapping.ColumnMappings.Add("C2LagDist", "C2LagDist");
            tableMapping.ColumnMappings.Add("C2LagPrimaryWeightID", "C2LagPrimaryWeightID");
            tableMapping.ColumnMappings.Add("C2LaAuxWeightID", "C2LaAuxWeightID");
            tableMapping.ColumnMappings.Add("FacilitRecord", "FacilitRecord");
            tableMapping.ColumnMappings.Add("RodpumController", "RodpumController");
            tableMapping.ColumnMappings.Add("Internal_ID", "Internal_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Beam_Well_Group_Configuration] WHERE (([LWNAME] = @Original_LWNAME) " +
                "AND ((@IsNull_NAVNAME = 1 AND [NAVNAME] IS NULL) OR ([NAVNAME] = @Original_NAVNA" +
                "ME)) AND ((@IsNull_UniqueWellbore = 1 AND [UniqueWellbore] IS NULL) OR ([UniqueW" +
                "ellbore] = @Original_UniqueWellbore)) AND ((@IsNull_UniqueWellboreID = 1 AND [Un" +
                "iqueWellboreID] IS NULL) OR ([UniqueWellboreID] = @Original_UniqueWellboreID)) A" +
                "ND ((@IsNull_UniqueIntervalID = 1 AND [UniqueIntervalID] IS NULL) OR ([UniqueInt" +
                "ervalID] = @Original_UniqueIntervalID)) AND ((@IsNull_CAOID = 1 AND [CAOID] IS N" +
                "ULL) OR ([CAOID] = @Original_CAOID)) AND ((@IsNull_LongName = 1 AND [LongName] I" +
                "S NULL) OR ([LongName] = @Original_LongName)) AND ((@IsNull_Group1Name = 1 AND [" +
                "Group1Name] IS NULL) OR ([Group1Name] = @Original_Group1Name)) AND ((@IsNull_Gro" +
                "up2Name = 1 AND [Group2Name] IS NULL) OR ([Group2Name] = @Original_Group2Name)) " +
                "AND ((@IsNull_Group3Name = 1 AND [Group3Name] IS NULL) OR ([Group3Name] = @Origi" +
                "nal_Group3Name)) AND ((@IsNull_Group4Name = 1 AND [Group4Name] IS NULL) OR ([Gro" +
                "up4Name] = @Original_Group4Name)) AND ((@IsNull_Group5Name = 1 AND [Group5Name] " +
                "IS NULL) OR ([Group5Name] = @Original_Group5Name)) AND ((@IsNull_FacilityDescrip" +
                "tion = 1 AND [FacilityDescription] IS NULL) OR ([FacilityDescription] = @Origina" +
                "l_FacilityDescription)) AND ((@IsNull_OutofScan = 1 AND [OutofScan] IS NULL) OR " +
                "([OutofScan] = @Original_OutofScan)) AND ((@IsNull_GeographicalXCoordinates = 1 " +
                "AND [GeographicalXCoordinates] IS NULL) OR ([GeographicalXCoordinates] = @Origin" +
                "al_GeographicalXCoordinates)) AND ((@IsNull_GeographicalYCoordinates = 1 AND [Ge" +
                "ographicalYCoordinates] IS NULL) OR ([GeographicalYCoordinates] = @Original_Geog" +
                "raphicalYCoordinates)) AND ((@IsNull_RodPumpControllerType = 1 AND [RodPumpContr" +
                "ollerType] IS NULL) OR ([RodPumpControllerType] = @Original_RodPumpControllerTyp" +
                "e)) AND ((@IsNull_ControllerSubType = 1 AND [ControllerSubType] IS NULL) OR ([Co" +
                "ntrollerSubType] = @Original_ControllerSubType)) AND ((@IsNull_CommPort = 1 AND " +
                "[CommPort] IS NULL) OR ([CommPort] = @Original_CommPort)) AND ((@IsNull_CommProt" +
                "ocol = 1 AND [CommProtocol] IS NULL) OR ([CommProtocol] = @Original_CommProtocol" +
                ")) AND ((@IsNull_CommAddress = 1 AND [CommAddress] IS NULL) OR ([CommAddress] = " +
                "@Original_CommAddress)) AND ((@IsNull_AlternateAddress = 1 AND [AlternateAddress" +
                "] IS NULL) OR ([AlternateAddress] = @Original_AlternateAddress)) AND ((@IsNull_C" +
                "ommRetries = 1 AND [CommRetries] IS NULL) OR ([CommRetries] = @Original_CommRetr" +
                "ies)) AND ((@IsNull_KeyOnDelay = 1 AND [KeyOnDelay] IS NULL) OR ([KeyOnDelay] = " +
                "@Original_KeyOnDelay)) AND ((@IsNull_KeyOffDelay = 1 AND [KeyOffDelay] IS NULL) " +
                "OR ([KeyOffDelay] = @Original_KeyOffDelay)) AND ((@IsNull_AlarmDelay = 1 AND [Al" +
                "armDelay] IS NULL) OR ([AlarmDelay] = @Original_AlarmDelay)) AND ((@IsNull_Clear" +
                "Delay = 1 AND [ClearDelay] IS NULL) OR ([ClearDelay] = @Original_ClearDelay)) AN" +
                "D ((@IsNull_WelltestAutoEval = 1 AND [WelltestAutoEval] IS NULL) OR ([WelltestAu" +
                "toEval] = @Original_WelltestAutoEval)) AND ((@IsNull_TopPerfs = 1 AND [TopPerfs]" +
                " IS NULL) OR ([TopPerfs] = @Original_TopPerfs)) AND ((@IsNull_BottomPerfs = 1 AN" +
                "D [BottomPerfs] IS NULL) OR ([BottomPerfs] = @Original_BottomPerfs)) AND ((@IsNu" +
                "ll_TACDepth = 1 AND [TACDepth] IS NULL) OR ([TACDepth] = @Original_TACDepth)) AN" +
                "D ((@IsNull_PlugBackTD = 1 AND [PlugBackTD] IS NULL) OR ([PlugBackTD] = @Origina" +
                "l_PlugBackTD)) AND ((@IsNull_PumpMeasuredDepth = 1 AND [PumpMeasuredDepth] IS NU" +
                "LL) OR ([PumpMeasuredDepth] = @Original_PumpMeasuredDepth)) AND ((@IsNull_PumpVe" +
                "rticalDepth = 1 AND [PumpVerticalDepth] IS NULL) OR ([PumpVerticalDepth] = @Orig" +
                "inal_PumpVerticalDepth)) AND ((@IsNull_PumpID = 1 AND [PumpID] IS NULL) OR ([Pum" +
                "pID] = @Original_PumpID)) AND ((@IsNull_CasingValveOpen = 1 AND [CasingValveOpen" +
                "] IS NULL) OR ([CasingValveOpen] = @Original_CasingValveOpen)) AND ((@IsNull_Cas" +
                "ingOD = 1 AND [CasingOD] IS NULL) OR ([CasingOD] = @Original_CasingOD)) AND ((@I" +
                "sNull_CasingWeight = 1 AND [CasingWeight] IS NULL) OR ([CasingWeight] = @Origina" +
                "l_CasingWeight)) AND ((@IsNull_TubingOD = 1 AND [TubingOD] IS NULL) OR ([TubingO" +
                "D] = @Original_TubingOD)) AND ((@IsNull_Oil = 1 AND [Oil] IS NULL) OR ([Oil] = @" +
                "Original_Oil)) AND ((@IsNull_Water = 1 AND [Water] IS NULL) OR ([Water] = @Origi" +
                "nal_Water)) AND ((@IsNull_Gas = 1 AND [Gas] IS NULL) OR ([Gas] = @Original_Gas))" +
                " AND ((@IsNull_LastWellTestDate = 1 AND [LastWellTestDate] IS NULL) OR ([LastWel" +
                "lTestDate] = @Original_LastWellTestDate)) AND ((@IsNull_OilGravity = 1 AND [OilG" +
                "ravity] IS NULL) OR ([OilGravity] = @Original_OilGravity)) AND ((@IsNull_WaterSp" +
                "Gravity = 1 AND [WaterSpGravity] IS NULL) OR ([WaterSpGravity] = @Original_Water" +
                "SpGravity)) AND ((@IsNull_GasSpGravity = 1 AND [GasSpGravity] IS NULL) OR ([GasS" +
                "pGravity] = @Original_GasSpGravity)) AND ((@IsNull_TubingPres = 1 AND [TubingPre" +
                "s] IS NULL) OR ([TubingPres] = @Original_TubingPres)) AND ((@IsNull_TubingGrad =" +
                " 1 AND [TubingGrad] IS NULL) OR ([TubingGrad] = @Original_TubingGrad)) AND ((@Is" +
                "Null_WheadTemp = 1 AND [WheadTemp] IS NULL) OR ([WheadTemp] = @Original_WheadTem" +
                "p)) AND ((@IsNull_CasingPres = 1 AND [CasingPres] IS NULL) OR ([CasingPres] = @O" +
                "riginal_CasingPres)) AND ((@IsNull_CasingOilCut = 1 AND [CasingOilCut] IS NULL) " +
                "OR ([CasingOilCut] = @Original_CasingOilCut)) AND ((@IsNull_FLevelfromSurface = " +
                "1 AND [FLevelfromSurface] IS NULL) OR ([FLevelfromSurface] = @Original_FLevelfro" +
                "mSurface)) AND ((@IsNull_FluidAbovePump = 1 AND [FluidAbovePump] IS NULL) OR ([F" +
                "luidAbovePump] = @Original_FluidAbovePump)) AND ((@IsNull_FluidLevelDate = 1 AND" +
                " [FluidLevelDate] IS NULL) OR ([FluidLevelDate] = @Original_FluidLevelDate)) AND" +
                " ((@IsNull_FluidLevelComment = 1 AND [FluidLevelComment] IS NULL) OR ([FluidLeve" +
                "lComment] = @Original_FluidLevelComment)) AND ((@IsNull_FluidInertiaforAna = 1 A" +
                "ND [FluidInertiaforAna] IS NULL) OR ([FluidInertiaforAna] = @Original_FluidInert" +
                "iaforAna)) AND ((@IsNull_PumpingUnitManuf = 1 AND [PumpingUnitManuf] IS NULL) OR" +
                " ([PumpingUnitManuf] = @Original_PumpingUnitManuf)) AND ((@IsNull_PUnitType = 1 " +
                "AND [PUnitType] IS NULL) OR ([PUnitType] = @Original_PUnitType)) AND ((@IsNull_G" +
                "earboxSize = 1 AND [GearboxSize] IS NULL) OR ([GearboxSize] = @Original_GearboxS" +
                "ize)) AND ((@IsNull_BeamRating = 1 AND [BeamRating] IS NULL) OR ([BeamRating] = " +
                "@Original_BeamRating)) AND ((@IsNull_StrokeLength = 1 AND [StrokeLength] IS NULL" +
                ") OR ([StrokeLength] = @Original_StrokeLength)) AND ((@IsNull_PumpingUnitDescrip" +
                "tion = 1 AND [PumpingUnitDescription] IS NULL) OR ([PumpingUnitDescription] = @O" +
                "riginal_PumpingUnitDescription)) AND ((@IsNull_WristPin = 1 AND [WristPin] IS NU" +
                "LL) OR ([WristPin] = @Original_WristPin)) AND ((@IsNull_ActualStrokLength = 1 AN" +
                "D [ActualStrokLength] IS NULL) OR ([ActualStrokLength] = @Original_ActualStrokLe" +
                "ngth)) AND ((@IsNull_TorqueCalcMethod = 1 AND [TorqueCalcMethod] IS NULL) OR ([T" +
                "orqueCalcMethod] = @Original_TorqueCalcMethod)) AND ((@IsNull_UnitRotation = 1 A" +
                "ND [UnitRotation] IS NULL) OR ([UnitRotation] = @Original_UnitRotation)) AND ((@" +
                "IsNull_MotorType = 1 AND [MotorType] IS NULL) OR ([MotorType] = @Original_MotorT" +
                "ype)) AND ((@IsNull_MotorSize = 1 AND [MotorSize] IS NULL) OR ([MotorSize] = @Or" +
                "iginal_MotorSize)) AND ((@IsNull_SlipTorque = 1 AND [SlipTorque] IS NULL) OR ([S" +
                "lipTorque] = @Original_SlipTorque)) AND ((@IsNull_CrankID = 1 AND [CrankID] IS N" +
                "ULL) OR ([CrankID] = @Original_CrankID)) AND ((@IsNull_CBTCBE = 1 AND [CBTCBE] I" +
                "S NULL) OR ([CBTCBE] = @Original_CBTCBE)) AND ((@IsNull_MeasMotorAmps = 1 AND [M" +
                "easMotorAmps] IS NULL) OR ([MeasMotorAmps] = @Original_MeasMotorAmps)) AND ((@Is" +
                "Null_MeasMotorAmps1 = 1 AND [MeasMotorAmps1] IS NULL) OR ([MeasMotorAmps1] = @Or" +
                "iginal_MeasMotorAmps1)) AND ((@IsNull_MaxAirBalPres = 1 AND [MaxAirBalPres] IS N" +
                "ULL) OR ([MaxAirBalPres] = @Original_MaxAirBalPres)) AND ((@IsNull_MinAirBalPres" +
                " = 1 AND [MinAirBalPres] IS NULL) OR ([MinAirBalPres] = @Original_MinAirBalPres)" +
                ") AND ((@IsNull_MaxEvent_HistoryRecords = 1 AND [MaxEvent HistoryRecords] IS NUL" +
                "L) OR ([MaxEvent HistoryRecords] = @Original_MaxEvent_HistoryRecords)) AND ((@Is" +
                "Null_C1Lead_Dist = 1 AND [C1Lead Dist] IS NULL) OR ([C1Lead Dist] = @Original_C1" +
                "Lead_Dist)) AND ((@IsNull_C1LeadPrimaryWeightID = 1 AND [C1LeadPrimaryWeightID] " +
                "IS NULL) OR ([C1LeadPrimaryWeightID] = @Original_C1LeadPrimaryWeightID)) AND ((@" +
                "IsNull_C1LeadAuxWeight = 1 AND [C1LeadAuxWeight] IS NULL) OR ([C1LeadAuxWeight] " +
                "= @Original_C1LeadAuxWeight)) AND ((@IsNull_C1LagDist = 1 AND [C1LagDist] IS NUL" +
                "L) OR ([C1LagDist] = @Original_C1LagDist)) AND ((@IsNull_C1LagPrimaryWeightID = " +
                "1 AND [C1LagPrimaryWeightID] IS NULL) OR ([C1LagPrimaryWeightID] = @Original_C1L" +
                "agPrimaryWeightID)) AND ((@IsNull_C1Lag_AuxWeighID = 1 AND [C1Lag AuxWeighID] IS" +
                " NULL) OR ([C1Lag AuxWeighID] = @Original_C1Lag_AuxWeighID)) AND ((@IsNull_C2Lea" +
                "dDist = 1 AND [C2LeadDist] IS NULL) OR ([C2LeadDist] = @Original_C2LeadDist)) AN" +
                "D ((@IsNull_C2LeadPrimaryWeighID = 1 AND [C2LeadPrimaryWeighID] IS NULL) OR ([C2" +
                "LeadPrimaryWeighID] = @Original_C2LeadPrimaryWeighID)) AND ((@IsNull_C2LeadAuxWe" +
                "ightID = 1 AND [C2LeadAuxWeightID] IS NULL) OR ([C2LeadAuxWeightID] = @Original_" +
                "C2LeadAuxWeightID)) AND ((@IsNull_C2LagDist = 1 AND [C2LagDist] IS NULL) OR ([C2" +
                "LagDist] = @Original_C2LagDist)) AND ((@IsNull_C2LagPrimaryWeightID = 1 AND [C2L" +
                "agPrimaryWeightID] IS NULL) OR ([C2LagPrimaryWeightID] = @Original_C2LagPrimaryW" +
                "eightID)) AND ((@IsNull_C2LaAuxWeightID = 1 AND [C2LaAuxWeightID] IS NULL) OR ([" +
                "C2LaAuxWeightID] = @Original_C2LaAuxWeightID)) AND ((@IsNull_FacilitRecord = 1 A" +
                "ND [FacilitRecord] IS NULL) OR ([FacilitRecord] = @Original_FacilitRecord)) AND " +
                "((@IsNull_RodpumController = 1 AND [RodpumController] IS NULL) OR ([RodpumContro" +
                "ller] = @Original_RodpumController)) AND ((@IsNull_Internal_ID = 1 AND [Internal" +
                "_ID] IS NULL) OR ([Internal_ID] = @Original_Internal_ID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LWNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAVNAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAVNAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAVNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAVNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniqueWellbore", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellbore", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueWellbore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellbore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniqueWellboreID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellboreID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueWellboreID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellboreID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniqueIntervalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueIntervalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueIntervalID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueIntervalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CAOID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAOID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAOID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAOID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LongName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group1Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group1Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group2Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group2Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group3Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group3Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group4Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group4Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group5Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group5Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group5Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group5Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacilityDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilityDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacilityDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilityDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutofScan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutofScan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutofScan", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutofScan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeographicalXCoordinates", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalXCoordinates", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeographicalXCoordinates", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalXCoordinates", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeographicalYCoordinates", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalYCoordinates", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeographicalYCoordinates", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalYCoordinates", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RodPumpControllerType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodPumpControllerType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RodPumpControllerType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodPumpControllerType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ControllerSubType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ControllerSubType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ControllerSubType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ControllerSubType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommPort", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommProtocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommProtocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommProtocol", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommProtocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommAddress", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternateAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternateAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommRetries", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommRetries", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommRetries", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommRetries", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KeyOnDelay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOnDelay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KeyOnDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOnDelay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KeyOffDelay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOffDelay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KeyOffDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOffDelay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlarmDelay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlarmDelay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlarmDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlarmDelay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClearDelay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClearDelay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClearDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClearDelay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WelltestAutoEval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelltestAutoEval", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WelltestAutoEval", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelltestAutoEval", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TopPerfs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TopPerfs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TopPerfs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TopPerfs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BottomPerfs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BottomPerfs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BottomPerfs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BottomPerfs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TACDepth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACDepth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TACDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlugBackTD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlugBackTD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlugBackTD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlugBackTD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpMeasuredDepth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpMeasuredDepth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpMeasuredDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpMeasuredDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpVerticalDepth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpVerticalDepth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpVerticalDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpVerticalDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingValveOpen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingValveOpen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingValveOpen", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingValveOpen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingOD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TubingOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TubingOD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastWellTestDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastWellTestDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastWellTestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastWellTestDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OilGravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilGravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OilGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilGravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WaterSpGravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaterSpGravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WaterSpGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaterSpGravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GasSpGravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasSpGravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GasSpGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasSpGravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TubingPres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingPres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TubingPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingPres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TubingGrad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingGrad", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TubingGrad", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingGrad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WheadTemp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheadTemp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WheadTemp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheadTemp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingPres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingPres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingPres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingOilCut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOilCut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingOilCut", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOilCut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FLevelfromSurface", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLevelfromSurface", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLevelfromSurface", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLevelfromSurface", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FluidAbovePump", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidAbovePump", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FluidAbovePump", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidAbovePump", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FluidLevelDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FluidLevelDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FluidLevelComment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelComment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FluidLevelComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelComment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FluidInertiaforAna", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidInertiaforAna", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FluidInertiaforAna", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidInertiaforAna", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpingUnitManuf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitManuf", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpingUnitManuf", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitManuf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PUnitType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PUnitType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PUnitType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PUnitType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GearboxSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GearboxSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GearboxSize", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GearboxSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BeamRating", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeamRating", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeamRating", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeamRating", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StrokeLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StrokeLength", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StrokeLength", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StrokeLength", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpingUnitDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpingUnitDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WristPin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WristPin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WristPin", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WristPin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActualStrokLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualStrokLength", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActualStrokLength", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualStrokLength", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TorqueCalcMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TorqueCalcMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TorqueCalcMethod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TorqueCalcMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnitRotation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitRotation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitRotation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitRotation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MotorType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MotorType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MotorSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MotorSize", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SlipTorque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SlipTorque", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SlipTorque", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SlipTorque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrankID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrankID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrankID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrankID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CBTCBE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBTCBE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CBTCBE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBTCBE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasMotorAmps", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasMotorAmps", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasMotorAmps1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasMotorAmps1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxAirBalPres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxAirBalPres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxAirBalPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxAirBalPres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MinAirBalPres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinAirBalPres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinAirBalPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinAirBalPres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxEvent_HistoryRecords", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxEvent HistoryRecords", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxEvent_HistoryRecords", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxEvent HistoryRecords", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1Lead_Dist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lead Dist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1Lead_Dist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lead Dist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1LeadPrimaryWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadPrimaryWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1LeadPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadPrimaryWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1LeadAuxWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadAuxWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1LeadAuxWeight", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadAuxWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1LagDist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagDist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1LagDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagDist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1LagPrimaryWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagPrimaryWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1LagPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagPrimaryWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1Lag_AuxWeighID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lag AuxWeighID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1Lag_AuxWeighID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lag AuxWeighID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LeadDist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadDist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LeadDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadDist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LeadPrimaryWeighID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadPrimaryWeighID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LeadPrimaryWeighID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadPrimaryWeighID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LeadAuxWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadAuxWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LeadAuxWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadAuxWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LagDist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagDist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LagDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagDist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LagPrimaryWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagPrimaryWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LagPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagPrimaryWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LaAuxWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LaAuxWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LaAuxWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LaAuxWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacilitRecord", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilitRecord", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacilitRecord", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilitRecord", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RodpumController", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodpumController", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RodpumController", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodpumController", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Internal_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Internal_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Beam_Well_Group_Configuration] ([LWNAME], [NAVNAME], [UniqueWellbore" +
                "], [UniqueWellboreID], [UniqueIntervalID], [CAOID], [LongName], [Group1Name], [G" +
                "roup2Name], [Group3Name], [Group4Name], [Group5Name], [FacilityDescription], [Ou" +
                "tofScan], [GeographicalXCoordinates], [GeographicalYCoordinates], [RodPumpContro" +
                "llerType], [ControllerSubType], [CommPort], [CommProtocol], [CommAddress], [Alte" +
                "rnateAddress], [CommRetries], [KeyOnDelay], [KeyOffDelay], [AlarmDelay], [ClearD" +
                "elay], [WelltestAutoEval], [TopPerfs], [BottomPerfs], [TACDepth], [PlugBackTD], " +
                "[PumpMeasuredDepth], [PumpVerticalDepth], [PumpID], [CasingValveOpen], [CasingOD" +
                "], [CasingWeight], [TubingOD], [Oil], [Water], [Gas], [LastWellTestDate], [OilGr" +
                "avity], [WaterSpGravity], [GasSpGravity], [TubingPres], [TubingGrad], [WheadTemp" +
                "], [CasingPres], [CasingOilCut], [FLevelfromSurface], [FluidAbovePump], [FluidLe" +
                "velDate], [FluidLevelComment], [FluidInertiaforAna], [PumpingUnitManuf], [PUnitT" +
                "ype], [GearboxSize], [BeamRating], [StrokeLength], [PumpingUnitDescription], [Wr" +
                "istPin], [ActualStrokLength], [TorqueCalcMethod], [UnitRotation], [MotorType], [" +
                "MotorSize], [SlipTorque], [CrankID], [CBTCBE], [MeasMotorAmps], [MeasMotorAmps1]" +
                ", [MaxAirBalPres], [MinAirBalPres], [MaxEvent HistoryRecords], [C1Lead Dist], [C" +
                "1LeadPrimaryWeightID], [C1LeadAuxWeight], [C1LagDist], [C1LagPrimaryWeightID], [" +
                "C1Lag AuxWeighID], [C2LeadDist], [C2LeadPrimaryWeighID], [C2LeadAuxWeightID], [C" +
                "2LagDist], [C2LagPrimaryWeightID], [C2LaAuxWeightID], [FacilitRecord], [RodpumCo" +
                "ntroller], [Internal_ID]) VALUES (@LWNAME, @NAVNAME, @UniqueWellbore, @UniqueWel" +
                "lboreID, @UniqueIntervalID, @CAOID, @LongName, @Group1Name, @Group2Name, @Group3" +
                "Name, @Group4Name, @Group5Name, @FacilityDescription, @OutofScan, @GeographicalX" +
                "Coordinates, @GeographicalYCoordinates, @RodPumpControllerType, @ControllerSubTy" +
                "pe, @CommPort, @CommProtocol, @CommAddress, @AlternateAddress, @CommRetries, @Ke" +
                "yOnDelay, @KeyOffDelay, @AlarmDelay, @ClearDelay, @WelltestAutoEval, @TopPerfs, " +
                "@BottomPerfs, @TACDepth, @PlugBackTD, @PumpMeasuredDepth, @PumpVerticalDepth, @P" +
                "umpID, @CasingValveOpen, @CasingOD, @CasingWeight, @TubingOD, @Oil, @Water, @Gas" +
                ", @LastWellTestDate, @OilGravity, @WaterSpGravity, @GasSpGravity, @TubingPres, @" +
                "TubingGrad, @WheadTemp, @CasingPres, @CasingOilCut, @FLevelfromSurface, @FluidAb" +
                "ovePump, @FluidLevelDate, @FluidLevelComment, @FluidInertiaforAna, @PumpingUnitM" +
                "anuf, @PUnitType, @GearboxSize, @BeamRating, @StrokeLength, @PumpingUnitDescript" +
                "ion, @WristPin, @ActualStrokLength, @TorqueCalcMethod, @UnitRotation, @MotorType" +
                ", @MotorSize, @SlipTorque, @CrankID, @CBTCBE, @MeasMotorAmps, @MeasMotorAmps1, @" +
                "MaxAirBalPres, @MinAirBalPres, @MaxEvent_HistoryRecords, @C1Lead_Dist, @C1LeadPr" +
                "imaryWeightID, @C1LeadAuxWeight, @C1LagDist, @C1LagPrimaryWeightID, @C1Lag_AuxWe" +
                "ighID, @C2LeadDist, @C2LeadPrimaryWeighID, @C2LeadAuxWeightID, @C2LagDist, @C2La" +
                "gPrimaryWeightID, @C2LaAuxWeightID, @FacilitRecord, @RodpumController, @Internal" +
                "_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LWNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAVNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAVNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueWellbore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellbore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueWellboreID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellboreID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueIntervalID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueIntervalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAOID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAOID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LongName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group1Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group2Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group3Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group4Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group5Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group5Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacilityDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilityDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutofScan", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutofScan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeographicalXCoordinates", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalXCoordinates", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeographicalYCoordinates", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalYCoordinates", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RodPumpControllerType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodPumpControllerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ControllerSubType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ControllerSubType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommPort", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommProtocol", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommProtocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommAddress", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternateAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommRetries", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommRetries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KeyOnDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOnDelay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KeyOffDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOffDelay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlarmDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlarmDelay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClearDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClearDelay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelltestAutoEval", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelltestAutoEval", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TopPerfs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TopPerfs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BottomPerfs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BottomPerfs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TACDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlugBackTD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlugBackTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpMeasuredDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpMeasuredDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpVerticalDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpVerticalDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingValveOpen", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingValveOpen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingOD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TubingOD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastWellTestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastWellTestDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OilGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilGravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WaterSpGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaterSpGravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GasSpGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasSpGravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TubingPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingPres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TubingGrad", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingGrad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WheadTemp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheadTemp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingPres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingOilCut", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOilCut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLevelfromSurface", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLevelfromSurface", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FluidAbovePump", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidAbovePump", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FluidLevelDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FluidLevelComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FluidInertiaforAna", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidInertiaforAna", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpingUnitManuf", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitManuf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PUnitType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PUnitType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GearboxSize", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GearboxSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeamRating", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeamRating", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StrokeLength", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StrokeLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpingUnitDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WristPin", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WristPin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualStrokLength", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualStrokLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TorqueCalcMethod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TorqueCalcMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitRotation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitRotation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MotorType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MotorSize", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SlipTorque", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SlipTorque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrankID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBTCBE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBTCBE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasMotorAmps", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasMotorAmps1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxAirBalPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxAirBalPres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinAirBalPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinAirBalPres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxEvent_HistoryRecords", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxEvent HistoryRecords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1Lead_Dist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lead Dist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1LeadPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadPrimaryWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1LeadAuxWeight", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadAuxWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1LagDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagDist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1LagPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagPrimaryWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1Lag_AuxWeighID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lag AuxWeighID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LeadDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadDist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LeadPrimaryWeighID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadPrimaryWeighID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LeadAuxWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadAuxWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LagDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagDist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LagPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagPrimaryWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LaAuxWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LaAuxWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacilitRecord", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilitRecord", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RodpumController", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodpumController", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Internal_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Beam_Well_Group_Configuration] SET [LWNAME] = @LWNAME, [NAVNAME] = @NAVNA" +
                "ME, [UniqueWellbore] = @UniqueWellbore, [UniqueWellboreID] = @UniqueWellboreID, " +
                "[UniqueIntervalID] = @UniqueIntervalID, [CAOID] = @CAOID, [LongName] = @LongName" +
                ", [Group1Name] = @Group1Name, [Group2Name] = @Group2Name, [Group3Name] = @Group3" +
                "Name, [Group4Name] = @Group4Name, [Group5Name] = @Group5Name, [FacilityDescripti" +
                "on] = @FacilityDescription, [OutofScan] = @OutofScan, [GeographicalXCoordinates]" +
                " = @GeographicalXCoordinates, [GeographicalYCoordinates] = @GeographicalYCoordin" +
                "ates, [RodPumpControllerType] = @RodPumpControllerType, [ControllerSubType] = @C" +
                "ontrollerSubType, [CommPort] = @CommPort, [CommProtocol] = @CommProtocol, [CommA" +
                "ddress] = @CommAddress, [AlternateAddress] = @AlternateAddress, [CommRetries] = " +
                "@CommRetries, [KeyOnDelay] = @KeyOnDelay, [KeyOffDelay] = @KeyOffDelay, [AlarmDe" +
                "lay] = @AlarmDelay, [ClearDelay] = @ClearDelay, [WelltestAutoEval] = @WelltestAu" +
                "toEval, [TopPerfs] = @TopPerfs, [BottomPerfs] = @BottomPerfs, [TACDepth] = @TACD" +
                "epth, [PlugBackTD] = @PlugBackTD, [PumpMeasuredDepth] = @PumpMeasuredDepth, [Pum" +
                "pVerticalDepth] = @PumpVerticalDepth, [PumpID] = @PumpID, [CasingValveOpen] = @C" +
                "asingValveOpen, [CasingOD] = @CasingOD, [CasingWeight] = @CasingWeight, [TubingO" +
                "D] = @TubingOD, [Oil] = @Oil, [Water] = @Water, [Gas] = @Gas, [LastWellTestDate]" +
                " = @LastWellTestDate, [OilGravity] = @OilGravity, [WaterSpGravity] = @WaterSpGra" +
                "vity, [GasSpGravity] = @GasSpGravity, [TubingPres] = @TubingPres, [TubingGrad] =" +
                " @TubingGrad, [WheadTemp] = @WheadTemp, [CasingPres] = @CasingPres, [CasingOilCu" +
                "t] = @CasingOilCut, [FLevelfromSurface] = @FLevelfromSurface, [FluidAbovePump] =" +
                " @FluidAbovePump, [FluidLevelDate] = @FluidLevelDate, [FluidLevelComment] = @Flu" +
                "idLevelComment, [FluidInertiaforAna] = @FluidInertiaforAna, [PumpingUnitManuf] =" +
                " @PumpingUnitManuf, [PUnitType] = @PUnitType, [GearboxSize] = @GearboxSize, [Bea" +
                "mRating] = @BeamRating, [StrokeLength] = @StrokeLength, [PumpingUnitDescription]" +
                " = @PumpingUnitDescription, [WristPin] = @WristPin, [ActualStrokLength] = @Actua" +
                "lStrokLength, [TorqueCalcMethod] = @TorqueCalcMethod, [UnitRotation] = @UnitRota" +
                "tion, [MotorType] = @MotorType, [MotorSize] = @MotorSize, [SlipTorque] = @SlipTo" +
                "rque, [CrankID] = @CrankID, [CBTCBE] = @CBTCBE, [MeasMotorAmps] = @MeasMotorAmps" +
                ", [MeasMotorAmps1] = @MeasMotorAmps1, [MaxAirBalPres] = @MaxAirBalPres, [MinAirB" +
                "alPres] = @MinAirBalPres, [MaxEvent HistoryRecords] = @MaxEvent_HistoryRecords, " +
                "[C1Lead Dist] = @C1Lead_Dist, [C1LeadPrimaryWeightID] = @C1LeadPrimaryWeightID, " +
                "[C1LeadAuxWeight] = @C1LeadAuxWeight, [C1LagDist] = @C1LagDist, [C1LagPrimaryWei" +
                "ghtID] = @C1LagPrimaryWeightID, [C1Lag AuxWeighID] = @C1Lag_AuxWeighID, [C2LeadD" +
                "ist] = @C2LeadDist, [C2LeadPrimaryWeighID] = @C2LeadPrimaryWeighID, [C2LeadAuxWe" +
                "ightID] = @C2LeadAuxWeightID, [C2LagDist] = @C2LagDist, [C2LagPrimaryWeightID] =" +
                " @C2LagPrimaryWeightID, [C2LaAuxWeightID] = @C2LaAuxWeightID, [FacilitRecord] = " +
                "@FacilitRecord, [RodpumController] = @RodpumController, [Internal_ID] = @Interna" +
                "l_ID WHERE (([LWNAME] = @Original_LWNAME) AND ((@IsNull_NAVNAME = 1 AND [NAVNAME" +
                "] IS NULL) OR ([NAVNAME] = @Original_NAVNAME)) AND ((@IsNull_UniqueWellbore = 1 " +
                "AND [UniqueWellbore] IS NULL) OR ([UniqueWellbore] = @Original_UniqueWellbore)) " +
                "AND ((@IsNull_UniqueWellboreID = 1 AND [UniqueWellboreID] IS NULL) OR ([UniqueWe" +
                "llboreID] = @Original_UniqueWellboreID)) AND ((@IsNull_UniqueIntervalID = 1 AND " +
                "[UniqueIntervalID] IS NULL) OR ([UniqueIntervalID] = @Original_UniqueIntervalID)" +
                ") AND ((@IsNull_CAOID = 1 AND [CAOID] IS NULL) OR ([CAOID] = @Original_CAOID)) A" +
                "ND ((@IsNull_LongName = 1 AND [LongName] IS NULL) OR ([LongName] = @Original_Lon" +
                "gName)) AND ((@IsNull_Group1Name = 1 AND [Group1Name] IS NULL) OR ([Group1Name] " +
                "= @Original_Group1Name)) AND ((@IsNull_Group2Name = 1 AND [Group2Name] IS NULL) " +
                "OR ([Group2Name] = @Original_Group2Name)) AND ((@IsNull_Group3Name = 1 AND [Grou" +
                "p3Name] IS NULL) OR ([Group3Name] = @Original_Group3Name)) AND ((@IsNull_Group4N" +
                "ame = 1 AND [Group4Name] IS NULL) OR ([Group4Name] = @Original_Group4Name)) AND " +
                "((@IsNull_Group5Name = 1 AND [Group5Name] IS NULL) OR ([Group5Name] = @Original_" +
                "Group5Name)) AND ((@IsNull_FacilityDescription = 1 AND [FacilityDescription] IS " +
                "NULL) OR ([FacilityDescription] = @Original_FacilityDescription)) AND ((@IsNull_" +
                "OutofScan = 1 AND [OutofScan] IS NULL) OR ([OutofScan] = @Original_OutofScan)) A" +
                "ND ((@IsNull_GeographicalXCoordinates = 1 AND [GeographicalXCoordinates] IS NULL" +
                ") OR ([GeographicalXCoordinates] = @Original_GeographicalXCoordinates)) AND ((@I" +
                "sNull_GeographicalYCoordinates = 1 AND [GeographicalYCoordinates] IS NULL) OR ([" +
                "GeographicalYCoordinates] = @Original_GeographicalYCoordinates)) AND ((@IsNull_R" +
                "odPumpControllerType = 1 AND [RodPumpControllerType] IS NULL) OR ([RodPumpContro" +
                "llerType] = @Original_RodPumpControllerType)) AND ((@IsNull_ControllerSubType = " +
                "1 AND [ControllerSubType] IS NULL) OR ([ControllerSubType] = @Original_Controlle" +
                "rSubType)) AND ((@IsNull_CommPort = 1 AND [CommPort] IS NULL) OR ([CommPort] = @" +
                "Original_CommPort)) AND ((@IsNull_CommProtocol = 1 AND [CommProtocol] IS NULL) O" +
                "R ([CommProtocol] = @Original_CommProtocol)) AND ((@IsNull_CommAddress = 1 AND [" +
                "CommAddress] IS NULL) OR ([CommAddress] = @Original_CommAddress)) AND ((@IsNull_" +
                "AlternateAddress = 1 AND [AlternateAddress] IS NULL) OR ([AlternateAddress] = @O" +
                "riginal_AlternateAddress)) AND ((@IsNull_CommRetries = 1 AND [CommRetries] IS NU" +
                "LL) OR ([CommRetries] = @Original_CommRetries)) AND ((@IsNull_KeyOnDelay = 1 AND" +
                " [KeyOnDelay] IS NULL) OR ([KeyOnDelay] = @Original_KeyOnDelay)) AND ((@IsNull_K" +
                "eyOffDelay = 1 AND [KeyOffDelay] IS NULL) OR ([KeyOffDelay] = @Original_KeyOffDe" +
                "lay)) AND ((@IsNull_AlarmDelay = 1 AND [AlarmDelay] IS NULL) OR ([AlarmDelay] = " +
                "@Original_AlarmDelay)) AND ((@IsNull_ClearDelay = 1 AND [ClearDelay] IS NULL) OR" +
                " ([ClearDelay] = @Original_ClearDelay)) AND ((@IsNull_WelltestAutoEval = 1 AND [" +
                "WelltestAutoEval] IS NULL) OR ([WelltestAutoEval] = @Original_WelltestAutoEval))" +
                " AND ((@IsNull_TopPerfs = 1 AND [TopPerfs] IS NULL) OR ([TopPerfs] = @Original_T" +
                "opPerfs)) AND ((@IsNull_BottomPerfs = 1 AND [BottomPerfs] IS NULL) OR ([BottomPe" +
                "rfs] = @Original_BottomPerfs)) AND ((@IsNull_TACDepth = 1 AND [TACDepth] IS NULL" +
                ") OR ([TACDepth] = @Original_TACDepth)) AND ((@IsNull_PlugBackTD = 1 AND [PlugBa" +
                "ckTD] IS NULL) OR ([PlugBackTD] = @Original_PlugBackTD)) AND ((@IsNull_PumpMeasu" +
                "redDepth = 1 AND [PumpMeasuredDepth] IS NULL) OR ([PumpMeasuredDepth] = @Origina" +
                "l_PumpMeasuredDepth)) AND ((@IsNull_PumpVerticalDepth = 1 AND [PumpVerticalDepth" +
                "] IS NULL) OR ([PumpVerticalDepth] = @Original_PumpVerticalDepth)) AND ((@IsNull" +
                "_PumpID = 1 AND [PumpID] IS NULL) OR ([PumpID] = @Original_PumpID)) AND ((@IsNul" +
                "l_CasingValveOpen = 1 AND [CasingValveOpen] IS NULL) OR ([CasingValveOpen] = @Or" +
                "iginal_CasingValveOpen)) AND ((@IsNull_CasingOD = 1 AND [CasingOD] IS NULL) OR (" +
                "[CasingOD] = @Original_CasingOD)) AND ((@IsNull_CasingWeight = 1 AND [CasingWeig" +
                "ht] IS NULL) OR ([CasingWeight] = @Original_CasingWeight)) AND ((@IsNull_TubingO" +
                "D = 1 AND [TubingOD] IS NULL) OR ([TubingOD] = @Original_TubingOD)) AND ((@IsNul" +
                "l_Oil = 1 AND [Oil] IS NULL) OR ([Oil] = @Original_Oil)) AND ((@IsNull_Water = 1" +
                " AND [Water] IS NULL) OR ([Water] = @Original_Water)) AND ((@IsNull_Gas = 1 AND " +
                "[Gas] IS NULL) OR ([Gas] = @Original_Gas)) AND ((@IsNull_LastWellTestDate = 1 AN" +
                "D [LastWellTestDate] IS NULL) OR ([LastWellTestDate] = @Original_LastWellTestDat" +
                "e)) AND ((@IsNull_OilGravity = 1 AND [OilGravity] IS NULL) OR ([OilGravity] = @O" +
                "riginal_OilGravity)) AND ((@IsNull_WaterSpGravity = 1 AND [WaterSpGravity] IS NU" +
                "LL) OR ([WaterSpGravity] = @Original_WaterSpGravity)) AND ((@IsNull_GasSpGravity" +
                " = 1 AND [GasSpGravity] IS NULL) OR ([GasSpGravity] = @Original_GasSpGravity)) A" +
                "ND ((@IsNull_TubingPres = 1 AND [TubingPres] IS NULL) OR ([TubingPres] = @Origin" +
                "al_TubingPres)) AND ((@IsNull_TubingGrad = 1 AND [TubingGrad] IS NULL) OR ([Tubi" +
                "ngGrad] = @Original_TubingGrad)) AND ((@IsNull_WheadTemp = 1 AND [WheadTemp] IS " +
                "NULL) OR ([WheadTemp] = @Original_WheadTemp)) AND ((@IsNull_CasingPres = 1 AND [" +
                "CasingPres] IS NULL) OR ([CasingPres] = @Original_CasingPres)) AND ((@IsNull_Cas" +
                "ingOilCut = 1 AND [CasingOilCut] IS NULL) OR ([CasingOilCut] = @Original_CasingO" +
                "ilCut)) AND ((@IsNull_FLevelfromSurface = 1 AND [FLevelfromSurface] IS NULL) OR " +
                "([FLevelfromSurface] = @Original_FLevelfromSurface)) AND ((@IsNull_FluidAbovePum" +
                "p = 1 AND [FluidAbovePump] IS NULL) OR ([FluidAbovePump] = @Original_FluidAboveP" +
                "ump)) AND ((@IsNull_FluidLevelDate = 1 AND [FluidLevelDate] IS NULL) OR ([FluidL" +
                "evelDate] = @Original_FluidLevelDate)) AND ((@IsNull_FluidLevelComment = 1 AND [" +
                "FluidLevelComment] IS NULL) OR ([FluidLevelComment] = @Original_FluidLevelCommen" +
                "t)) AND ((@IsNull_FluidInertiaforAna = 1 AND [FluidInertiaforAna] IS NULL) OR ([" +
                "FluidInertiaforAna] = @Original_FluidInertiaforAna)) AND ((@IsNull_PumpingUnitMa" +
                "nuf = 1 AND [PumpingUnitManuf] IS NULL) OR ([PumpingUnitManuf] = @Original_Pumpi" +
                "ngUnitManuf)) AND ((@IsNull_PUnitType = 1 AND [PUnitType] IS NULL) OR ([PUnitTyp" +
                "e] = @Original_PUnitType)) AND ((@IsNull_GearboxSize = 1 AND [GearboxSize] IS NU" +
                "LL) OR ([GearboxSize] = @Original_GearboxSize)) AND ((@IsNull_BeamRating = 1 AND" +
                " [BeamRating] IS NULL) OR ([BeamRating] = @Original_BeamRating)) AND ((@IsNull_S" +
                "trokeLength = 1 AND [StrokeLength] IS NULL) OR ([StrokeLength] = @Original_Strok" +
                "eLength)) AND ((@IsNull_PumpingUnitDescription = 1 AND [PumpingUnitDescription] " +
                "IS NULL) OR ([PumpingUnitDescription] = @Original_PumpingUnitDescription)) AND (" +
                "(@IsNull_WristPin = 1 AND [WristPin] IS NULL) OR ([WristPin] = @Original_WristPi" +
                "n)) AND ((@IsNull_ActualStrokLength = 1 AND [ActualStrokLength] IS NULL) OR ([Ac" +
                "tualStrokLength] = @Original_ActualStrokLength)) AND ((@IsNull_TorqueCalcMethod " +
                "= 1 AND [TorqueCalcMethod] IS NULL) OR ([TorqueCalcMethod] = @Original_TorqueCal" +
                "cMethod)) AND ((@IsNull_UnitRotation = 1 AND [UnitRotation] IS NULL) OR ([UnitRo" +
                "tation] = @Original_UnitRotation)) AND ((@IsNull_MotorType = 1 AND [MotorType] I" +
                "S NULL) OR ([MotorType] = @Original_MotorType)) AND ((@IsNull_MotorSize = 1 AND " +
                "[MotorSize] IS NULL) OR ([MotorSize] = @Original_MotorSize)) AND ((@IsNull_SlipT" +
                "orque = 1 AND [SlipTorque] IS NULL) OR ([SlipTorque] = @Original_SlipTorque)) AN" +
                "D ((@IsNull_CrankID = 1 AND [CrankID] IS NULL) OR ([CrankID] = @Original_CrankID" +
                ")) AND ((@IsNull_CBTCBE = 1 AND [CBTCBE] IS NULL) OR ([CBTCBE] = @Original_CBTCB" +
                "E)) AND ((@IsNull_MeasMotorAmps = 1 AND [MeasMotorAmps] IS NULL) OR ([MeasMotorA" +
                "mps] = @Original_MeasMotorAmps)) AND ((@IsNull_MeasMotorAmps1 = 1 AND [MeasMotor" +
                "Amps1] IS NULL) OR ([MeasMotorAmps1] = @Original_MeasMotorAmps1)) AND ((@IsNull_" +
                "MaxAirBalPres = 1 AND [MaxAirBalPres] IS NULL) OR ([MaxAirBalPres] = @Original_M" +
                "axAirBalPres)) AND ((@IsNull_MinAirBalPres = 1 AND [MinAirBalPres] IS NULL) OR (" +
                "[MinAirBalPres] = @Original_MinAirBalPres)) AND ((@IsNull_MaxEvent_HistoryRecord" +
                "s = 1 AND [MaxEvent HistoryRecords] IS NULL) OR ([MaxEvent HistoryRecords] = @Or" +
                "iginal_MaxEvent_HistoryRecords)) AND ((@IsNull_C1Lead_Dist = 1 AND [C1Lead Dist]" +
                " IS NULL) OR ([C1Lead Dist] = @Original_C1Lead_Dist)) AND ((@IsNull_C1LeadPrimar" +
                "yWeightID = 1 AND [C1LeadPrimaryWeightID] IS NULL) OR ([C1LeadPrimaryWeightID] =" +
                " @Original_C1LeadPrimaryWeightID)) AND ((@IsNull_C1LeadAuxWeight = 1 AND [C1Lead" +
                "AuxWeight] IS NULL) OR ([C1LeadAuxWeight] = @Original_C1LeadAuxWeight)) AND ((@I" +
                "sNull_C1LagDist = 1 AND [C1LagDist] IS NULL) OR ([C1LagDist] = @Original_C1LagDi" +
                "st)) AND ((@IsNull_C1LagPrimaryWeightID = 1 AND [C1LagPrimaryWeightID] IS NULL) " +
                "OR ([C1LagPrimaryWeightID] = @Original_C1LagPrimaryWeightID)) AND ((@IsNull_C1La" +
                "g_AuxWeighID = 1 AND [C1Lag AuxWeighID] IS NULL) OR ([C1Lag AuxWeighID] = @Origi" +
                "nal_C1Lag_AuxWeighID)) AND ((@IsNull_C2LeadDist = 1 AND [C2LeadDist] IS NULL) OR" +
                " ([C2LeadDist] = @Original_C2LeadDist)) AND ((@IsNull_C2LeadPrimaryWeighID = 1 A" +
                "ND [C2LeadPrimaryWeighID] IS NULL) OR ([C2LeadPrimaryWeighID] = @Original_C2Lead" +
                "PrimaryWeighID)) AND ((@IsNull_C2LeadAuxWeightID = 1 AND [C2LeadAuxWeightID] IS " +
                "NULL) OR ([C2LeadAuxWeightID] = @Original_C2LeadAuxWeightID)) AND ((@IsNull_C2La" +
                "gDist = 1 AND [C2LagDist] IS NULL) OR ([C2LagDist] = @Original_C2LagDist)) AND (" +
                "(@IsNull_C2LagPrimaryWeightID = 1 AND [C2LagPrimaryWeightID] IS NULL) OR ([C2Lag" +
                "PrimaryWeightID] = @Original_C2LagPrimaryWeightID)) AND ((@IsNull_C2LaAuxWeightI" +
                "D = 1 AND [C2LaAuxWeightID] IS NULL) OR ([C2LaAuxWeightID] = @Original_C2LaAuxWe" +
                "ightID)) AND ((@IsNull_FacilitRecord = 1 AND [FacilitRecord] IS NULL) OR ([Facil" +
                "itRecord] = @Original_FacilitRecord)) AND ((@IsNull_RodpumController = 1 AND [Ro" +
                "dpumController] IS NULL) OR ([RodpumController] = @Original_RodpumController)) A" +
                "ND ((@IsNull_Internal_ID = 1 AND [Internal_ID] IS NULL) OR ([Internal_ID] = @Ori" +
                "ginal_Internal_ID)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LWNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAVNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAVNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueWellbore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellbore", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueWellboreID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellboreID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UniqueIntervalID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueIntervalID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAOID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAOID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LongName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group1Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group2Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group3Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group4Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group5Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group5Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacilityDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilityDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutofScan", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutofScan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeographicalXCoordinates", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalXCoordinates", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GeographicalYCoordinates", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalYCoordinates", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RodPumpControllerType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodPumpControllerType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ControllerSubType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ControllerSubType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommPort", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommProtocol", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommProtocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommAddress", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlternateAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommRetries", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommRetries", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KeyOnDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOnDelay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KeyOffDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOffDelay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AlarmDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlarmDelay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClearDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClearDelay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WelltestAutoEval", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelltestAutoEval", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TopPerfs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TopPerfs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BottomPerfs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BottomPerfs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TACDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PlugBackTD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlugBackTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpMeasuredDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpMeasuredDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpVerticalDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpVerticalDepth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingValveOpen", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingValveOpen", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingOD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TubingOD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastWellTestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastWellTestDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OilGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilGravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WaterSpGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaterSpGravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GasSpGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasSpGravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TubingPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingPres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TubingGrad", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingGrad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WheadTemp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheadTemp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingPres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CasingOilCut", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOilCut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLevelfromSurface", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLevelfromSurface", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FluidAbovePump", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidAbovePump", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FluidLevelDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FluidLevelComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FluidInertiaforAna", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidInertiaforAna", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpingUnitManuf", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitManuf", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PUnitType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PUnitType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GearboxSize", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GearboxSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeamRating", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeamRating", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StrokeLength", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StrokeLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PumpingUnitDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WristPin", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WristPin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ActualStrokLength", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualStrokLength", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TorqueCalcMethod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TorqueCalcMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitRotation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitRotation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MotorType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MotorSize", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorSize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SlipTorque", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SlipTorque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CrankID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrankID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBTCBE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBTCBE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasMotorAmps", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MeasMotorAmps1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxAirBalPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxAirBalPres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MinAirBalPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinAirBalPres", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxEvent_HistoryRecords", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxEvent HistoryRecords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1Lead_Dist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lead Dist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1LeadPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadPrimaryWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1LeadAuxWeight", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadAuxWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1LagDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagDist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1LagPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagPrimaryWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1Lag_AuxWeighID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lag AuxWeighID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LeadDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadDist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LeadPrimaryWeighID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadPrimaryWeighID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LeadAuxWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadAuxWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LagDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagDist", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LagPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagPrimaryWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2LaAuxWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LaAuxWeightID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacilitRecord", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilitRecord", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RodpumController", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodpumController", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Internal_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LWNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LWNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NAVNAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAVNAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAVNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAVNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniqueWellbore", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellbore", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueWellbore", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellbore", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniqueWellboreID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellboreID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueWellboreID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueWellboreID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UniqueIntervalID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueIntervalID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UniqueIntervalID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UniqueIntervalID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CAOID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAOID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAOID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAOID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LongName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LongName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LongName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group1Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group1Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group2Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group2Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group3Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group3Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group4Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group4Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group5Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group5Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group5Name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group5Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacilityDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilityDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacilityDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilityDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutofScan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutofScan", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutofScan", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutofScan", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeographicalXCoordinates", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalXCoordinates", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeographicalXCoordinates", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalXCoordinates", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GeographicalYCoordinates", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalYCoordinates", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GeographicalYCoordinates", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GeographicalYCoordinates", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RodPumpControllerType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodPumpControllerType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RodPumpControllerType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodPumpControllerType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ControllerSubType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ControllerSubType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ControllerSubType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ControllerSubType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommPort", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommProtocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommProtocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommProtocol", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommProtocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommAddress", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlternateAddress", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateAddress", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlternateAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlternateAddress", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommRetries", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommRetries", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommRetries", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommRetries", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KeyOnDelay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOnDelay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KeyOnDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOnDelay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KeyOffDelay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOffDelay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KeyOffDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KeyOffDelay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AlarmDelay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlarmDelay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AlarmDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AlarmDelay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ClearDelay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClearDelay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ClearDelay", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClearDelay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WelltestAutoEval", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelltestAutoEval", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WelltestAutoEval", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WelltestAutoEval", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TopPerfs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TopPerfs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TopPerfs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TopPerfs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BottomPerfs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BottomPerfs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BottomPerfs", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BottomPerfs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TACDepth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACDepth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TACDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TACDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PlugBackTD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlugBackTD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PlugBackTD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PlugBackTD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpMeasuredDepth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpMeasuredDepth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpMeasuredDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpMeasuredDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpVerticalDepth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpVerticalDepth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpVerticalDepth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpVerticalDepth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingValveOpen", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingValveOpen", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingValveOpen", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingValveOpen", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingOD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingWeight", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TubingOD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingOD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TubingOD", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastWellTestDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastWellTestDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastWellTestDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastWellTestDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OilGravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilGravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OilGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilGravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WaterSpGravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaterSpGravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WaterSpGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WaterSpGravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GasSpGravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasSpGravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GasSpGravity", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GasSpGravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TubingPres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingPres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TubingPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingPres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TubingGrad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingGrad", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TubingGrad", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TubingGrad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WheadTemp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheadTemp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WheadTemp", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WheadTemp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingPres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingPres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingPres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CasingOilCut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOilCut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CasingOilCut", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CasingOilCut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FLevelfromSurface", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLevelfromSurface", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLevelfromSurface", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLevelfromSurface", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FluidAbovePump", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidAbovePump", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FluidAbovePump", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidAbovePump", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FluidLevelDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FluidLevelDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FluidLevelComment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelComment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FluidLevelComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidLevelComment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FluidInertiaforAna", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidInertiaforAna", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FluidInertiaforAna", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FluidInertiaforAna", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpingUnitManuf", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitManuf", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpingUnitManuf", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitManuf", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PUnitType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PUnitType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PUnitType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PUnitType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GearboxSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GearboxSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GearboxSize", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GearboxSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_BeamRating", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeamRating", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BeamRating", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BeamRating", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_StrokeLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StrokeLength", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StrokeLength", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "StrokeLength", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PumpingUnitDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PumpingUnitDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PumpingUnitDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WristPin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WristPin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WristPin", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WristPin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ActualStrokLength", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualStrokLength", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ActualStrokLength", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ActualStrokLength", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TorqueCalcMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TorqueCalcMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TorqueCalcMethod", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TorqueCalcMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnitRotation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitRotation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitRotation", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitRotation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MotorType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MotorType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MotorSize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorSize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MotorSize", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MotorSize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SlipTorque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SlipTorque", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SlipTorque", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SlipTorque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CrankID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrankID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CrankID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CrankID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CBTCBE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBTCBE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CBTCBE", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBTCBE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasMotorAmps", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasMotorAmps", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MeasMotorAmps1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MeasMotorAmps1", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MeasMotorAmps1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxAirBalPres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxAirBalPres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxAirBalPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxAirBalPres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MinAirBalPres", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinAirBalPres", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MinAirBalPres", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MinAirBalPres", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxEvent_HistoryRecords", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxEvent HistoryRecords", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxEvent_HistoryRecords", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxEvent HistoryRecords", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1Lead_Dist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lead Dist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1Lead_Dist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lead Dist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1LeadPrimaryWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadPrimaryWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1LeadPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadPrimaryWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1LeadAuxWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadAuxWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1LeadAuxWeight", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LeadAuxWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1LagDist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagDist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1LagDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagDist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1LagPrimaryWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagPrimaryWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1LagPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1LagPrimaryWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1Lag_AuxWeighID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lag AuxWeighID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1Lag_AuxWeighID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1Lag AuxWeighID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LeadDist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadDist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LeadDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadDist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LeadPrimaryWeighID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadPrimaryWeighID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LeadPrimaryWeighID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadPrimaryWeighID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LeadAuxWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadAuxWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LeadAuxWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LeadAuxWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LagDist", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagDist", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LagDist", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagDist", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LagPrimaryWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagPrimaryWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LagPrimaryWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LagPrimaryWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2LaAuxWeightID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LaAuxWeightID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2LaAuxWeightID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2LaAuxWeightID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacilitRecord", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilitRecord", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacilitRecord", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacilitRecord", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RodpumController", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodpumController", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RodpumController", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RodpumController", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Internal_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Internal_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LowisChartApp.Properties.Settings.Default.db_chartConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Beam_Well_Group_Configuration.*\r\nFROM            Beam_Well_Group_Co" +
                "nfiguration";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT ActualStrokLength, AlarmDelay, AlternateAddress, BeamRating, BottomPerfs, [C1Lag AuxWeighID], C1LagDist, C1LagPrimaryWeightID, [C1Lead Dist], C1LeadAuxWeight, C1LeadPrimaryWeightID, C2LaAuxWeightID, C2LagDist, C2LagPrimaryWeightID, C2LeadAuxWeightID, C2LeadDist, C2LeadPrimaryWeighID, CAOID, CBTCBE, CasingOD, CasingOilCut, CasingPres, CasingValveOpen, CasingWeight, ClearDelay, CommAddress, CommPort, CommProtocol, CommRetries, ControllerSubType, CrankID, FLevelfromSurface, FacilitRecord, FacilityDescription, FluidAbovePump, FluidInertiaforAna, FluidLevelComment, FluidLevelDate, Gas, GasSpGravity, GearboxSize, GeographicalXCoordinates, GeographicalYCoordinates, Group1Name, Group2Name, Group3Name, Group4Name, Group5Name, KeyOffDelay, KeyOnDelay, LWNAME, LastWellTestDate, LongName, MaxAirBalPres, [MaxEvent HistoryRecords], MeasMotorAmps, MeasMotorAmps1, MinAirBalPres, MotorSize, MotorType, NAVNAME, Oil, OilGravity, OutofScan, PUnitType, PlugBackTD, PumpID, PumpMeasuredDepth, PumpVerticalDepth, PumpingUnitDescription, PumpingUnitManuf, RodPumpControllerType, SlipTorque, StrokeLength, TACDepth, TopPerfs, TorqueCalcMethod, TubingGrad, TubingOD, TubingPres, UniqueIntervalID, UniqueWellbore, UniqueWellboreID, UnitRotation, Water, WaterSpGravity, WelltestAutoEval, WheadTemp, WristPin FROM Beam_Well_Group_Configuration WHERE (LWNAME = @nama)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nama", global::System.Data.SqlDbType.NVarChar, 255, global::System.Data.ParameterDirection.Input, 0, 0, "LWNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT ActualStrokLength, AlarmDelay, AlternateAddress, BeamRating, BottomPerfs, [C1Lag AuxWeighID], C1LagDist, C1LagPrimaryWeightID, [C1Lead Dist], C1LeadAuxWeight, C1LeadPrimaryWeightID, C2LaAuxWeightID, C2LagDist, C2LagPrimaryWeightID, C2LeadAuxWeightID, C2LeadDist, C2LeadPrimaryWeighID, CAOID, CBTCBE, CasingOD, CasingOilCut, CasingPres, CasingValveOpen, CasingWeight, ClearDelay, CommAddress, CommPort, CommProtocol, CommRetries, ControllerSubType, CrankID, FLevelfromSurface, FacilitRecord, FacilityDescription, FluidAbovePump, FluidInertiaforAna, FluidLevelComment, FluidLevelDate, Gas, GasSpGravity, GearboxSize, GeographicalXCoordinates, GeographicalYCoordinates, Group1Name, Group2Name, Group3Name, Group4Name, Group5Name, KeyOffDelay, KeyOnDelay, LWNAME, LastWellTestDate, LongName, MaxAirBalPres, [MaxEvent HistoryRecords], MeasMotorAmps, MeasMotorAmps1, MinAirBalPres, MotorSize, MotorType, NAVNAME, Oil, OilGravity, OutofScan, PUnitType, PlugBackTD, PumpID, PumpMeasuredDepth, PumpVerticalDepth, PumpingUnitDescription, PumpingUnitManuf, RodPumpControllerType, SlipTorque, StrokeLength, TACDepth, TopPerfs, TorqueCalcMethod, TubingGrad, TubingOD, TubingPres, UniqueIntervalID, UniqueWellbore, UniqueWellboreID, UnitRotation, Water, WaterSpGravity, WelltestAutoEval, WheadTemp, WristPin FROM Beam_Well_Group_Configuration WHERE (1 = 0)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable dataTable = new BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByName(BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable dataTable, string nama) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((nama == null)) {
                throw new global::System.ArgumentNullException("nama");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nama));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable GetDataByName(string nama) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((nama == null)) {
                throw new global::System.ArgumentNullException("nama");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nama));
            }
            BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable dataTable = new BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNone(BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable GetDataByNone() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable dataTable = new BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BeamWellDataSet.Beam_Well_Group_ConfigurationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BeamWellDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Beam_Well_Group_Configuration");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_LWNAME, 
                    string Original_NAVNAME, 
                    string Original_UniqueWellbore, 
                    string Original_UniqueWellboreID, 
                    string Original_UniqueIntervalID, 
                    string Original_CAOID, 
                    string Original_LongName, 
                    string Original_Group1Name, 
                    string Original_Group2Name, 
                    string Original_Group3Name, 
                    string Original_Group4Name, 
                    string Original_Group5Name, 
                    string Original_FacilityDescription, 
                    global::System.Nullable<double> Original_OutofScan, 
                    global::System.Nullable<double> Original_GeographicalXCoordinates, 
                    global::System.Nullable<double> Original_GeographicalYCoordinates, 
                    string Original_RodPumpControllerType, 
                    string Original_ControllerSubType, 
                    string Original_CommPort, 
                    string Original_CommProtocol, 
                    global::System.Nullable<double> Original_CommAddress, 
                    string Original_AlternateAddress, 
                    global::System.Nullable<double> Original_CommRetries, 
                    global::System.Nullable<double> Original_KeyOnDelay, 
                    global::System.Nullable<double> Original_KeyOffDelay, 
                    global::System.Nullable<double> Original_AlarmDelay, 
                    global::System.Nullable<double> Original_ClearDelay, 
                    global::System.Nullable<double> Original_WelltestAutoEval, 
                    global::System.Nullable<double> Original_TopPerfs, 
                    global::System.Nullable<double> Original_BottomPerfs, 
                    global::System.Nullable<double> Original_TACDepth, 
                    global::System.Nullable<double> Original_PlugBackTD, 
                    global::System.Nullable<double> Original_PumpMeasuredDepth, 
                    global::System.Nullable<double> Original_PumpVerticalDepth, 
                    global::System.Nullable<double> Original_PumpID, 
                    string Original_CasingValveOpen, 
                    global::System.Nullable<double> Original_CasingOD, 
                    global::System.Nullable<double> Original_CasingWeight, 
                    global::System.Nullable<double> Original_TubingOD, 
                    global::System.Nullable<double> Original_Oil, 
                    global::System.Nullable<double> Original_Water, 
                    global::System.Nullable<double> Original_Gas, 
                    global::System.Nullable<global::System.DateTime> Original_LastWellTestDate, 
                    global::System.Nullable<double> Original_OilGravity, 
                    global::System.Nullable<double> Original_WaterSpGravity, 
                    global::System.Nullable<double> Original_GasSpGravity, 
                    global::System.Nullable<double> Original_TubingPres, 
                    global::System.Nullable<double> Original_TubingGrad, 
                    global::System.Nullable<double> Original_WheadTemp, 
                    global::System.Nullable<double> Original_CasingPres, 
                    global::System.Nullable<double> Original_CasingOilCut, 
                    global::System.Nullable<double> Original_FLevelfromSurface, 
                    global::System.Nullable<double> Original_FluidAbovePump, 
                    global::System.Nullable<global::System.DateTime> Original_FluidLevelDate, 
                    string Original_FluidLevelComment, 
                    string Original_FluidInertiaforAna, 
                    string Original_PumpingUnitManuf, 
                    string Original_PUnitType, 
                    global::System.Nullable<double> Original_GearboxSize, 
                    global::System.Nullable<double> Original_BeamRating, 
                    global::System.Nullable<double> Original_StrokeLength, 
                    string Original_PumpingUnitDescription, 
                    global::System.Nullable<double> Original_WristPin, 
                    global::System.Nullable<double> Original_ActualStrokLength, 
                    string Original_TorqueCalcMethod, 
                    string Original_UnitRotation, 
                    string Original_MotorType, 
                    global::System.Nullable<double> Original_MotorSize, 
                    global::System.Nullable<double> Original_SlipTorque, 
                    string Original_CrankID, 
                    global::System.Nullable<double> Original_CBTCBE, 
                    global::System.Nullable<double> Original_MeasMotorAmps, 
                    global::System.Nullable<double> Original_MeasMotorAmps1, 
                    global::System.Nullable<double> Original_MaxAirBalPres, 
                    global::System.Nullable<double> Original_MinAirBalPres, 
                    global::System.Nullable<double> Original_MaxEvent_HistoryRecords, 
                    global::System.Nullable<double> Original_C1Lead_Dist, 
                    string Original_C1LeadPrimaryWeightID, 
                    string Original_C1LeadAuxWeight, 
                    global::System.Nullable<double> Original_C1LagDist, 
                    string Original_C1LagPrimaryWeightID, 
                    string Original_C1Lag_AuxWeighID, 
                    global::System.Nullable<double> Original_C2LeadDist, 
                    string Original_C2LeadPrimaryWeighID, 
                    string Original_C2LeadAuxWeightID, 
                    global::System.Nullable<double> Original_C2LagDist, 
                    string Original_C2LagPrimaryWeightID, 
                    string Original_C2LaAuxWeightID, 
                    string Original_FacilitRecord, 
                    string Original_RodpumController, 
                    string Original_Internal_ID) {
            if ((Original_LWNAME == null)) {
                throw new global::System.ArgumentNullException("Original_LWNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_LWNAME));
            }
            if ((Original_NAVNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAVNAME));
            }
            if ((Original_UniqueWellbore == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_UniqueWellbore));
            }
            if ((Original_UniqueWellboreID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_UniqueWellboreID));
            }
            if ((Original_UniqueIntervalID == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_UniqueIntervalID));
            }
            if ((Original_CAOID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CAOID));
            }
            if ((Original_LongName == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_LongName));
            }
            if ((Original_Group1Name == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Group1Name));
            }
            if ((Original_Group2Name == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Group2Name));
            }
            if ((Original_Group3Name == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Group3Name));
            }
            if ((Original_Group4Name == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Group4Name));
            }
            if ((Original_Group5Name == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Group5Name));
            }
            if ((Original_FacilityDescription == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_FacilityDescription));
            }
            if ((Original_OutofScan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_OutofScan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_GeographicalXCoordinates.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_GeographicalXCoordinates.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_GeographicalYCoordinates.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((double)(Original_GeographicalYCoordinates.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_RodPumpControllerType == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_RodPumpControllerType));
            }
            if ((Original_ControllerSubType == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ControllerSubType));
            }
            if ((Original_CommPort == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_CommPort));
            }
            if ((Original_CommProtocol == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_CommProtocol));
            }
            if ((Original_CommAddress.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((double)(Original_CommAddress.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_AlternateAddress == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_AlternateAddress));
            }
            if ((Original_CommRetries.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((double)(Original_CommRetries.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_KeyOnDelay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((double)(Original_KeyOnDelay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_KeyOffDelay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((double)(Original_KeyOffDelay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_AlarmDelay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((double)(Original_AlarmDelay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_ClearDelay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((double)(Original_ClearDelay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_WelltestAutoEval.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((double)(Original_WelltestAutoEval.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_TopPerfs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((double)(Original_TopPerfs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_BottomPerfs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((double)(Original_BottomPerfs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_TACDepth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((double)(Original_TACDepth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_PlugBackTD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((double)(Original_PlugBackTD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_PumpMeasuredDepth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((double)(Original_PumpMeasuredDepth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_PumpVerticalDepth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((double)(Original_PumpVerticalDepth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_PumpID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((double)(Original_PumpID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_CasingValveOpen == null)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_CasingValveOpen));
            }
            if ((Original_CasingOD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((double)(Original_CasingOD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_CasingWeight.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((double)(Original_CasingWeight.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_TubingOD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((double)(Original_TubingOD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((double)(Original_Oil.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_Water.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((double)(Original_Water.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((double)(Original_Gas.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_LastWellTestDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((System.DateTime)(Original_LastWellTestDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_OilGravity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((double)(Original_OilGravity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_WaterSpGravity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((double)(Original_WaterSpGravity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_GasSpGravity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((double)(Original_GasSpGravity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_TubingPres.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((double)(Original_TubingPres.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_TubingGrad.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((double)(Original_TubingGrad.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_WheadTemp.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((double)(Original_WheadTemp.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((Original_CasingPres.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((double)(Original_CasingPres.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_CasingOilCut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((double)(Original_CasingOilCut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_FLevelfromSurface.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((double)(Original_FLevelfromSurface.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_FluidAbovePump.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((double)(Original_FluidAbovePump.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_FluidLevelDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((System.DateTime)(Original_FluidLevelDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_FluidLevelComment == null)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((string)(Original_FluidLevelComment));
            }
            if ((Original_FluidInertiaforAna == null)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((string)(Original_FluidInertiaforAna));
            }
            if ((Original_PumpingUnitManuf == null)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((string)(Original_PumpingUnitManuf));
            }
            if ((Original_PUnitType == null)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((string)(Original_PUnitType));
            }
            if ((Original_GearboxSize.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((double)(Original_GearboxSize.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_BeamRating.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((double)(Original_BeamRating.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_StrokeLength.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((double)(Original_StrokeLength.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_PumpingUnitDescription == null)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((string)(Original_PumpingUnitDescription));
            }
            if ((Original_WristPin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((double)(Original_WristPin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_ActualStrokLength.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((double)(Original_ActualStrokLength.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_TorqueCalcMethod == null)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((string)(Original_TorqueCalcMethod));
            }
            if ((Original_UnitRotation == null)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((string)(Original_UnitRotation));
            }
            if ((Original_MotorType == null)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((string)(Original_MotorType));
            }
            if ((Original_MotorSize.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((double)(Original_MotorSize.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_SlipTorque.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((double)(Original_SlipTorque.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_CrankID == null)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((string)(Original_CrankID));
            }
            if ((Original_CBTCBE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((double)(Original_CBTCBE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_MeasMotorAmps.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((double)(Original_MeasMotorAmps.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_MeasMotorAmps1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((double)(Original_MeasMotorAmps1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxAirBalPres.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((double)(Original_MaxAirBalPres.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_MinAirBalPres.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((double)(Original_MinAirBalPres.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxEvent_HistoryRecords.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((double)(Original_MaxEvent_HistoryRecords.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_C1Lead_Dist.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((double)(Original_C1Lead_Dist.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_C1LeadPrimaryWeightID == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_C1LeadPrimaryWeightID));
            }
            if ((Original_C1LeadAuxWeight == null)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((string)(Original_C1LeadAuxWeight));
            }
            if ((Original_C1LagDist.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((double)(Original_C1LagDist.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_C1LagPrimaryWeightID == null)) {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[160].Value = ((string)(Original_C1LagPrimaryWeightID));
            }
            if ((Original_C1Lag_AuxWeighID == null)) {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[162].Value = ((string)(Original_C1Lag_AuxWeighID));
            }
            if ((Original_C2LeadDist.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[164].Value = ((double)(Original_C2LeadDist.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            if ((Original_C2LeadPrimaryWeighID == null)) {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[166].Value = ((string)(Original_C2LeadPrimaryWeighID));
            }
            if ((Original_C2LeadAuxWeightID == null)) {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[168].Value = ((string)(Original_C2LeadAuxWeightID));
            }
            if ((Original_C2LagDist.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[170].Value = ((double)(Original_C2LagDist.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            if ((Original_C2LagPrimaryWeightID == null)) {
                this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[172].Value = ((string)(Original_C2LagPrimaryWeightID));
            }
            if ((Original_C2LaAuxWeightID == null)) {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[174].Value = ((string)(Original_C2LaAuxWeightID));
            }
            if ((Original_FacilitRecord == null)) {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[176].Value = ((string)(Original_FacilitRecord));
            }
            if ((Original_RodpumController == null)) {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[178].Value = ((string)(Original_RodpumController));
            }
            if ((Original_Internal_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[180].Value = ((string)(Original_Internal_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string LWNAME, 
                    string NAVNAME, 
                    string UniqueWellbore, 
                    string UniqueWellboreID, 
                    string UniqueIntervalID, 
                    string CAOID, 
                    string LongName, 
                    string Group1Name, 
                    string Group2Name, 
                    string Group3Name, 
                    string Group4Name, 
                    string Group5Name, 
                    string FacilityDescription, 
                    global::System.Nullable<double> OutofScan, 
                    global::System.Nullable<double> GeographicalXCoordinates, 
                    global::System.Nullable<double> GeographicalYCoordinates, 
                    string RodPumpControllerType, 
                    string ControllerSubType, 
                    string CommPort, 
                    string CommProtocol, 
                    global::System.Nullable<double> CommAddress, 
                    string AlternateAddress, 
                    global::System.Nullable<double> CommRetries, 
                    global::System.Nullable<double> KeyOnDelay, 
                    global::System.Nullable<double> KeyOffDelay, 
                    global::System.Nullable<double> AlarmDelay, 
                    global::System.Nullable<double> ClearDelay, 
                    global::System.Nullable<double> WelltestAutoEval, 
                    global::System.Nullable<double> TopPerfs, 
                    global::System.Nullable<double> BottomPerfs, 
                    global::System.Nullable<double> TACDepth, 
                    global::System.Nullable<double> PlugBackTD, 
                    global::System.Nullable<double> PumpMeasuredDepth, 
                    global::System.Nullable<double> PumpVerticalDepth, 
                    global::System.Nullable<double> PumpID, 
                    string CasingValveOpen, 
                    global::System.Nullable<double> CasingOD, 
                    global::System.Nullable<double> CasingWeight, 
                    global::System.Nullable<double> TubingOD, 
                    global::System.Nullable<double> Oil, 
                    global::System.Nullable<double> Water, 
                    global::System.Nullable<double> Gas, 
                    global::System.Nullable<global::System.DateTime> LastWellTestDate, 
                    global::System.Nullable<double> OilGravity, 
                    global::System.Nullable<double> WaterSpGravity, 
                    global::System.Nullable<double> GasSpGravity, 
                    global::System.Nullable<double> TubingPres, 
                    global::System.Nullable<double> TubingGrad, 
                    global::System.Nullable<double> WheadTemp, 
                    global::System.Nullable<double> CasingPres, 
                    global::System.Nullable<double> CasingOilCut, 
                    global::System.Nullable<double> FLevelfromSurface, 
                    global::System.Nullable<double> FluidAbovePump, 
                    global::System.Nullable<global::System.DateTime> FluidLevelDate, 
                    string FluidLevelComment, 
                    string FluidInertiaforAna, 
                    string PumpingUnitManuf, 
                    string PUnitType, 
                    global::System.Nullable<double> GearboxSize, 
                    global::System.Nullable<double> BeamRating, 
                    global::System.Nullable<double> StrokeLength, 
                    string PumpingUnitDescription, 
                    global::System.Nullable<double> WristPin, 
                    global::System.Nullable<double> ActualStrokLength, 
                    string TorqueCalcMethod, 
                    string UnitRotation, 
                    string MotorType, 
                    global::System.Nullable<double> MotorSize, 
                    global::System.Nullable<double> SlipTorque, 
                    string CrankID, 
                    global::System.Nullable<double> CBTCBE, 
                    global::System.Nullable<double> MeasMotorAmps, 
                    global::System.Nullable<double> MeasMotorAmps1, 
                    global::System.Nullable<double> MaxAirBalPres, 
                    global::System.Nullable<double> MinAirBalPres, 
                    global::System.Nullable<double> MaxEvent_HistoryRecords, 
                    global::System.Nullable<double> C1Lead_Dist, 
                    string C1LeadPrimaryWeightID, 
                    string C1LeadAuxWeight, 
                    global::System.Nullable<double> C1LagDist, 
                    string C1LagPrimaryWeightID, 
                    string C1Lag_AuxWeighID, 
                    global::System.Nullable<double> C2LeadDist, 
                    string C2LeadPrimaryWeighID, 
                    string C2LeadAuxWeightID, 
                    global::System.Nullable<double> C2LagDist, 
                    string C2LagPrimaryWeightID, 
                    string C2LaAuxWeightID, 
                    string FacilitRecord, 
                    string RodpumController, 
                    string Internal_ID) {
            if ((LWNAME == null)) {
                throw new global::System.ArgumentNullException("LWNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(LWNAME));
            }
            if ((NAVNAME == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAVNAME));
            }
            if ((UniqueWellbore == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(UniqueWellbore));
            }
            if ((UniqueWellboreID == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(UniqueWellboreID));
            }
            if ((UniqueIntervalID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(UniqueIntervalID));
            }
            if ((CAOID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CAOID));
            }
            if ((LongName == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(LongName));
            }
            if ((Group1Name == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Group1Name));
            }
            if ((Group2Name == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Group2Name));
            }
            if ((Group3Name == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Group3Name));
            }
            if ((Group4Name == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Group4Name));
            }
            if ((Group5Name == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Group5Name));
            }
            if ((FacilityDescription == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(FacilityDescription));
            }
            if ((OutofScan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(OutofScan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((GeographicalXCoordinates.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(GeographicalXCoordinates.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GeographicalYCoordinates.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(GeographicalYCoordinates.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((RodPumpControllerType == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(RodPumpControllerType));
            }
            if ((ControllerSubType == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ControllerSubType));
            }
            if ((CommPort == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(CommPort));
            }
            if ((CommProtocol == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(CommProtocol));
            }
            if ((CommAddress.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(CommAddress.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((AlternateAddress == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(AlternateAddress));
            }
            if ((CommRetries.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(CommRetries.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((KeyOnDelay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(KeyOnDelay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((KeyOffDelay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(KeyOffDelay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AlarmDelay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(AlarmDelay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ClearDelay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(ClearDelay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((WelltestAutoEval.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(WelltestAutoEval.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((TopPerfs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(TopPerfs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((BottomPerfs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(BottomPerfs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((TACDepth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(TACDepth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((PlugBackTD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(PlugBackTD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((PumpMeasuredDepth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(PumpMeasuredDepth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((PumpVerticalDepth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(PumpVerticalDepth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((PumpID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(PumpID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CasingValveOpen == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(CasingValveOpen));
            }
            if ((CasingOD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(CasingOD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((CasingWeight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(CasingWeight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((TubingOD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(TubingOD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Oil.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(Oil.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Water.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(Water.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Gas.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(Gas.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((LastWellTestDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(LastWellTestDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((OilGravity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((double)(OilGravity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((WaterSpGravity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((double)(WaterSpGravity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((GasSpGravity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((double)(GasSpGravity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((TubingPres.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((double)(TubingPres.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((TubingGrad.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((double)(TubingGrad.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((WheadTemp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((double)(WheadTemp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((CasingPres.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((double)(CasingPres.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((CasingOilCut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((double)(CasingOilCut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((FLevelfromSurface.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((double)(FLevelfromSurface.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((FluidAbovePump.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((double)(FluidAbovePump.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((FluidLevelDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((System.DateTime)(FluidLevelDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((FluidLevelComment == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(FluidLevelComment));
            }
            if ((FluidInertiaforAna == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(FluidInertiaforAna));
            }
            if ((PumpingUnitManuf == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(PumpingUnitManuf));
            }
            if ((PUnitType == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(PUnitType));
            }
            if ((GearboxSize.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((double)(GearboxSize.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((BeamRating.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((double)(BeamRating.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((StrokeLength.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((double)(StrokeLength.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((PumpingUnitDescription == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(PumpingUnitDescription));
            }
            if ((WristPin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((double)(WristPin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((ActualStrokLength.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((double)(ActualStrokLength.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((TorqueCalcMethod == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(TorqueCalcMethod));
            }
            if ((UnitRotation == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(UnitRotation));
            }
            if ((MotorType == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(MotorType));
            }
            if ((MotorSize.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((double)(MotorSize.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((SlipTorque.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((double)(SlipTorque.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((CrankID == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(CrankID));
            }
            if ((CBTCBE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((double)(CBTCBE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((MeasMotorAmps.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((double)(MeasMotorAmps.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((MeasMotorAmps1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((double)(MeasMotorAmps1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((MaxAirBalPres.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((double)(MaxAirBalPres.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((MinAirBalPres.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((double)(MinAirBalPres.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((MaxEvent_HistoryRecords.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((double)(MaxEvent_HistoryRecords.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((C1Lead_Dist.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((double)(C1Lead_Dist.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((C1LeadPrimaryWeightID == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(C1LeadPrimaryWeightID));
            }
            if ((C1LeadAuxWeight == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(C1LeadAuxWeight));
            }
            if ((C1LagDist.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((double)(C1LagDist.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((C1LagPrimaryWeightID == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(C1LagPrimaryWeightID));
            }
            if ((C1Lag_AuxWeighID == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(C1Lag_AuxWeighID));
            }
            if ((C2LeadDist.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((double)(C2LeadDist.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((C2LeadPrimaryWeighID == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(C2LeadPrimaryWeighID));
            }
            if ((C2LeadAuxWeightID == null)) {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(C2LeadAuxWeightID));
            }
            if ((C2LagDist.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((double)(C2LagDist.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((C2LagPrimaryWeightID == null)) {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = ((string)(C2LagPrimaryWeightID));
            }
            if ((C2LaAuxWeightID == null)) {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(C2LaAuxWeightID));
            }
            if ((FacilitRecord == null)) {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = ((string)(FacilitRecord));
            }
            if ((RodpumController == null)) {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = ((string)(RodpumController));
            }
            if ((Internal_ID == null)) {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = ((string)(Internal_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string LWNAME, 
                    string NAVNAME, 
                    string UniqueWellbore, 
                    string UniqueWellboreID, 
                    string UniqueIntervalID, 
                    string CAOID, 
                    string LongName, 
                    string Group1Name, 
                    string Group2Name, 
                    string Group3Name, 
                    string Group4Name, 
                    string Group5Name, 
                    string FacilityDescription, 
                    global::System.Nullable<double> OutofScan, 
                    global::System.Nullable<double> GeographicalXCoordinates, 
                    global::System.Nullable<double> GeographicalYCoordinates, 
                    string RodPumpControllerType, 
                    string ControllerSubType, 
                    string CommPort, 
                    string CommProtocol, 
                    global::System.Nullable<double> CommAddress, 
                    string AlternateAddress, 
                    global::System.Nullable<double> CommRetries, 
                    global::System.Nullable<double> KeyOnDelay, 
                    global::System.Nullable<double> KeyOffDelay, 
                    global::System.Nullable<double> AlarmDelay, 
                    global::System.Nullable<double> ClearDelay, 
                    global::System.Nullable<double> WelltestAutoEval, 
                    global::System.Nullable<double> TopPerfs, 
                    global::System.Nullable<double> BottomPerfs, 
                    global::System.Nullable<double> TACDepth, 
                    global::System.Nullable<double> PlugBackTD, 
                    global::System.Nullable<double> PumpMeasuredDepth, 
                    global::System.Nullable<double> PumpVerticalDepth, 
                    global::System.Nullable<double> PumpID, 
                    string CasingValveOpen, 
                    global::System.Nullable<double> CasingOD, 
                    global::System.Nullable<double> CasingWeight, 
                    global::System.Nullable<double> TubingOD, 
                    global::System.Nullable<double> Oil, 
                    global::System.Nullable<double> Water, 
                    global::System.Nullable<double> Gas, 
                    global::System.Nullable<global::System.DateTime> LastWellTestDate, 
                    global::System.Nullable<double> OilGravity, 
                    global::System.Nullable<double> WaterSpGravity, 
                    global::System.Nullable<double> GasSpGravity, 
                    global::System.Nullable<double> TubingPres, 
                    global::System.Nullable<double> TubingGrad, 
                    global::System.Nullable<double> WheadTemp, 
                    global::System.Nullable<double> CasingPres, 
                    global::System.Nullable<double> CasingOilCut, 
                    global::System.Nullable<double> FLevelfromSurface, 
                    global::System.Nullable<double> FluidAbovePump, 
                    global::System.Nullable<global::System.DateTime> FluidLevelDate, 
                    string FluidLevelComment, 
                    string FluidInertiaforAna, 
                    string PumpingUnitManuf, 
                    string PUnitType, 
                    global::System.Nullable<double> GearboxSize, 
                    global::System.Nullable<double> BeamRating, 
                    global::System.Nullable<double> StrokeLength, 
                    string PumpingUnitDescription, 
                    global::System.Nullable<double> WristPin, 
                    global::System.Nullable<double> ActualStrokLength, 
                    string TorqueCalcMethod, 
                    string UnitRotation, 
                    string MotorType, 
                    global::System.Nullable<double> MotorSize, 
                    global::System.Nullable<double> SlipTorque, 
                    string CrankID, 
                    global::System.Nullable<double> CBTCBE, 
                    global::System.Nullable<double> MeasMotorAmps, 
                    global::System.Nullable<double> MeasMotorAmps1, 
                    global::System.Nullable<double> MaxAirBalPres, 
                    global::System.Nullable<double> MinAirBalPres, 
                    global::System.Nullable<double> MaxEvent_HistoryRecords, 
                    global::System.Nullable<double> C1Lead_Dist, 
                    string C1LeadPrimaryWeightID, 
                    string C1LeadAuxWeight, 
                    global::System.Nullable<double> C1LagDist, 
                    string C1LagPrimaryWeightID, 
                    string C1Lag_AuxWeighID, 
                    global::System.Nullable<double> C2LeadDist, 
                    string C2LeadPrimaryWeighID, 
                    string C2LeadAuxWeightID, 
                    global::System.Nullable<double> C2LagDist, 
                    string C2LagPrimaryWeightID, 
                    string C2LaAuxWeightID, 
                    string FacilitRecord, 
                    string RodpumController, 
                    string Internal_ID, 
                    string Original_LWNAME, 
                    string Original_NAVNAME, 
                    string Original_UniqueWellbore, 
                    string Original_UniqueWellboreID, 
                    string Original_UniqueIntervalID, 
                    string Original_CAOID, 
                    string Original_LongName, 
                    string Original_Group1Name, 
                    string Original_Group2Name, 
                    string Original_Group3Name, 
                    string Original_Group4Name, 
                    string Original_Group5Name, 
                    string Original_FacilityDescription, 
                    global::System.Nullable<double> Original_OutofScan, 
                    global::System.Nullable<double> Original_GeographicalXCoordinates, 
                    global::System.Nullable<double> Original_GeographicalYCoordinates, 
                    string Original_RodPumpControllerType, 
                    string Original_ControllerSubType, 
                    string Original_CommPort, 
                    string Original_CommProtocol, 
                    global::System.Nullable<double> Original_CommAddress, 
                    string Original_AlternateAddress, 
                    global::System.Nullable<double> Original_CommRetries, 
                    global::System.Nullable<double> Original_KeyOnDelay, 
                    global::System.Nullable<double> Original_KeyOffDelay, 
                    global::System.Nullable<double> Original_AlarmDelay, 
                    global::System.Nullable<double> Original_ClearDelay, 
                    global::System.Nullable<double> Original_WelltestAutoEval, 
                    global::System.Nullable<double> Original_TopPerfs, 
                    global::System.Nullable<double> Original_BottomPerfs, 
                    global::System.Nullable<double> Original_TACDepth, 
                    global::System.Nullable<double> Original_PlugBackTD, 
                    global::System.Nullable<double> Original_PumpMeasuredDepth, 
                    global::System.Nullable<double> Original_PumpVerticalDepth, 
                    global::System.Nullable<double> Original_PumpID, 
                    string Original_CasingValveOpen, 
                    global::System.Nullable<double> Original_CasingOD, 
                    global::System.Nullable<double> Original_CasingWeight, 
                    global::System.Nullable<double> Original_TubingOD, 
                    global::System.Nullable<double> Original_Oil, 
                    global::System.Nullable<double> Original_Water, 
                    global::System.Nullable<double> Original_Gas, 
                    global::System.Nullable<global::System.DateTime> Original_LastWellTestDate, 
                    global::System.Nullable<double> Original_OilGravity, 
                    global::System.Nullable<double> Original_WaterSpGravity, 
                    global::System.Nullable<double> Original_GasSpGravity, 
                    global::System.Nullable<double> Original_TubingPres, 
                    global::System.Nullable<double> Original_TubingGrad, 
                    global::System.Nullable<double> Original_WheadTemp, 
                    global::System.Nullable<double> Original_CasingPres, 
                    global::System.Nullable<double> Original_CasingOilCut, 
                    global::System.Nullable<double> Original_FLevelfromSurface, 
                    global::System.Nullable<double> Original_FluidAbovePump, 
                    global::System.Nullable<global::System.DateTime> Original_FluidLevelDate, 
                    string Original_FluidLevelComment, 
                    string Original_FluidInertiaforAna, 
                    string Original_PumpingUnitManuf, 
                    string Original_PUnitType, 
                    global::System.Nullable<double> Original_GearboxSize, 
                    global::System.Nullable<double> Original_BeamRating, 
                    global::System.Nullable<double> Original_StrokeLength, 
                    string Original_PumpingUnitDescription, 
                    global::System.Nullable<double> Original_WristPin, 
                    global::System.Nullable<double> Original_ActualStrokLength, 
                    string Original_TorqueCalcMethod, 
                    string Original_UnitRotation, 
                    string Original_MotorType, 
                    global::System.Nullable<double> Original_MotorSize, 
                    global::System.Nullable<double> Original_SlipTorque, 
                    string Original_CrankID, 
                    global::System.Nullable<double> Original_CBTCBE, 
                    global::System.Nullable<double> Original_MeasMotorAmps, 
                    global::System.Nullable<double> Original_MeasMotorAmps1, 
                    global::System.Nullable<double> Original_MaxAirBalPres, 
                    global::System.Nullable<double> Original_MinAirBalPres, 
                    global::System.Nullable<double> Original_MaxEvent_HistoryRecords, 
                    global::System.Nullable<double> Original_C1Lead_Dist, 
                    string Original_C1LeadPrimaryWeightID, 
                    string Original_C1LeadAuxWeight, 
                    global::System.Nullable<double> Original_C1LagDist, 
                    string Original_C1LagPrimaryWeightID, 
                    string Original_C1Lag_AuxWeighID, 
                    global::System.Nullable<double> Original_C2LeadDist, 
                    string Original_C2LeadPrimaryWeighID, 
                    string Original_C2LeadAuxWeightID, 
                    global::System.Nullable<double> Original_C2LagDist, 
                    string Original_C2LagPrimaryWeightID, 
                    string Original_C2LaAuxWeightID, 
                    string Original_FacilitRecord, 
                    string Original_RodpumController, 
                    string Original_Internal_ID) {
            if ((LWNAME == null)) {
                throw new global::System.ArgumentNullException("LWNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(LWNAME));
            }
            if ((NAVNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAVNAME));
            }
            if ((UniqueWellbore == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(UniqueWellbore));
            }
            if ((UniqueWellboreID == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(UniqueWellboreID));
            }
            if ((UniqueIntervalID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(UniqueIntervalID));
            }
            if ((CAOID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CAOID));
            }
            if ((LongName == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(LongName));
            }
            if ((Group1Name == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Group1Name));
            }
            if ((Group2Name == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Group2Name));
            }
            if ((Group3Name == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Group3Name));
            }
            if ((Group4Name == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Group4Name));
            }
            if ((Group5Name == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Group5Name));
            }
            if ((FacilityDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(FacilityDescription));
            }
            if ((OutofScan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(OutofScan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((GeographicalXCoordinates.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(GeographicalXCoordinates.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((GeographicalYCoordinates.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(GeographicalYCoordinates.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((RodPumpControllerType == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(RodPumpControllerType));
            }
            if ((ControllerSubType == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ControllerSubType));
            }
            if ((CommPort == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(CommPort));
            }
            if ((CommProtocol == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(CommProtocol));
            }
            if ((CommAddress.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(CommAddress.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((AlternateAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(AlternateAddress));
            }
            if ((CommRetries.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(CommRetries.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((KeyOnDelay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(KeyOnDelay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((KeyOffDelay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(KeyOffDelay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((AlarmDelay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(AlarmDelay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((ClearDelay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(ClearDelay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((WelltestAutoEval.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(WelltestAutoEval.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((TopPerfs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(TopPerfs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((BottomPerfs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(BottomPerfs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((TACDepth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(TACDepth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((PlugBackTD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(PlugBackTD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((PumpMeasuredDepth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(PumpMeasuredDepth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((PumpVerticalDepth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(PumpVerticalDepth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((PumpID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(PumpID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CasingValveOpen == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(CasingValveOpen));
            }
            if ((CasingOD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(CasingOD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((CasingWeight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(CasingWeight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((TubingOD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(TubingOD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Oil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(Oil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Water.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Water.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Gas.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(Gas.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((LastWellTestDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(LastWellTestDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((OilGravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(OilGravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((WaterSpGravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(WaterSpGravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((GasSpGravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(GasSpGravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((TubingPres.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(TubingPres.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((TubingGrad.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(TubingGrad.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((WheadTemp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(WheadTemp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((CasingPres.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(CasingPres.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((CasingOilCut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(CasingOilCut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((FLevelfromSurface.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(FLevelfromSurface.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((FluidAbovePump.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(FluidAbovePump.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((FluidLevelDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(FluidLevelDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((FluidLevelComment == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(FluidLevelComment));
            }
            if ((FluidInertiaforAna == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(FluidInertiaforAna));
            }
            if ((PumpingUnitManuf == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(PumpingUnitManuf));
            }
            if ((PUnitType == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(PUnitType));
            }
            if ((GearboxSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(GearboxSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((BeamRating.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(BeamRating.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((StrokeLength.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(StrokeLength.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((PumpingUnitDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(PumpingUnitDescription));
            }
            if ((WristPin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(WristPin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((ActualStrokLength.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(ActualStrokLength.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((TorqueCalcMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(TorqueCalcMethod));
            }
            if ((UnitRotation == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(UnitRotation));
            }
            if ((MotorType == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(MotorType));
            }
            if ((MotorSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((double)(MotorSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((SlipTorque.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((double)(SlipTorque.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((CrankID == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(CrankID));
            }
            if ((CBTCBE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((double)(CBTCBE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((MeasMotorAmps.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(MeasMotorAmps.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((MeasMotorAmps1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((double)(MeasMotorAmps1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((MaxAirBalPres.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(MaxAirBalPres.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((MinAirBalPres.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((double)(MinAirBalPres.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((MaxEvent_HistoryRecords.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((double)(MaxEvent_HistoryRecords.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((C1Lead_Dist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(C1Lead_Dist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((C1LeadPrimaryWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(C1LeadPrimaryWeightID));
            }
            if ((C1LeadAuxWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(C1LeadAuxWeight));
            }
            if ((C1LagDist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((double)(C1LagDist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((C1LagPrimaryWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(C1LagPrimaryWeightID));
            }
            if ((C1Lag_AuxWeighID == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(C1Lag_AuxWeighID));
            }
            if ((C2LeadDist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((double)(C2LeadDist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((C2LeadPrimaryWeighID == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(C2LeadPrimaryWeighID));
            }
            if ((C2LeadAuxWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(C2LeadAuxWeightID));
            }
            if ((C2LagDist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(C2LagDist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((C2LagPrimaryWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(C2LagPrimaryWeightID));
            }
            if ((C2LaAuxWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(C2LaAuxWeightID));
            }
            if ((FacilitRecord == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(FacilitRecord));
            }
            if ((RodpumController == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(RodpumController));
            }
            if ((Internal_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Internal_ID));
            }
            if ((Original_LWNAME == null)) {
                throw new global::System.ArgumentNullException("Original_LWNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_LWNAME));
            }
            if ((Original_NAVNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_NAVNAME));
            }
            if ((Original_UniqueWellbore == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_UniqueWellbore));
            }
            if ((Original_UniqueWellboreID == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_UniqueWellboreID));
            }
            if ((Original_UniqueIntervalID == null)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_UniqueIntervalID));
            }
            if ((Original_CAOID == null)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((string)(Original_CAOID));
            }
            if ((Original_LongName == null)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_LongName));
            }
            if ((Original_Group1Name == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_Group1Name));
            }
            if ((Original_Group2Name == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_Group2Name));
            }
            if ((Original_Group3Name == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_Group3Name));
            }
            if ((Original_Group4Name == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_Group4Name));
            }
            if ((Original_Group5Name == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_Group5Name));
            }
            if ((Original_FacilityDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_FacilityDescription));
            }
            if ((Original_OutofScan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((double)(Original_OutofScan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((Original_GeographicalXCoordinates.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((double)(Original_GeographicalXCoordinates.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((Original_GeographicalYCoordinates.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((double)(Original_GeographicalYCoordinates.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((Original_RodPumpControllerType == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_RodPumpControllerType));
            }
            if ((Original_ControllerSubType == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_ControllerSubType));
            }
            if ((Original_CommPort == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_CommPort));
            }
            if ((Original_CommProtocol == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_CommProtocol));
            }
            if ((Original_CommAddress.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((double)(Original_CommAddress.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((Original_AlternateAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((string)(Original_AlternateAddress));
            }
            if ((Original_CommRetries.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((double)(Original_CommRetries.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_KeyOnDelay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((double)(Original_KeyOnDelay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((Original_KeyOffDelay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((double)(Original_KeyOffDelay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((Original_AlarmDelay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((double)(Original_AlarmDelay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((Original_ClearDelay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((double)(Original_ClearDelay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((Original_WelltestAutoEval.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((double)(Original_WelltestAutoEval.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_TopPerfs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((double)(Original_TopPerfs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_BottomPerfs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((double)(Original_BottomPerfs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_TACDepth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((double)(Original_TACDepth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_PlugBackTD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((double)(Original_PlugBackTD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((Original_PumpMeasuredDepth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((double)(Original_PumpMeasuredDepth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_PumpVerticalDepth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((double)(Original_PumpVerticalDepth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_PumpID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((double)(Original_PumpID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_CasingValveOpen == null)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((string)(Original_CasingValveOpen));
            }
            if ((Original_CasingOD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((double)(Original_CasingOD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_CasingWeight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((double)(Original_CasingWeight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((Original_TubingOD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((double)(Original_TubingOD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((double)(Original_Oil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_Water.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((double)(Original_Water.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((double)(Original_Gas.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_LastWellTestDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((System.DateTime)(Original_LastWellTestDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_OilGravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((double)(Original_OilGravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_WaterSpGravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((double)(Original_WaterSpGravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_GasSpGravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((double)(Original_GasSpGravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_TubingPres.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((double)(Original_TubingPres.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_TubingGrad.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((double)(Original_TubingGrad.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((Original_WheadTemp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((double)(Original_WheadTemp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((Original_CasingPres.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((double)(Original_CasingPres.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            if ((Original_CasingOilCut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((double)(Original_CasingOilCut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((Original_FLevelfromSurface.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((double)(Original_FLevelfromSurface.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((Original_FluidAbovePump.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((double)(Original_FluidAbovePump.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((Original_FluidLevelDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((System.DateTime)(Original_FluidLevelDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            if ((Original_FluidLevelComment == null)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((string)(Original_FluidLevelComment));
            }
            if ((Original_FluidInertiaforAna == null)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((string)(Original_FluidInertiaforAna));
            }
            if ((Original_PumpingUnitManuf == null)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((string)(Original_PumpingUnitManuf));
            }
            if ((Original_PUnitType == null)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((string)(Original_PUnitType));
            }
            if ((Original_GearboxSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((double)(Original_GearboxSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            if ((Original_BeamRating.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((double)(Original_BeamRating.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((Original_StrokeLength.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((double)(Original_StrokeLength.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            if ((Original_PumpingUnitDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((string)(Original_PumpingUnitDescription));
            }
            if ((Original_WristPin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((double)(Original_WristPin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            if ((Original_ActualStrokLength.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((double)(Original_ActualStrokLength.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            if ((Original_TorqueCalcMethod == null)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((string)(Original_TorqueCalcMethod));
            }
            if ((Original_UnitRotation == null)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((string)(Original_UnitRotation));
            }
            if ((Original_MotorType == null)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((string)(Original_MotorType));
            }
            if ((Original_MotorSize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((double)(Original_MotorSize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            if ((Original_SlipTorque.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((double)(Original_SlipTorque.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            if ((Original_CrankID == null)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((string)(Original_CrankID));
            }
            if ((Original_CBTCBE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((double)(Original_CBTCBE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            if ((Original_MeasMotorAmps.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[233].Value = ((double)(Original_MeasMotorAmps.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[233].Value = global::System.DBNull.Value;
            }
            if ((Original_MeasMotorAmps1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[235].Value = ((double)(Original_MeasMotorAmps1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[235].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxAirBalPres.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((double)(Original_MaxAirBalPres.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            if ((Original_MinAirBalPres.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[239].Value = ((double)(Original_MinAirBalPres.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[239].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxEvent_HistoryRecords.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((double)(Original_MaxEvent_HistoryRecords.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            if ((Original_C1Lead_Dist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[243].Value = ((double)(Original_C1Lead_Dist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            if ((Original_C1LeadPrimaryWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((string)(Original_C1LeadPrimaryWeightID));
            }
            if ((Original_C1LeadAuxWeight == null)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((string)(Original_C1LeadAuxWeight));
            }
            if ((Original_C1LagDist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((double)(Original_C1LagDist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            if ((Original_C1LagPrimaryWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[251].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[250].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[251].Value = ((string)(Original_C1LagPrimaryWeightID));
            }
            if ((Original_C1Lag_AuxWeighID == null)) {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[253].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[252].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[253].Value = ((string)(Original_C1Lag_AuxWeighID));
            }
            if ((Original_C2LeadDist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[255].Value = ((double)(Original_C2LeadDist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[254].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[255].Value = global::System.DBNull.Value;
            }
            if ((Original_C2LeadPrimaryWeighID == null)) {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[257].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[256].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[257].Value = ((string)(Original_C2LeadPrimaryWeighID));
            }
            if ((Original_C2LeadAuxWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[259].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[258].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[259].Value = ((string)(Original_C2LeadAuxWeightID));
            }
            if ((Original_C2LagDist.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[261].Value = ((double)(Original_C2LagDist.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[260].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[261].Value = global::System.DBNull.Value;
            }
            if ((Original_C2LagPrimaryWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[263].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[262].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[263].Value = ((string)(Original_C2LagPrimaryWeightID));
            }
            if ((Original_C2LaAuxWeightID == null)) {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[265].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[264].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[265].Value = ((string)(Original_C2LaAuxWeightID));
            }
            if ((Original_FacilitRecord == null)) {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[267].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[266].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[267].Value = ((string)(Original_FacilitRecord));
            }
            if ((Original_RodpumController == null)) {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[269].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[268].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[269].Value = ((string)(Original_RodpumController));
            }
            if ((Original_Internal_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[271].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[270].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[271].Value = ((string)(Original_Internal_ID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NAVNAME, 
                    string UniqueWellbore, 
                    string UniqueWellboreID, 
                    string UniqueIntervalID, 
                    string CAOID, 
                    string LongName, 
                    string Group1Name, 
                    string Group2Name, 
                    string Group3Name, 
                    string Group4Name, 
                    string Group5Name, 
                    string FacilityDescription, 
                    global::System.Nullable<double> OutofScan, 
                    global::System.Nullable<double> GeographicalXCoordinates, 
                    global::System.Nullable<double> GeographicalYCoordinates, 
                    string RodPumpControllerType, 
                    string ControllerSubType, 
                    string CommPort, 
                    string CommProtocol, 
                    global::System.Nullable<double> CommAddress, 
                    string AlternateAddress, 
                    global::System.Nullable<double> CommRetries, 
                    global::System.Nullable<double> KeyOnDelay, 
                    global::System.Nullable<double> KeyOffDelay, 
                    global::System.Nullable<double> AlarmDelay, 
                    global::System.Nullable<double> ClearDelay, 
                    global::System.Nullable<double> WelltestAutoEval, 
                    global::System.Nullable<double> TopPerfs, 
                    global::System.Nullable<double> BottomPerfs, 
                    global::System.Nullable<double> TACDepth, 
                    global::System.Nullable<double> PlugBackTD, 
                    global::System.Nullable<double> PumpMeasuredDepth, 
                    global::System.Nullable<double> PumpVerticalDepth, 
                    global::System.Nullable<double> PumpID, 
                    string CasingValveOpen, 
                    global::System.Nullable<double> CasingOD, 
                    global::System.Nullable<double> CasingWeight, 
                    global::System.Nullable<double> TubingOD, 
                    global::System.Nullable<double> Oil, 
                    global::System.Nullable<double> Water, 
                    global::System.Nullable<double> Gas, 
                    global::System.Nullable<global::System.DateTime> LastWellTestDate, 
                    global::System.Nullable<double> OilGravity, 
                    global::System.Nullable<double> WaterSpGravity, 
                    global::System.Nullable<double> GasSpGravity, 
                    global::System.Nullable<double> TubingPres, 
                    global::System.Nullable<double> TubingGrad, 
                    global::System.Nullable<double> WheadTemp, 
                    global::System.Nullable<double> CasingPres, 
                    global::System.Nullable<double> CasingOilCut, 
                    global::System.Nullable<double> FLevelfromSurface, 
                    global::System.Nullable<double> FluidAbovePump, 
                    global::System.Nullable<global::System.DateTime> FluidLevelDate, 
                    string FluidLevelComment, 
                    string FluidInertiaforAna, 
                    string PumpingUnitManuf, 
                    string PUnitType, 
                    global::System.Nullable<double> GearboxSize, 
                    global::System.Nullable<double> BeamRating, 
                    global::System.Nullable<double> StrokeLength, 
                    string PumpingUnitDescription, 
                    global::System.Nullable<double> WristPin, 
                    global::System.Nullable<double> ActualStrokLength, 
                    string TorqueCalcMethod, 
                    string UnitRotation, 
                    string MotorType, 
                    global::System.Nullable<double> MotorSize, 
                    global::System.Nullable<double> SlipTorque, 
                    string CrankID, 
                    global::System.Nullable<double> CBTCBE, 
                    global::System.Nullable<double> MeasMotorAmps, 
                    global::System.Nullable<double> MeasMotorAmps1, 
                    global::System.Nullable<double> MaxAirBalPres, 
                    global::System.Nullable<double> MinAirBalPres, 
                    global::System.Nullable<double> MaxEvent_HistoryRecords, 
                    global::System.Nullable<double> C1Lead_Dist, 
                    string C1LeadPrimaryWeightID, 
                    string C1LeadAuxWeight, 
                    global::System.Nullable<double> C1LagDist, 
                    string C1LagPrimaryWeightID, 
                    string C1Lag_AuxWeighID, 
                    global::System.Nullable<double> C2LeadDist, 
                    string C2LeadPrimaryWeighID, 
                    string C2LeadAuxWeightID, 
                    global::System.Nullable<double> C2LagDist, 
                    string C2LagPrimaryWeightID, 
                    string C2LaAuxWeightID, 
                    string FacilitRecord, 
                    string RodpumController, 
                    string Internal_ID, 
                    string Original_LWNAME, 
                    string Original_NAVNAME, 
                    string Original_UniqueWellbore, 
                    string Original_UniqueWellboreID, 
                    string Original_UniqueIntervalID, 
                    string Original_CAOID, 
                    string Original_LongName, 
                    string Original_Group1Name, 
                    string Original_Group2Name, 
                    string Original_Group3Name, 
                    string Original_Group4Name, 
                    string Original_Group5Name, 
                    string Original_FacilityDescription, 
                    global::System.Nullable<double> Original_OutofScan, 
                    global::System.Nullable<double> Original_GeographicalXCoordinates, 
                    global::System.Nullable<double> Original_GeographicalYCoordinates, 
                    string Original_RodPumpControllerType, 
                    string Original_ControllerSubType, 
                    string Original_CommPort, 
                    string Original_CommProtocol, 
                    global::System.Nullable<double> Original_CommAddress, 
                    string Original_AlternateAddress, 
                    global::System.Nullable<double> Original_CommRetries, 
                    global::System.Nullable<double> Original_KeyOnDelay, 
                    global::System.Nullable<double> Original_KeyOffDelay, 
                    global::System.Nullable<double> Original_AlarmDelay, 
                    global::System.Nullable<double> Original_ClearDelay, 
                    global::System.Nullable<double> Original_WelltestAutoEval, 
                    global::System.Nullable<double> Original_TopPerfs, 
                    global::System.Nullable<double> Original_BottomPerfs, 
                    global::System.Nullable<double> Original_TACDepth, 
                    global::System.Nullable<double> Original_PlugBackTD, 
                    global::System.Nullable<double> Original_PumpMeasuredDepth, 
                    global::System.Nullable<double> Original_PumpVerticalDepth, 
                    global::System.Nullable<double> Original_PumpID, 
                    string Original_CasingValveOpen, 
                    global::System.Nullable<double> Original_CasingOD, 
                    global::System.Nullable<double> Original_CasingWeight, 
                    global::System.Nullable<double> Original_TubingOD, 
                    global::System.Nullable<double> Original_Oil, 
                    global::System.Nullable<double> Original_Water, 
                    global::System.Nullable<double> Original_Gas, 
                    global::System.Nullable<global::System.DateTime> Original_LastWellTestDate, 
                    global::System.Nullable<double> Original_OilGravity, 
                    global::System.Nullable<double> Original_WaterSpGravity, 
                    global::System.Nullable<double> Original_GasSpGravity, 
                    global::System.Nullable<double> Original_TubingPres, 
                    global::System.Nullable<double> Original_TubingGrad, 
                    global::System.Nullable<double> Original_WheadTemp, 
                    global::System.Nullable<double> Original_CasingPres, 
                    global::System.Nullable<double> Original_CasingOilCut, 
                    global::System.Nullable<double> Original_FLevelfromSurface, 
                    global::System.Nullable<double> Original_FluidAbovePump, 
                    global::System.Nullable<global::System.DateTime> Original_FluidLevelDate, 
                    string Original_FluidLevelComment, 
                    string Original_FluidInertiaforAna, 
                    string Original_PumpingUnitManuf, 
                    string Original_PUnitType, 
                    global::System.Nullable<double> Original_GearboxSize, 
                    global::System.Nullable<double> Original_BeamRating, 
                    global::System.Nullable<double> Original_StrokeLength, 
                    string Original_PumpingUnitDescription, 
                    global::System.Nullable<double> Original_WristPin, 
                    global::System.Nullable<double> Original_ActualStrokLength, 
                    string Original_TorqueCalcMethod, 
                    string Original_UnitRotation, 
                    string Original_MotorType, 
                    global::System.Nullable<double> Original_MotorSize, 
                    global::System.Nullable<double> Original_SlipTorque, 
                    string Original_CrankID, 
                    global::System.Nullable<double> Original_CBTCBE, 
                    global::System.Nullable<double> Original_MeasMotorAmps, 
                    global::System.Nullable<double> Original_MeasMotorAmps1, 
                    global::System.Nullable<double> Original_MaxAirBalPres, 
                    global::System.Nullable<double> Original_MinAirBalPres, 
                    global::System.Nullable<double> Original_MaxEvent_HistoryRecords, 
                    global::System.Nullable<double> Original_C1Lead_Dist, 
                    string Original_C1LeadPrimaryWeightID, 
                    string Original_C1LeadAuxWeight, 
                    global::System.Nullable<double> Original_C1LagDist, 
                    string Original_C1LagPrimaryWeightID, 
                    string Original_C1Lag_AuxWeighID, 
                    global::System.Nullable<double> Original_C2LeadDist, 
                    string Original_C2LeadPrimaryWeighID, 
                    string Original_C2LeadAuxWeightID, 
                    global::System.Nullable<double> Original_C2LagDist, 
                    string Original_C2LagPrimaryWeightID, 
                    string Original_C2LaAuxWeightID, 
                    string Original_FacilitRecord, 
                    string Original_RodpumController, 
                    string Original_Internal_ID) {
            return this.Update(Original_LWNAME, NAVNAME, UniqueWellbore, UniqueWellboreID, UniqueIntervalID, CAOID, LongName, Group1Name, Group2Name, Group3Name, Group4Name, Group5Name, FacilityDescription, OutofScan, GeographicalXCoordinates, GeographicalYCoordinates, RodPumpControllerType, ControllerSubType, CommPort, CommProtocol, CommAddress, AlternateAddress, CommRetries, KeyOnDelay, KeyOffDelay, AlarmDelay, ClearDelay, WelltestAutoEval, TopPerfs, BottomPerfs, TACDepth, PlugBackTD, PumpMeasuredDepth, PumpVerticalDepth, PumpID, CasingValveOpen, CasingOD, CasingWeight, TubingOD, Oil, Water, Gas, LastWellTestDate, OilGravity, WaterSpGravity, GasSpGravity, TubingPres, TubingGrad, WheadTemp, CasingPres, CasingOilCut, FLevelfromSurface, FluidAbovePump, FluidLevelDate, FluidLevelComment, FluidInertiaforAna, PumpingUnitManuf, PUnitType, GearboxSize, BeamRating, StrokeLength, PumpingUnitDescription, WristPin, ActualStrokLength, TorqueCalcMethod, UnitRotation, MotorType, MotorSize, SlipTorque, CrankID, CBTCBE, MeasMotorAmps, MeasMotorAmps1, MaxAirBalPres, MinAirBalPres, MaxEvent_HistoryRecords, C1Lead_Dist, C1LeadPrimaryWeightID, C1LeadAuxWeight, C1LagDist, C1LagPrimaryWeightID, C1Lag_AuxWeighID, C2LeadDist, C2LeadPrimaryWeighID, C2LeadAuxWeightID, C2LagDist, C2LagPrimaryWeightID, C2LaAuxWeightID, FacilitRecord, RodpumController, Internal_ID, Original_LWNAME, Original_NAVNAME, Original_UniqueWellbore, Original_UniqueWellboreID, Original_UniqueIntervalID, Original_CAOID, Original_LongName, Original_Group1Name, Original_Group2Name, Original_Group3Name, Original_Group4Name, Original_Group5Name, Original_FacilityDescription, Original_OutofScan, Original_GeographicalXCoordinates, Original_GeographicalYCoordinates, Original_RodPumpControllerType, Original_ControllerSubType, Original_CommPort, Original_CommProtocol, Original_CommAddress, Original_AlternateAddress, Original_CommRetries, Original_KeyOnDelay, Original_KeyOffDelay, Original_AlarmDelay, Original_ClearDelay, Original_WelltestAutoEval, Original_TopPerfs, Original_BottomPerfs, Original_TACDepth, Original_PlugBackTD, Original_PumpMeasuredDepth, Original_PumpVerticalDepth, Original_PumpID, Original_CasingValveOpen, Original_CasingOD, Original_CasingWeight, Original_TubingOD, Original_Oil, Original_Water, Original_Gas, Original_LastWellTestDate, Original_OilGravity, Original_WaterSpGravity, Original_GasSpGravity, Original_TubingPres, Original_TubingGrad, Original_WheadTemp, Original_CasingPres, Original_CasingOilCut, Original_FLevelfromSurface, Original_FluidAbovePump, Original_FluidLevelDate, Original_FluidLevelComment, Original_FluidInertiaforAna, Original_PumpingUnitManuf, Original_PUnitType, Original_GearboxSize, Original_BeamRating, Original_StrokeLength, Original_PumpingUnitDescription, Original_WristPin, Original_ActualStrokLength, Original_TorqueCalcMethod, Original_UnitRotation, Original_MotorType, Original_MotorSize, Original_SlipTorque, Original_CrankID, Original_CBTCBE, Original_MeasMotorAmps, Original_MeasMotorAmps1, Original_MaxAirBalPres, Original_MinAirBalPres, Original_MaxEvent_HistoryRecords, Original_C1Lead_Dist, Original_C1LeadPrimaryWeightID, Original_C1LeadAuxWeight, Original_C1LagDist, Original_C1LagPrimaryWeightID, Original_C1Lag_AuxWeighID, Original_C2LeadDist, Original_C2LeadPrimaryWeighID, Original_C2LeadAuxWeightID, Original_C2LagDist, Original_C2LagPrimaryWeightID, Original_C2LaAuxWeightID, Original_FacilitRecord, Original_RodpumController, Original_Internal_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private BeamWellTableAdapter _beamWellTableAdapter;
        
        private Beam_Well_Group_ConfigurationTableAdapter _beam_Well_Group_ConfigurationTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BeamWellTableAdapter BeamWellTableAdapter {
            get {
                return this._beamWellTableAdapter;
            }
            set {
                this._beamWellTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public Beam_Well_Group_ConfigurationTableAdapter Beam_Well_Group_ConfigurationTableAdapter {
            get {
                return this._beam_Well_Group_ConfigurationTableAdapter;
            }
            set {
                this._beam_Well_Group_ConfigurationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._beamWellTableAdapter != null) 
                            && (this._beamWellTableAdapter.Connection != null))) {
                    return this._beamWellTableAdapter.Connection;
                }
                if (((this._beam_Well_Group_ConfigurationTableAdapter != null) 
                            && (this._beam_Well_Group_ConfigurationTableAdapter.Connection != null))) {
                    return this._beam_Well_Group_ConfigurationTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._beamWellTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._beam_Well_Group_ConfigurationTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(BeamWellDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._beamWellTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BeamWell.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._beamWellTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._beam_Well_Group_ConfigurationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Beam_Well_Group_Configuration.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._beam_Well_Group_ConfigurationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(BeamWellDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._beamWellTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BeamWell.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._beamWellTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._beam_Well_Group_ConfigurationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Beam_Well_Group_Configuration.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._beam_Well_Group_ConfigurationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(BeamWellDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._beam_Well_Group_ConfigurationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Beam_Well_Group_Configuration.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._beam_Well_Group_ConfigurationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._beamWellTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BeamWell.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._beamWellTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(BeamWellDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._beamWellTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._beamWellTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._beam_Well_Group_ConfigurationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._beam_Well_Group_ConfigurationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._beamWellTableAdapter != null)) {
                    revertConnections.Add(this._beamWellTableAdapter, this._beamWellTableAdapter.Connection);
                    this._beamWellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._beamWellTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._beamWellTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._beamWellTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._beamWellTableAdapter.Adapter);
                    }
                }
                if ((this._beam_Well_Group_ConfigurationTableAdapter != null)) {
                    revertConnections.Add(this._beam_Well_Group_ConfigurationTableAdapter, this._beam_Well_Group_ConfigurationTableAdapter.Connection);
                    this._beam_Well_Group_ConfigurationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._beam_Well_Group_ConfigurationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._beam_Well_Group_ConfigurationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._beam_Well_Group_ConfigurationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._beam_Well_Group_ConfigurationTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._beamWellTableAdapter != null)) {
                    this._beamWellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._beamWellTableAdapter]));
                    this._beamWellTableAdapter.Transaction = null;
                }
                if ((this._beam_Well_Group_ConfigurationTableAdapter != null)) {
                    this._beam_Well_Group_ConfigurationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._beam_Well_Group_ConfigurationTableAdapter]));
                    this._beam_Well_Group_ConfigurationTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591